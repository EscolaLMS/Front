{"version":3,"sources":["components/Consultations/ConsultationsHeader/ConsultationsFilter/ConsultationsFilterStyles.tsx","components/Consultations/ConsultationsHeader/ConsultationsFilter/index.tsx","components/Consultations/ConsultationsHeader/ConsultationsHeaderStyles.tsx","components/Consultations/ConsultationsHeader/index.tsx","components/Consultations/ConsultationsContext.ts","components/Consultations/ConsultationsContainer/Items/Item/index.tsx","components/Consultations/ConsultationsContainer/Items/index.tsx","components/Consultations/ConsultationsContainer/index.tsx","components/Consultations/ConsultationsProvider.tsx","pages/consultations/index.tsx","components/Pagination/index.tsx","components/CategoriesSection/index.tsx","hooks/useSearchParams.ts","components/Filters/Search/index.tsx","components/Filters/Tags/index.tsx","components/Filters/Categories/index.tsx"],"names":["ConsultationsFilterStyles","styled","_templateObject","_taggedTemplateLiteral","ConsultationsHeaderFilters","_getAllQueryValueByNa","_useSearchParams","useSearchParams","setPathname","setQueryParam","setQueryArrayParam","getAllQueryValueByName","getQueryValueByName","filters","useMemo","categories","map","val","Number","name","_jsxs","children","_jsx","className","FiltersTags","onReset","SearchFilter","onSubmit","value","CategoriesFilter","selectedCategories","catNumber","handleChange","ConsultationsHeaderStyles","_ref","StyledHeader","_ref2","theme","primaryColor","isMobile","_ref3","white","_ref4","Object","keys","length","paramsToObject","ConsultationsHeader","t","useTranslation","Title","level","ConsultationsContext","React","createContext","ConsultationsContainerItem","consultation","actions","ConsultationCard","ConsultationsContainerItems","_consultations$list","_consultations$list2","_consultations$list3","_consultations$list3$","_consultations$list4","_consultations$list4$","consultations","useContext","ConsultationsLoading","loading","consultationsMeta","list","meta","useTheme","style","display","justifyContent","Spin","color","_Fragment","Row","gap","marginBottom","data","Col","md","lg","xl","id","total","per_page","Pagination","perPage","currentPage","current_page","onPage","i","concat","ConsultationsContainer","_categoryTree$list","categoryTree","EscolaLMSContext","CategoriesSection","filter","category","icon","ConsultationsProvider","props","_useContext","fetchConsultations","fetchCategories","query","useEffect","createParamsObject","useCallback","params_","page","obj","has","Provider","ConsultationsPage","Layout","metaTitle","Container","StyledPagination","div","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","arguments","undefined","push","_ref3$pageNeighbours","pageNeighbours","lastPage","Math","ceil","totalNumbers","startPage","max","endPage","min","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","_toConsumableArray","fetchPageNumbers","href","onClick","e","preventDefault","Link","Text","size","StyledSection","section","_useState","useState","dots","_slicedToArray","history","useHistory","filteredCategories","count","Slider","settings","_objectSpread","arrows","infinite","speed","slidesToShow","slidesToScroll","centerMode","responsive","breakpoint","dotsPosition","slice","item","CategoryCard","src","alt","title","buttonText","subtitle","IconText","IconSquares","text","onButtonClick","variant","_useLocation","useLocation","search","pathname","URLSearchParams","get","getAll","key","set","delete","toString","objectToParam","params","searchParams","entries","forEach","Array","isArray","append","values","queryString","parse","Search","placeholder","StyledTags","css","_templateObject2","_filters$categories","_filters$tags","isButton","tags","renderText","_filters$categories2","indexOf","tagName","type","CloseIcon","Categories","mobile","backgroundColor","label","drawerTitle","fontSize"],"mappings":"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","file":"static/js/22.59bb3f55.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ConsultationsFilterStyles = styled(\"div\")`\n  display: flex;\n  row-gap: 30px;\n  flex-wrap: wrap;\n\n  .filters {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    align-items: center;\n    position: relative;\n  }\n\n  .selects-row {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    column-gap: 35px;\n    margin-left: auto;\n\n    @media (max-width: 991px) {\n      flex-direction: column;\n      justify-content: flex-start;\n      align-items: flex-start;\n      margin-top: 40px;\n    }\n    @media (max-width: 575px) {\n      row-gap: 15px;\n      margin-top: 20px;\n    }\n\n    .single-select--search {\n      .search-input-options {\n        display: none !important;\n      }\n      input {\n        background: transparent !important;\n        border-bottom: 1px solid #fff;\n        color: #fff;\n        border-radius: 0;\n      }\n\n      .fieldset {\n        border-color: transparent !important;\n      }\n\n      svg {\n        filter: brightness(0) invert(1);\n      }\n    }\n\n    .single-select--category {\n      min-width: 200px;\n    }\n  }\n`;\n","import { useMemo } from \"react\";\nimport CategoriesFilter from \"@/components/Filters/Categories\";\nimport SearchFilter from \"@/components/Filters/Search\";\nimport FiltersTags from \"@/components/Filters/Tags\";\nimport { FiltersState } from \"@/types/filters\";\nimport { ConsultationsFilterStyles } from \"./ConsultationsFilterStyles\";\nimport { useSearchParams } from \"../../../../hooks/useSearchParams\";\n\nconst ConsultationsHeaderFilters = () => {\n  const {\n    setPathname,\n    setQueryParam,\n    setQueryArrayParam,\n    getAllQueryValueByName,\n    getQueryValueByName,\n  } = useSearchParams();\n  const filters: FiltersState = useMemo(\n    () => ({\n      categories:\n        getAllQueryValueByName(\"categories[]\").map((val) => Number(val)) || [],\n      name: getQueryValueByName(\"name\") || \"\",\n    }),\n    [getAllQueryValueByName, getQueryValueByName]\n  );\n\n  return (\n    <ConsultationsFilterStyles>\n      <div className=\"tags\">\n        <FiltersTags\n          filters={filters}\n          onReset={() => {\n            setPathname();\n          }}\n        />\n      </div>\n      <div className=\"selects-row\">\n        <div className=\"single-select single-select--search\">\n          <SearchFilter\n            onSubmit={(value) => {\n              setQueryParam(\"name\", value);\n            }}\n          />\n        </div>\n        <div className=\"single-select single-select--category\">\n          <CategoriesFilter\n            selectedCategories={getAllQueryValueByName(\"categories[]\")?.map(\n              (catNumber) => Number(catNumber)\n            )}\n            handleChange={(categories) => {\n              setQueryArrayParam(\"categories[]\", categories);\n            }}\n          />\n        </div>\n      </div>\n    </ConsultationsFilterStyles>\n  );\n};\n\nexport default ConsultationsHeaderFilters;\n","import { FC, ReactNode } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport styled from \"styled-components\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { useSearchParams } from \"../../../hooks/useSearchParams\";\n\ninterface ConsultationsHeaderStylesProps {\n  children: ReactNode | ReactNode[];\n}\n\nconst ConsultationsHeaderStyles: FC<ConsultationsHeaderStylesProps> = ({\n  children,\n}) => {\n  const StyledHeader = styled(\"div\")<{\n    filters: API.ConsultationParams | undefined;\n  }>`\n    background: ${({ theme }) => theme.primaryColor};\n    padding: ${isMobile ? \"60px 20px 20px 20px\" : \"140px 40px 30px\"};\n    margin-bottom: ${isMobile ? \"100px\" : \"40px\"};\n\n    h1 {\n      color: ${({ theme }) => theme.white};\n    }\n\n    .tags {\n      display: ${({ filters }) =>\n        filters && Object.keys(filters).length > 2 ? \"block\" : \"none\"};\n      width: 100%;\n      margin-top: 35px;\n    }\n  `;\n  const { paramsToObject } = useSearchParams();\n  return <StyledHeader filters={paramsToObject}>{children}</StyledHeader>;\n};\n\nexport default ConsultationsHeaderStyles;\n","import { useTranslation } from \"react-i18next\";\nimport { Title } from \"@escolalms/components\";\nimport ConsultationsHeaderFilters from \"./ConsultationsFilter\";\nimport ConsultationsHeaderStyles from \"./ConsultationsHeaderStyles\";\n\nconst ConsultationsHeader = () => {\n  const { t } = useTranslation();\n\n  return (\n    <ConsultationsHeaderStyles>\n      <Title level={1}> {t(\"Menu.Consultations\")}</Title>\n      <ConsultationsHeaderFilters />\n    </ConsultationsHeaderStyles>\n  );\n};\n\nexport default ConsultationsHeader;\n","import React from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\n\ninterface ReactConsultationsList {\n  loading: boolean;\n  list?: API.PaginatedMetaList<API.Consultation>;\n  error?: API.DefaultResponseError;\n}\n\nexport const ConsultationsContext: React.Context<{\n  consultations?: ReactConsultationsList;\n  params?: API.ConsultationParams;\n  setParams?: (params: API.ConsultationParams) => void;\n}> = React.createContext({});\n","import { ReactNode } from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ConsultationCard from \"@/components/ConsultationCard\";\n\ninterface Props {\n  consultation: API.Consultation;\n  actions?: ReactNode;\n}\n\nconst ConsultationsContainerItem = ({ consultation, actions }: Props) => {\n  return <ConsultationCard consultation={consultation} />;\n};\n\nexport default ConsultationsContainerItem;\n","import { useContext } from \"react\";\nimport { Spin } from \"@escolalms/components/lib/components/atoms/Spin/Spin\";\nimport { useTheme } from \"styled-components\";\nimport { Col, Row } from \"react-grid-system\";\nimport { ConsultationsContext } from \"@/components/Consultations/ConsultationsContext\";\nimport ConsultationsContainerItem from \"./Item\";\nimport Pagination from \"@/components/Pagination\";\nimport { useSearchParams } from \"../../../../hooks/useSearchParams\";\n\nconst ConsultationsContainerItems = () => {\n  const { consultations } = useContext(ConsultationsContext);\n  const { setQueryParam } = useSearchParams();\n  const ConsultationsLoading = consultations?.loading;\n  const consultationsMeta = consultations?.list?.meta;\n  const theme = useTheme();\n\n  if (ConsultationsLoading) {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Spin color={theme.primaryColor} />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Row\n        style={{\n          gap: \"30px 0\",\n          marginBottom: \"30px\",\n        }}\n      >\n        {consultations?.list?.data.map((consultation) => (\n          <Col md={6} lg={4} xl={3} key={consultation.id}>\n            <ConsultationsContainerItem consultation={consultation} />\n          </Col>\n        ))}\n      </Row>\n      {consultationsMeta &&\n        (Number(consultations?.list?.meta?.total) || 0) >\n          (Number(consultations?.list?.meta?.per_page) || 0) && (\n          <Pagination\n            total={consultationsMeta.total}\n            perPage={Number(consultationsMeta.per_page)}\n            currentPage={consultationsMeta.current_page}\n            onPage={(i) => setQueryParam(\"page\", `${i}`)}\n          />\n        )}\n    </>\n  );\n};\n\nexport default ConsultationsContainerItems;\n","import { useContext } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport CategoriesSection from \"../../CategoriesSection\";\nimport ConsultationsHeader from \"../ConsultationsHeader\";\nimport ConsultationsContainerItems from \"./Items\";\n\nconst ConsultationsContainer = () => {\n  const { categoryTree } = useContext(EscolaLMSContext);\n\n  return (\n    <>\n      <ConsultationsHeader />\n      <ConsultationsContainerItems />\n      {categoryTree && (\n        <>\n          <CategoriesSection\n            categories={\n              categoryTree.list?.filter((category) => !!category.icon) || []\n            }\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ConsultationsContainer;\n","import { PropsWithChildren, useCallback, useContext, useEffect } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { ConsultationsContext } from \"./ConsultationsContext\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { useSearchParams } from \"../../hooks/useSearchParams\";\n\nconst ConsultationsProvider: React.FC<PropsWithChildren> = (props) => {\n  const { fetchConsultations, consultations, fetchCategories } =\n    useContext(EscolaLMSContext);\n  const { children } = props;\n  const { query, getQueryValueByName, getAllQueryValueByName, setPathname } =\n    useSearchParams();\n\n  useEffect(() => {\n    // Fetch categories when we start from consultations page\n    fetchCategories();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const createParamsObject = useCallback(() => {\n    const params_ = {\n      page: Number(getQueryValueByName(\"page\")) || 1,\n      per_page: Number(getQueryValueByName(\"per_page\")) || 8,\n    };\n    const categories = getAllQueryValueByName(\"categories[]\");\n    const name = getQueryValueByName(\"name\");\n    if (name) {\n      // @ts-ignore\n      params_[\"name\"] = name;\n    }\n    if (categories && categories.length) {\n      // @ts-ignore\n      params_[\"categories[]\"] = categories;\n    }\n    return params_;\n  }, [getAllQueryValueByName, getQueryValueByName]);\n\n  useEffect(() => {\n    const obj = createParamsObject() as API.ConsultationParams;\n    setPathname(obj);\n    if (query.has(\"page\")) {\n      fetchConsultations(obj);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  return (\n    <ConsultationsContext.Provider value={{ consultations }}>\n      {children}\n    </ConsultationsContext.Provider>\n  );\n};\n\nexport default ConsultationsProvider;\n","import Layout from \"@/components/_App/Layout\";\nimport ConsultationsContainer from \"@/components/Consultations/ConsultationsContainer\";\nimport ConsultationsProvider from \"@/components/Consultations/ConsultationsProvider\";\nimport { useTranslation } from \"react-i18next\";\nimport Container from \"@/components/Container\";\n\nconst ConsultationsPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Layout metaTitle={t(\"ConsultationsPageMeta\")}>\n      <ConsultationsProvider>\n        <section className=\"consultations-page\">\n          <Container>\n            <ConsultationsContainer />\n          </Container>\n        </section>\n      </ConsultationsProvider>\n    </Layout>\n  );\n};\n\nexport default ConsultationsPage;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledPagination = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  a {\n    text-decoration: none !important;\n  }\n  .arrow {\n    width: 10px;\n    height: 10px;\n    border-left: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ${({ theme }) => theme.primaryColor};\n    margin: 0 10px;\n    &--left {\n      transform: rotate(45deg);\n    }\n    &--right {\n      transform: rotate(-135deg);\n    }\n  }\n  .number {\n    margin: 0 8px;\n    p {\n      opacity: 0.5;\n      &.current {\n        color: ${({ theme }) => theme.primaryColor}!important;\n        font-weight: 700;\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from: number, to: number, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nconst Pagination: React.FC<{\n  currentPage: number;\n  total: number;\n  perPage: number;\n  onPage: (page: number) => void;\n  pageNeighbours?: number;\n}> = ({ currentPage, total, perPage, onPage, pageNeighbours = 2 }) => {\n  const lastPage = Math.ceil(total / perPage);\n\n  const fetchPageNumbers = () => {\n    /**\n     * totalNumbers: the total page numbers to show on the control\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n     */\n    const totalNumbers = pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (lastPage > totalBlocks) {\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(lastPage - 1, currentPage + pageNeighbours);\n      let pages: (string | number)[] = range(startPage, endPage);\n\n      /**\n       * hasLeftSpill: has hidden pages to the left\n       * hasRightSpill: has hidden pages to the right\n       * spillOffset: number of hidden pages either to the left or to the right\n       */\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = lastPage - endPage > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case hasLeftSpill && !hasRightSpill: {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (10)\n        case !hasLeftSpill && hasRightSpill: {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n        case hasLeftSpill && hasRightSpill:\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, lastPage];\n    } else if (currentPage < lastPage && currentPage === 1) {\n      return [...range(1, lastPage), RIGHT_PAGE];\n    } else if (currentPage > 1 && currentPage !== lastPage) {\n      return [LEFT_PAGE, ...range(1, lastPage), RIGHT_PAGE];\n    } else if (currentPage > 1 && currentPage === lastPage) {\n      return [LEFT_PAGE, ...range(1, lastPage)];\n    }\n\n    return range(1, lastPage);\n  };\n\n  return (\n    <StyledPagination>\n      {fetchPageNumbers().map((page) => {\n        if (page === LEFT_PAGE) {\n          return (\n            <a\n              href=\"#!prev_page\"\n              className=\"prev page-numbers\"\n              onClick={(e) => {\n                e.preventDefault();\n                onPage(currentPage <= 1 ? 1 : currentPage - 1);\n              }}\n            >\n              <div className=\"arrow arrow--left\" />\n            </a>\n          );\n        }\n        if (page === RIGHT_PAGE) {\n          return (\n            <a\n              href=\"#!next_page\"\n              className=\"next page-numbers\"\n              onClick={(e) => {\n                e.preventDefault();\n                onPage(currentPage === lastPage ? lastPage : currentPage + 1);\n              }}\n            >\n              <div className=\"arrow arrow--right\" />\n            </a>\n          );\n        }\n        return (\n          <Link\n            onClick={(e) => {\n              e.preventDefault();\n              onPage(Number(page));\n            }}\n            to={`#!page-${Number(page)}`}\n            key={`#${Number(page)}`}\n            className=\"number\"\n          >\n            <Text\n              className={Number(page) === currentPage ? \"current\" : \"\"}\n              size=\"16\"\n              aria-current=\"page\"\n            >\n              {Number(page)}\n            </Text>\n          </Link>\n        );\n      })}\n    </StyledPagination>\n  );\n};\n\nexport default Pagination;\n","import { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { IconText } from \"@escolalms/components/lib/components/atoms/IconText/IconText\";\nimport { Slider } from \"@escolalms/components/lib/components/atoms/Slider/Slider\";\nimport { CategoryCard } from \"@escolalms/components/lib/components/molecules/CategoryCard/CategoryCard\";\nimport { isMobile } from \"react-device-detect\";\nimport { useTranslation } from \"react-i18next\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { IconSquares } from \"../../icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Col, Row } from \"react-grid-system\";\nimport { Settings } from \"react-slick\";\nimport Container from \"../Container\";\n\ntype Props = {\n  categories: API.Category[];\n};\n\nconst StyledSection = styled.section`\n  overflow: hidden;\n  padding: 60px 0 0;\n  @media (max-width: 768px) {\n    padding: 30px 0;\n  }\n  h3 {\n    text-align: center;\n    margin-bottom: 30px;\n  }\n  .slider-title {\n    @media (max-width: 575px) {\n      padding-right: 45%;\n    }\n  }\n  .categories-slider {\n    .slick-dots {\n      bottom: 40px;\n    }\n  }\n  .slick-track {\n    display: flex;\n    gap: 0 20px;\n  }\n  .slick-slide {\n    @media (max-width: 991px) {\n      display: flex !important;\n      justify-content: center;\n    }\n  }\n  .single-category-slide {\n    margin: 0 8px;\n\n    @media (max-width: 991px) {\n      margin: 0 auto;\n      min-width: 300px;\n    }\n  }\n  .category-card-icon {\n    img {\n      margin: 0 auto;\n      display: block;\n      max-height: 70px;\n    }\n  }\n`;\n\nconst CategoriesSection: React.FC<Props> = ({ categories }) => {\n  const [dots] = useState(true);\n  const { t } = useTranslation();\n  const history = useHistory();\n  const categoriesSliderSettings: Settings = {\n    arrows: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 1,\n    centerMode: false,\n    responsive: [\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 1,\n        },\n      },\n    ],\n  };\n  const filteredCategories = categories.filter(\n    (category) => category.count && category.count > 0\n  );\n  return (\n    <StyledSection>\n      <Container>\n        <Title level={3}>\n          <strong>{t<string>(\"Homepage.CategoriesTitle\")}</strong>\n        </Title>\n        {isMobile ? (\n          <div className=\"categories-slider\">\n            <Slider\n              settings={{ ...categoriesSliderSettings, dots }}\n              dotsPosition=\"bottom\"\n            >\n              {filteredCategories.slice(-4).map((item) => (\n                <div className=\"single-category-slide\" key={item.id}>\n                  <CategoryCard\n                    icon={<img src={item.icon} alt={item.name} />}\n                    title={item.name}\n                    buttonText={t(\"Homepage.CategoryBtnText\")}\n                    subtitle={\n                      <IconText\n                        icon={<IconSquares />}\n                        text={`${t(\"CoursesLength\", {\n                          count: item.count,\n                        })}`}\n                      />\n                    }\n                    onButtonClick={() =>\n                      history.push(`/courses/?categories[]=${item.id}`)\n                    }\n                    variant=\"gradient\"\n                  />\n                </div>\n              ))}\n            </Slider>\n          </div>\n        ) : (\n          <Row>\n            {filteredCategories.slice(-4).map((item) => (\n              <Col md={3} key={item.id}>\n                <CategoryCard\n                  icon={<img src={item.icon} alt={item.name} />}\n                  title={item.name}\n                  buttonText={t(\"Homepage.CategoryBtnText\")}\n                  subtitle={\n                    <IconText\n                      icon={<IconSquares />}\n                      text={`${t(\"CoursesLength\", {\n                        count: item.count,\n                      })}`}\n                    />\n                  }\n                  onButtonClick={() =>\n                    history.push(`/courses/?categories[]=${item.id}`)\n                  }\n                  variant=\"gradient\"\n                />\n              </Col>\n            ))}\n          </Row>\n        )}\n      </Container>\n    </StyledSection>\n  );\n};\n\nexport default CategoriesSection;\n","import queryString from \"query-string\";\nimport { useCallback, useMemo } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useSearchParams = () => {\n  const { search, pathname } = useLocation();\n  const history = useHistory();\n\n  const query = useMemo(() => new URLSearchParams(search), [search]);\n\n  const getQueryValueByName = useCallback(\n    (name: string) => {\n      return new URLSearchParams(search).get(name);\n    },\n    [search]\n  );\n\n  const getAllQueryValueByName = useCallback(\n    (name: string) => {\n      return new URLSearchParams(search).getAll(name);\n    },\n    [search]\n  );\n\n  const setQueryParam = useCallback(\n    (key: string, value: string) => {\n      if (!value || value === \"\") {\n        query.delete(key);\n      } else {\n        query.set(key, value);\n      }\n      history.push({\n        pathname,\n        search: query.toString(),\n      });\n    },\n    [history, pathname, query]\n  );\n\n  const objectToParam = useCallback((params: Object) => {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (Array.isArray(value)) {\n        value.forEach((val) => {\n          searchParams.append(`${key}`, val);\n        });\n      } else {\n        searchParams.append(key, value);\n      }\n    });\n    return searchParams.toString();\n  }, []);\n\n  const setPathname = useCallback(\n    (params?: Object) => {\n      history.push({\n        pathname,\n        search: params ? objectToParam(params) : undefined,\n      });\n    },\n    [history, objectToParam, pathname]\n  );\n\n  const setQueryArrayParam = useCallback(\n    (key: string, values: string[] | number[]) => {\n      query.delete(key);\n      values.forEach((value) => {\n        query.append(key, `${value}`);\n      });\n      history.push({\n        pathname,\n        search: query.toString(),\n      });\n    },\n    [history, pathname, query]\n  );\n\n  const paramsToObject = useMemo(() => {\n    return queryString.parse(search);\n  }, [search]);\n\n  return {\n    query,\n    getQueryValueByName,\n    getAllQueryValueByName,\n    setQueryParam,\n    setPathname,\n    setQueryArrayParam,\n    paramsToObject,\n    objectToParam,\n  };\n};\n","import { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Search from \"@escolalms/components/lib/components/molecules/Search/Search\";\n// import { FiltersContext } from \"@/components/Filters/FiltersProvider\";\n\ninterface SearchFilterProps {\n  onSubmit: (value: string) => void;\n}\n\nconst SearchFilter: FC<SearchFilterProps> = ({ onSubmit }) => {\n  const { t } = useTranslation();\n\n  return <Search placeholder={t(\"Filters.Search\")} onSubmit={onSubmit} />;\n};\n\nexport default SearchFilter;\n","import { FC, useCallback, useContext } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport styled, { css } from \"styled-components\";\nimport { isMobile } from \"react-device-detect\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { CloseIcon } from \"../../../icons\";\nimport { FiltersState } from \"@/types/filters\";\n\nconst StyledTags = styled(\"div\")`\n  display: flex;\n\n  .tags-list {\n    display: flex;\n    max-width: 100%;\n    overflow-x: auto;\n    overflow-y: hidden;\n    justify-content: flex-start;\n    align-items: center;\n    column-gap: 10px;\n    padding-bottom: 5px;\n\n    ::-webkit-scrollbar {\n      height: 4px;\n      width: 4px;\n      border: 1px solid transparent;\n    }\n    ::-webkit-scrollbar-track {\n      border-radius: 0;\n      background: rgba(255, 255, 255, 0.2);\n    }\n    ::-webkit-scrollbar-thumb {\n      border-radius: 0;\n      background: #ffffff;\n    }\n\n    .tag {\n      border-width: 2px;\n      border-style: solid;\n      margin-bottom: 0;\n      padding: 10px 20px;\n      line-height: 0.9;\n      text-align: center;\n      max-height: 50px;\n      min-height: 50px;\n      display: flex;\n      align-items: center;\n      box-sizing: border-box;\n      justify-content: center;\n      border-color: ${({ theme }) =>\n        isMobile ? theme.primaryColor : theme.white};\n      color: ${({ theme }) => (isMobile ? theme.primaryColor : theme.white)};\n    }\n  }\n  .clear-btn {\n    appearance: none;\n    background: transparent;\n    border: none;\n    outline: none;\n    margin-left: 15px;\n    cursor: pointer;\n    &--desktop {\n      display: ${isMobile ? \"none\" : \"block\"};\n    }\n    ${isMobile &&\n    css`\n      svg {\n        path {\n          fill: ${({ theme }) => theme.primaryColor};\n        }\n      }\n    `}\n  }\n`;\n\ninterface FiltersTagsProps {\n  filters: FiltersState;\n  onReset: () => void;\n}\n\nconst FiltersTags: FC<FiltersTagsProps> = ({ filters, onReset }) => {\n  const { categoryTree } = useContext(EscolaLMSContext);\n  const isButton =\n    !!filters?.categories?.length || !!filters?.name || !!filters?.tags?.length;\n\n  const renderText = useCallback(\n    (value: string) => <Text className=\"tag\">{value}</Text>,\n    []\n  );\n\n  return (\n    <StyledTags>\n      <div className=\"tags-list\">\n        {!!filters?.categories &&\n          categoryTree.list\n            ?.filter((item) => filters.categories?.indexOf(item.id) > -1)\n            .map((category) => renderText(category.name))}\n        {!!filters?.tags && filters?.tags.map((tagName) => renderText(tagName))}\n        {!!filters?.name && renderText(filters.name)}\n      </div>\n      {isButton && (\n        <button\n          type=\"button\"\n          onClick={() => {\n            onReset();\n          }}\n          className=\"clear-btn clear-btn--desktop\"\n        >\n          <CloseIcon />\n        </button>\n      )}\n    </StyledTags>\n  );\n};\n\nexport default FiltersTags;\n","import { FC, useContext } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"styled-components\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport Categories from \"@escolalms/components/lib/components/molecules/Categories/Categories\";\nimport Title from \"@escolalms/components/lib/components/atoms/Typography/Title\";\n\ninterface CategoriesFilterProps {\n  selectedCategories: number[];\n  handleChange: (categories: number[]) => void;\n}\n\nconst CategoriesFilter: FC<CategoriesFilterProps> = ({\n  selectedCategories,\n  handleChange,\n}) => {\n  const { categoryTree } = useContext(EscolaLMSContext);\n  const theme = useTheme();\n  const { t } = useTranslation();\n\n  return (\n    <Categories\n      mobile={isMobile}\n      backgroundColor={theme.primaryColor}\n      categories={categoryTree.list || []}\n      label={t(\"Filters.Category\")}\n      selectedCategories={selectedCategories}\n      drawerTitle={\n        <Title\n          level={5}\n          style={{\n            fontSize: \"14px\",\n          }}\n        >\n          {t(\"Filters.Category\")}\n        </Title>\n      }\n      handleChange={handleChange}\n    />\n  );\n};\n\nexport default CategoriesFilter;\n"],"sourceRoot":""}