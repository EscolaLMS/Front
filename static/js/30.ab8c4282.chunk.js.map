{"version":3,"sources":["pages/register/index.tsx"],"names":["StyledRegisterPage","styled","div","StyledLink","Link","theme","primaryColor","StyledContent","RegisterPage","search","useLocation","useContext","EscolaLMSContext","user","socialAuthorize","useState","view","setView","modalVisible","setModalVisible","settings","email","history","useHistory","token","split","t","useTranslation","footerFromApi","value","config","registerWarning","fieldLabels","size","to","setTimeout","push","loading","useEffect","EmailActivation","justify","md","className","level","type","onClick","metaTitle","onClose","visible","animation","maskAnimation","destroyOnClose","width","mode","style","paddingBottom","isMobile","return_url","mobile","onLoginLink","onSuccess"],"mappings":"0RAgBMA,EAAqBC,UAAOC,IAAV,sIAOlBC,EAAaF,kBAAOG,IAAPH,CAAH,qDACL,qBAAGI,MAAkBC,YAArB,IAGLC,EAAgBN,UAAOC,IAAV,80BAgBF,qBAAGG,MAAkBC,YAArB,IAuJFE,UAzHM,WAAO,IAAD,IACjBC,EAAWC,cAAXD,OACR,EAAkCE,qBAAWC,oBAArCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,gBACd,EAAwBC,mBAAsC,IAA9D,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACQC,EAAaT,qBAAWC,oBAAxBQ,SAER,EAAgBL,mBAAS,OAAlBM,EAAP,oBACMC,EAAUC,cACVC,EAAQf,EAAOgB,MAAM,WAAW,GAC9BC,EAAMC,cAAND,EAEFE,EAAqB,OAAGR,QAAH,IAAGA,GAAH,UAAGA,EAAUS,aAAb,iBAAG,EAAiBC,cAApB,aAAG,EAAyBC,gBAEjDC,EAAc,CAClB,kCACE,eAAC,OAAD,CAAMC,KAAK,KAAX,UACGP,EAAE,kBAAmB,IACtB,cAACvB,EAAD,CAAY+B,GAAG,kBAAf,SAAkCR,EAAE,sBAGxC,oCACE,eAAC,OAAD,CAAMO,KAAK,KAAX,UACGP,EAAE,kBAAmB,IACtB,cAACvB,EAAD,CAAY+B,GAAG,kBAAf,SAAkCR,EAAE,wBAItCF,IACFV,EAAgBU,GAChBW,YAAW,WACTb,EAAQc,KAAK,IACd,GAAE,MAGAvB,EAAKwB,SAAYb,IAASX,EAAKgB,OAClCP,EAAQc,KAAK,KAGfE,qBAAU,WACRnB,EAAyB,YAATH,EACjB,GAAE,CAACA,IAEJ,IAAMuB,EAAkB,WACtB,OACE,cAAChC,EAAD,UACE,cAAC,YAAD,UACE,cAAC,MAAD,CAAKiC,QAAS,SAAd,SACE,cAAC,MAAD,CAAKC,GAAI,GAAT,SACE,sBAAKC,UAAU,oBAAf,UACE,cAAC,QAAD,CAAOA,UAAU,cAAcC,MAAO,EAAtC,SACGjB,EAAE,2BAEL,cAAC,mBAAD,UACGA,EAAE,uBAAwB,CAAEL,YAE/B,cAAC,mBAAD,UACGK,EAAE,8BAGL,cAAC,OAAD,CAAMgB,UAAU,YAAYT,KAAK,KAAjC,SACE,wBAAQW,KAAK,SAASC,QAAS,kBAAM5B,EAAQ,WAAd,EAA/B,SACGS,EAAE,+CASpB,EAED,OACE,eAAC,IAAD,CAAQoB,UAAWpB,EAAE,oBAArB,UACGE,GACC,eAAC,QAAD,CACEmB,QAAS,kBAAM5B,GAAgB,EAAtB,EACT6B,QAAS9B,EACT+B,UAAU,OACVC,cAAc,OACdC,gBAAgB,EAChBC,MAAO,IANT,UAQE,cAAC,QAAD,CAAOT,MAAO,EAAGD,UAAU,cAA3B,SACGhB,EAAE,aAEL,cAAC,mBAAD,UAAmBE,IACnB,cAAC,SAAD,CAAQyB,KAAK,UAAUR,QAAS,kBAAM1B,GAAgB,EAAtB,EAAhC,SACGO,EAAE,kBAKC,YAATV,EACC,cAAChB,EAAD,UACE,cAAC,YAAD,CACEsD,MAAO,CACLC,cAAc,GAAD,OAAKC,WAAW,OAAS,UAF1C,SAKE,cAAC,MAAD,CAAKhB,QAAQ,SAAb,SACE,cAAC,MAAD,CAAKC,GAAI,GAAT,SACE,cAAC,eAAD,CACEgB,WAAY,iBACZzB,YAAaA,EACb0B,OAAQF,WACRG,YAAa,kBAAMrC,EAAQc,KAAK,SAAnB,EACbwB,UAAW,kBAAM3C,EAAQ,UAAd,YAOrB,cAACsB,EAAD,MAIP,C","file":"static/js/30.ab8c4282.chunk.js","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Layout from \"@/components/_App/Layout\";\nimport { isMobile } from \"react-device-detect\";\nimport { useLocation } from \"react-router-dom\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { RegisterForm } from \"@escolalms/components\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { MarkdownRenderer } from \"@escolalms/components/lib/components/molecules/MarkdownRenderer/MarkdownRenderer\";\nimport { Modal } from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { Col, Container, Row } from \"react-grid-system\";\n\nconst StyledRegisterPage = styled.div`\n  min-height: calc(100vh - 500px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.primaryColor}!important;\n`;\n\nconst StyledContent = styled.div`\n  .content-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-direction: column;\n\n    .email-title {\n      text-align: center;\n    }\n\n    .email-main-text {\n      text-align: center;\n      margin: 25px 0 85px;\n      font-weight: 700;\n      span {\n        color: ${({ theme }) => theme.primaryColor};\n      }\n    }\n\n    .email-help-text {\n      margin: 0 auto 20px 0;\n      ul {\n        padding-left: 15px;\n        margin-left: 0;\n        li {\n          font-size: 12px;\n        }\n      }\n    }\n\n    .back-text {\n      margin: 0 auto 0 0;\n      button {\n        appearance: none;\n        outline: none;\n        border: none;\n        background: transparent;\n        text-decoration: underline;\n        font-size: 16px;\n        cursor: pointer;\n      }\n    }\n  }\n`;\n\nconst RegisterPage = () => {\n  const { search } = useLocation();\n  const { user, socialAuthorize } = useContext(EscolaLMSContext);\n  const [view, setView] = useState<\"\" | \"success\" | \"register\">(\"\");\n  const [modalVisible, setModalVisible] = useState(false);\n  const { settings } = useContext(EscolaLMSContext);\n\n  const [email] = useState(\"aaa\");\n  const history = useHistory();\n  const token = search.split(\"?token=\")[1];\n  const { t } = useTranslation();\n\n  const footerFromApi: string = settings?.value?.config?.registerWarning;\n\n  const fieldLabels = {\n    \"AdditionalFields.Privacy Policy\": (\n      <Text size=\"14\">\n        {t(\"AcceptCheckbox\")}{\" \"}\n        <StyledLink to=\"/privacy-policy\">{t(\"PrivacyPolicy\")}</StyledLink>\n      </Text>\n    ),\n    \"AdditionalFields.Terms of Service\": (\n      <Text size=\"14\">\n        {t(\"AcceptCheckbox\")}{\" \"}\n        <StyledLink to=\"/privacy-policy\">{t(\"TermsOfService\")}</StyledLink>\n      </Text>\n    ),\n  };\n  if (token) {\n    socialAuthorize(token);\n    setTimeout(() => {\n      history.push(\"/\");\n    }, 1000);\n  }\n\n  if (!user.loading && !token && user.value) {\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    setModalVisible(view === \"success\");\n  }, [view]);\n\n  const EmailActivation = () => {\n    return (\n      <StyledContent>\n        <Container>\n          <Row justify={\"center\"}>\n            <Col md={12}>\n              <div className=\"content-container\">\n                <Title className=\"email-title\" level={3}>\n                  {t(\"EmailActivation.Title\")}\n                </Title>\n                <MarkdownRenderer>\n                  {t(\"EmailActivation.Text\", { email })}\n                </MarkdownRenderer>\n                <MarkdownRenderer>\n                  {t(\"EmailActivation.HelpText\")}\n                </MarkdownRenderer>\n\n                <Text className=\"back-text\" size=\"14\">\n                  <button type=\"button\" onClick={() => setView(\"register\")}>\n                    {t(\"EmailActivation.RegisterAgain\")}\n                  </button>\n                </Text>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </StyledContent>\n    );\n  };\n\n  return (\n    <Layout metaTitle={t(\"LoginAndRegister\")}>\n      {footerFromApi && (\n        <Modal\n          onClose={() => setModalVisible(false)}\n          visible={modalVisible}\n          animation=\"zoom\"\n          maskAnimation=\"fade\"\n          destroyOnClose={true}\n          width={800}\n        >\n          <Title level={4} className=\"modal-title\">\n            {t(\"Warning\")}\n          </Title>\n          <MarkdownRenderer>{footerFromApi}</MarkdownRenderer>\n          <Button mode=\"outline\" onClick={() => setModalVisible(false)}>\n            {t(\"I'm aware\")}\n          </Button>\n        </Modal>\n      )}\n\n      {view !== \"success\" ? (\n        <StyledRegisterPage>\n          <Container\n            style={{\n              paddingBottom: `${isMobile ? \"50px\" : \"100px\"}`,\n            }}\n          >\n            <Row justify=\"center\">\n              <Col md={12}>\n                <RegisterForm\n                  return_url={\"#/email-verify\"}\n                  fieldLabels={fieldLabels}\n                  mobile={isMobile}\n                  onLoginLink={() => history.push(\"/login\")}\n                  onSuccess={() => setView(\"success\")}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </StyledRegisterPage>\n      ) : (\n        <EmailActivation />\n      )}\n    </Layout>\n  );\n};\n\nexport default RegisterPage;\n"],"sourceRoot":""}