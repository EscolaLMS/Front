{"version":3,"sources":["components/Errorbox/index.tsx","components/Course/CourseProgramLessonsStyles.tsx","components/Course/CourseFinishModal/index.tsx","components/Course/CourseDownloads/index.tsx","components/Course/CourseProgramPlayer/index.tsx","components/Course/CourseProgramLessons.tsx","hooks/useCourseProgram.ts","hooks/useBookmarkNotes.ts","hooks/useCourseBreakPoint.ts","pages/course/index.tsx","components/Breadcrumbs/index.tsx","types/questionnaire.ts","utils/questionnaires.ts","components/QuestionBox/index.tsx","components/RateCourse/index.tsx"],"names":["StyledErrorPage","styled","div","_templateObject","_taggedTemplateLiteral","ErrorBox","_ref","error","goTo","routeRoutes","courses","goToText","alternativeButton","t","useTranslation","history","useHistory","buttonText","_jsx","Layout","children","_jsxs","Text","size","className","Button","mode","onClick","push","StyledCourse","section","CourseFinishModal","courseId","state","setState","useState","show","step","loading","questionnaires","setQuestionnaires","fetchQuestionnaires","fetchQuestionnaire","useContext","EscolaLMSContext","handleClose","useCallback","prevState","length","timer","setTimeout","clearTimeout","useEffect","getQuestionnaires","onSucces","items","onFinish","_Fragment","Spin","myProfile","RateCourse","course","QuestionnaireModelType","COURSE","visible","onClose","questionnaire","StyledDownloads","CourseDownloads","resources","subtitle","mappedResources","map","item","href","url","fileName","name","Downloads","title","downloads","CourseProgramPlayer","_topic$json","_topic$resources","lesson","topic","disableNextTopicButton","getNextPrevTopic","onXAPI","columnWidth","summary","introduction","MarkdownRenderer","style","json","wrapperStyle","CourseProgramContent","isThereAnotherTopic","Boolean","Number","id","event","Row","Col","sm","md","lg","CourseProgramLessons","program","onNextTopic","onPrevTopic","isNextTopicButtonDisabled","sendProgress","useLessonProgram","showFinishModal","setShowFinishModal","onCompleteTopic","topicID","useParams","h5pProgress","lastH5pEvent","setLastH5pEvent","onCompleteH5pTopic","clearState","arguments","undefined","_h5pProgress","String","statement","then","console","log","topic_id","status","_event$statement","_event$statement$verb","_event$statement2","_event$statement2$ver","verb","useCourseProgram","topicBookmark","handleBookmark","topicNote","_bookmarkNotes$list2","_bookmarkNotes$list4","bookmarkNotes","fetchBookmarkNotes","createBookmarkNote","deleteBookmarkNote","useMemo","_bookmarkNotes$list","list","data","filter","bookmarkable_id","value","_bookmarkNotes$list3","toast","success","bookmarkable_type","API","BookmarkableType","Topic","useBookmarkNotes","finishedTopicIndex","courseProgressDetails","progress","location","useLocation","startWithBreakPoint","pathname","split","getCourseProgress","_courseProgressDetail","_progress$value$find","byId","find","courseProgress","topicBreakPoint","currentProgress","lastStartedLesson","CourseProgressItemElementStatus","IN_PROGRESS","sort","a","b","Date","started_at","getTime","INCOMPLETE","findLessonBreakPoint","lessons","topics","some","concat","findIndex","ttopic","COMPLETE","useCourseBreakPoint","window","scrollTo","top","behavior","resetProgress","flatMap","Container","Breadcrumbs","Link","to","home","Title","level","CourseSidebar","topicId","onCourseFinish","CourseTopNav","mobile","isMobile","onNext","isFinished","onPrev","addNotes","newNoteData","type","currentNote","addBookmarks","bookmarkBtnText","onBookmarkClick","hasPrev","hasNext","CourseProgramScorm","sco","scorm_sco","uuid","ScormPlayer","React","Fragment","CourseProgram","_program$value","fetchProgram","fetchCourseProgress","Preloader","scorm_sco_id","metaTitle","StyledBreadcrumbs","theme","gray5","gray2","_ref2","BreadCrumbs","QuestionType","async","response","questionnairesWithCombinedQuestions","Promise","all","res","questionnaireId","questions","getQuestionnaire","combinedQuestions","reduce","result","element","matchingElement","updatedElement","rate","note","position","getAverageRate","reviewQuestions","sum","avg_rate","toFixed","getCourseQuestionnaireReviewQuestion","_ref3","_questionnaires$find","_questionnaires$find$","questionType","public_answers","QuestionBox","textareaPlaceholder","withStarsRating","handleSubmit","description","answer","setAnswer","onSubmit","submit","Rate","prev","header","TextArea","placeholder","marginTop","onChange","target","Stack","$gap","width","alignSelf","_questionnaire$questi","sendQuestionnaireAnswer","showLastScreen","handleSendAnswer","question_id","visible_on_front","rating","handleSave","Modal","animation","maskAnimation","destroyOnClose","paddingTop","paddingBottom","textAlign","REVIEW"],"mappings":"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","file":"static/js/40.3cbb0332.chunk.js","sourcesContent":["import Layout from \"@/components/_App/Layout\";\nimport { Button, Text } from \"@escolalms/components\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport routeRoutes from \"@/components/Routes/routes\";\n\nconst StyledErrorPage = styled.div`\n  min-height: calc(100vh - 150px);\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  .buttons-block {\n    display: grid;\n    gap: 8px;\n  }\n`;\n\ninterface AlternativeButton {\n  goTo: string;\n  goToText: string;\n}\n\ninterface Props {\n  error: string;\n  goTo?: string;\n  goToText?: string;\n  alternativeButton?: AlternativeButton;\n}\n\nconst ErrorBox: React.FC<Props> = ({\n  error,\n  goTo = routeRoutes.courses,\n  goToText,\n  alternativeButton,\n}) => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const buttonText = goToText ?? t(\"CoursePage.SeeOtherCourses\");\n\n  return (\n    <Layout>\n      <StyledErrorPage>\n        <Text size=\"16\">\n          <strong>{t(\"CoursePage.ErrorOccurred\")}</strong>\n        </Text>\n        <Text size=\"14\">{error}</Text>\n        <hr />\n        <div className=\"buttons-block\">\n          <Button mode=\"secondary\" onClick={() => history.push(goTo)}>\n            {buttonText}\n          </Button>\n          {alternativeButton && (\n            <Button\n              mode=\"outline\"\n              onClick={() => history.push(alternativeButton.goTo)}\n            >\n              {alternativeButton.goToText}\n            </Button>\n          )}\n        </div>\n      </StyledErrorPage>\n    </Layout>\n  );\n};\nexport default ErrorBox;\n","import styled from \"styled-components\";\n\nexport const StyledCourse = styled.section`\n  padding-bottom: 110px;\n  .main-title {\n    margin-bottom: 20px;\n  }\n  .course-nav {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    z-index: 100;\n  }\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n\n  .course-program-finish-modal {\n    font-family: \"Mulish\", sans-serif;\n    background: #f8f8f8;\n    inset: 0;\n    border: 1px solid #157493;\n    padding: 16px;\n    display: grid;\n    place-content: center;\n    gap: 16px;\n    height: 100%;\n    max-height: 500px;\n\n    p {\n      text-align: center;\n      margin: 0;\n    }\n\n    &__title {\n      font-size: 24px;\n      font-weight: 500;\n    }\n\n    &__paragraph {\n      font-size: 18px;\n    }\n\n    &__buttons {\n      display: grid;\n      grid-auto-flow: column;\n      gap: 8px;\n      justify-content: center;\n      margin-top: 8px;\n    }\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport RateCourse from \"@/components/RateCourse\";\nimport { QuestionnaireModelType } from \"@/types/questionnaire\";\nimport { Spin } from \"@escolalms/components\";\nimport { getQuestionnaires } from \"@/utils/questionnaires\";\nimport routeRoutes from \"@/components/Routes/routes\";\n\ninterface FinishModalProps {\n  courseId?: number;\n}\n\nconst CourseFinishModal = ({ courseId }: FinishModalProps) => {\n  const { t } = useTranslation();\n  const { push } = useHistory();\n  const [state, setState] = useState({\n    show: false,\n    step: 0,\n    loading: false,\n  });\n  const [questionnaires, setQuestionnaires] = useState<API.Questionnaire[]>([]);\n  const { fetchQuestionnaires, fetchQuestionnaire } =\n    useContext(EscolaLMSContext);\n  const handleClose = useCallback(() => {\n    setState((prevState) => ({\n      ...prevState,\n      show: false,\n    }));\n\n    if (state.step < questionnaires.length - 1) {\n      setState((prevState) => ({\n        ...prevState,\n        step: prevState.step + 1,\n      }));\n\n      const timer = setTimeout(() => {\n        setState((prevState) => ({\n          ...prevState,\n          show: true,\n        }));\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [questionnaires, state.step]);\n\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      loading: true,\n    }));\n    courseId &&\n      getQuestionnaires({\n        courseId,\n        fetchQuestionnaire,\n        fetchQuestionnaires,\n        onSucces: (items) => {\n          setQuestionnaires(items);\n        },\n        onFinish: () =>\n          setState((prevState) => ({\n            ...prevState,\n            loading: false,\n          })),\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [courseId]);\n\n  return (\n    <>\n      <div className=\"course-program-finish-modal\">\n        {state.loading ? (\n          <Spin />\n        ) : (\n          <>\n            <p className=\"course-program-finish-modal__title\">\n              {t(\"CourseProgram.FinishTitle\")}\n            </p>\n\n            <p className=\"course-program-finish-modal__paragraph\">\n              {!!questionnaires?.length\n                ? t(\"CourseProgram.FinishSubtitle\")\n                : t(\"CourseProgram.FinishSubtitleNoRating\")}\n            </p>\n            <div className=\"course-program-finish-modal__buttons\">\n              {!!questionnaires?.length && (\n                <Button\n                  mode=\"primary\"\n                  onClick={() =>\n                    setState((prevState) => ({\n                      ...prevState,\n                      show: true,\n                    }))\n                  }\n                >\n                  {t(\"MyProfilePage.RateCourse\")}\n                </Button>\n              )}\n              <Button\n                mode=\"primary\"\n                onClick={() => push(routeRoutes.myProfile)}\n              >\n                {t(\"Menu.Profile\")}\n              </Button>\n              <Button mode=\"primary\" onClick={() => push(routeRoutes.courses)}>\n                {t(\"Menu.Courses\")}\n              </Button>\n            </div>\n          </>\n        )}\n      </div>\n\n      {state.show && courseId && !!questionnaires.length && (\n        <RateCourse\n          course={QuestionnaireModelType.COURSE}\n          courseId={courseId}\n          visible={state.show}\n          onClose={() => handleClose()}\n          questionnaire={questionnaires[state.step]}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CourseFinishModal;\n","import React from \"react\";\nimport { Downloads } from \"@escolalms/components/lib/components/molecules/Downloads/Downloads\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { API } from \"@escolalms/sdk/lib\";\n\ntype Props = {\n  resources: API.TopicResource[];\n  subtitle: string;\n};\n\nconst StyledDownloads = styled.div`\n  margin-top: 100px;\n`;\n\nconst CourseDownloads: React.FC<Props> = ({ resources, subtitle }) => {\n  const { t } = useTranslation();\n  const mappedResources = resources.map((item) => {\n    return { href: item.url, fileName: item.name };\n  });\n  return (\n    <StyledDownloads>\n      <Downloads\n        subtitle={subtitle}\n        title={t<string>(\"CourseProgram.TopicAttachment\")}\n        downloads={mappedResources}\n      />\n    </StyledDownloads>\n  );\n};\n\nexport default CourseDownloads;\n","import React from \"react\";\nimport { Col, Row } from \"react-grid-system\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { XAPIEvent } from \"@escolalms/h5p-react\";\nimport { MarkdownRenderer } from \"@escolalms/components/lib/components/molecules/MarkdownRenderer/MarkdownRenderer\";\n\nimport CourseProgramContent from \"@/components/Course/CourseProgramContent\";\nimport CourseDownloads from \"../CourseDownloads\";\n\ninterface Props {\n  lesson: API.Lesson | undefined;\n  topic: API.Topic | undefined;\n  disableNextTopicButton: React.Dispatch<React.SetStateAction<boolean>>;\n  getNextPrevTopic: (\n    topicId: number,\n    next?: boolean | undefined\n  ) => API.Topic | null;\n  onXAPI?: (event: XAPIEvent) => void;\n}\n\nconst CourseProgramPlayer = ({\n  lesson,\n  topic,\n  disableNextTopicButton,\n  getNextPrevTopic,\n  onXAPI,\n}: Props) => {\n  const columnWidth =\n    lesson && lesson.summary && topic && topic.summary ? 6 : 12;\n\n  return (\n    <div className=\"course-program-player\">\n      <div className=\"course-program-player-content\">\n        {topic && topic.introduction && (\n          <MarkdownRenderer>{topic.introduction}</MarkdownRenderer>\n        )}\n        <div\n          className=\"course-program-player-content__wrapper\"\n          style={{\n            ...((topic?.json?.wrapperStyle as object) || {}),\n          }}\n        >\n          <CourseProgramContent\n            key={topic?.id}\n            topic={topic}\n            disableNextTopicButton={disableNextTopicButton}\n            isThereAnotherTopic={Boolean(getNextPrevTopic(Number(topic?.id)))}\n            onXAPI={(event) => onXAPI?.(event)}\n          />\n        </div>\n      </div>\n      <div className=\"course-program-content__container\">\n        <Row>\n          {lesson && lesson.summary && (\n            <Col sm={12} md={columnWidth} lg={columnWidth}>\n              <div className=\"course-program-summary\">\n                <MarkdownRenderer>{lesson.summary}</MarkdownRenderer>\n              </div>\n            </Col>\n          )}\n          {topic && topic.summary && (\n            <Col sm={12} md={columnWidth} lg={columnWidth}>\n              <div className=\"course-program-summary\">\n                <MarkdownRenderer>{topic.summary}</MarkdownRenderer>\n\n                {topic && topic.resources && topic.resources?.length > 0 && (\n                  <CourseDownloads\n                    resources={topic.resources || []}\n                    subtitle={topic.introduction || \"\"}\n                  />\n                )}\n              </div>\n            </Col>\n          )}\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default CourseProgramPlayer;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { isMobile } from \"react-device-detect\";\nimport { useTranslation } from \"react-i18next\";\nimport { Col, Row } from \"react-grid-system\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport {\n  CourseTopNav,\n  NoteData,\n} from \"@escolalms/components/lib/components/molecules/CourseTopNav/CourseTopNav\";\n\nimport CourseSidebar from \"@/components/Course/CourseSidebar\";\nimport { useLessonProgram } from \"@/hooks/useLessonProgram\";\nimport { useCourseProgram } from \"@/hooks/useCourseProgram\";\nimport { useBookmarkNotes } from \"@/hooks/useBookmarkNotes\";\nimport { useCourseBreakPoint } from \"@/hooks/useCourseBreakPoint\";\nimport Breadcrumbs from \"../Breadcrumbs\";\nimport Container from \"../Container\";\nimport ErrorBox from \"../Errorbox\";\nimport { StyledCourse } from \"./CourseProgramLessonsStyles\";\nimport CourseFinishModal from \"./CourseFinishModal\";\nimport CourseProgramPlayer from \"./CourseProgramPlayer\";\nimport { BookmarkableType } from \"@escolalms/sdk/lib/types/api\";\nimport routeRoutes from \"@/components/Routes/routes\";\n\nexport const CourseProgramLessons: React.FC<{\n  program: API.CourseProgram;\n  courseId?: number;\n}> = ({ program, courseId }) => {\n  const {\n    topic,\n    lesson,\n    onNextTopic,\n    onPrevTopic,\n    getNextPrevTopic,\n    isNextTopicButtonDisabled,\n    disableNextTopicButton,\n    sendProgress,\n  } = useLessonProgram(program);\n  const [showFinishModal, setShowFinishModal] = useState(false);\n  const { onCompleteTopic, onXAPI } = useCourseProgram({ program });\n  const { topicBookmark, handleBookmark, topicNote } = useBookmarkNotes({\n    topic,\n    lesson,\n    program,\n    courseId,\n  });\n  const { finishedTopicIndex } = useCourseBreakPoint({\n    courseId,\n    program,\n    topic,\n  });\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  }, [lesson?.id, topic?.id]);\n\n  useEffect(() => {\n    if (!program || !topic) return;\n    if (getNextPrevTopic(Number(topic?.id)) === null) {\n      disableNextTopicButton(true);\n      return;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [topic?.id, program]);\n\n  //@ts-ignore\n  window.resetProgress = () =>\n    (async () => {\n      await sendProgress(\n        program.id,\n        program.lessons\n          .flatMap((lesson) => lesson.topics)\n          .map((topic) => ({ topic_id: Number(topic?.id), status: 0 }))\n      );\n    })();\n\n  if (!program) {\n    return <ErrorBox error={t(\"CourseProgram.NoProgram\")} />;\n  }\n\n  if (!topic) {\n    return (\n      <ErrorBox\n        error={t(\"CourseProgram.NoTopic\")}\n        goTo={`/course/${program.id}`}\n        goToText={t(\"CoursePage.BackToCourse\")}\n        alternativeButton={{\n          goTo: routeRoutes.courses,\n          goToText: t(\"CoursePage.SeeOtherCourses\"),\n        }}\n      />\n    );\n  }\n\n  return (\n    <StyledCourse className=\"course-program-wrapper\">\n      <Container>\n        <Breadcrumbs\n          items={[\n            <Link to={routeRoutes.home}>{t(\"Home\")}</Link>,\n            <Link to={routeRoutes.courses}>{t(\"Courses\")}</Link>,\n            <Text size=\"12\">{program.title}</Text>,\n            <Text size=\"12\">{topic.title}</Text>,\n          ]}\n        />\n        <Title className=\"main-title\" level={3}>\n          {topic.title}\n        </Title>\n        <Row>\n          <Col lg={9}>\n            {showFinishModal && <CourseFinishModal courseId={courseId} />}\n            {!showFinishModal && (\n              <CourseProgramPlayer\n                lesson={lesson}\n                topic={topic}\n                onXAPI={onXAPI}\n                disableNextTopicButton={disableNextTopicButton}\n                getNextPrevTopic={getNextPrevTopic}\n              />\n            )}\n          </Col>\n          <Col lg={3}>\n            <CourseSidebar\n              course={program}\n              topicId={Number(topic?.id)}\n              onCourseFinish={() => setShowFinishModal(true)}\n              onCompleteTopic={onCompleteTopic}\n            />\n          </Col>\n        </Row>\n      </Container>\n      <div className=\"course-nav\">\n        <Container>\n          <CourseTopNav\n            onFinish={() => onCompleteTopic()}\n            mobile={isMobile}\n            onNext={onNextTopic}\n            isFinished={finishedTopicIndex ? finishedTopicIndex > -1 : false}\n            onPrev={onPrevTopic}\n            addNotes\n            newNoteData={{\n              id: topic.id,\n              type: `${courseId}/${lesson?.id}/${topic?.id}:${program.title}:${topic?.title}` as BookmarkableType,\n            }}\n            currentNote={topicNote?.[0] as NoteData | undefined}\n            addBookmarks\n            bookmarkBtnText={\n              topicBookmark?.length ? \"deleteBookmark\" : \"addBookmark\"\n            }\n            onBookmarkClick={() => handleBookmark()}\n            hasPrev={!!getNextPrevTopic(Number(topic?.id), false)}\n            hasNext={!isNextTopicButtonDisabled}\n          />\n        </Container>\n      </div>\n    </StyledCourse>\n  );\n};\n\nexport default CourseProgramLessons;\n","import { useCallback, useContext, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { XAPIEvent } from \"@escolalms/h5p-react\";\n\ninterface Props {\n  program: API.CourseProgram;\n  disableNextTopicButton?: (b: boolean) => void;\n  isThereAnotherTopic?: boolean;\n}\n\nexport const useCourseProgram = ({\n  program,\n  disableNextTopicButton,\n  isThereAnotherTopic = true,\n}: Props) => {\n  const { topicID } = useParams<{ lessonID: string; topicID: string }>();\n  const { sendProgress, h5pProgress } = useContext(EscolaLMSContext);\n  const [lastH5pEvent, setLastH5pEvent] = useState<XAPIEvent | null>(null);\n\n  const onCompleteH5pTopic = useCallback(\n    (event: XAPIEvent, clearState: boolean = true): void => {\n      if (program?.id) {\n        h5pProgress(\n          String(program?.id),\n          Number(topicID),\n          event?.statement as API.IStatement\n        )?.then(() => {\n          if (clearState) {\n            setLastH5pEvent(null);\n          }\n        });\n      }\n    },\n    [program?.id, topicID, h5pProgress]\n  );\n\n  const onCompleteTopic = useCallback((): void => {\n    console.log(\"onCompleteTopic: \", lastH5pEvent);\n    disableNextTopicButton && disableNextTopicButton(false);\n    if (program?.id && !lastH5pEvent) {\n      sendProgress(program?.id, [{ topic_id: Number(topicID), status: 1 }]);\n    } else if (lastH5pEvent) {\n      onCompleteH5pTopic(lastH5pEvent);\n    }\n  }, [\n    lastH5pEvent,\n    disableNextTopicButton,\n    program?.id,\n    sendProgress,\n    topicID,\n    onCompleteH5pTopic,\n  ]);\n\n  const onXAPI = useCallback(\n    (event: XAPIEvent): void => {\n      isThereAnotherTopic &&\n        disableNextTopicButton &&\n        disableNextTopicButton(!Boolean(event?.statement?.verb?.id));\n\n      setLastH5pEvent(event);\n      if (\n        event?.statement &&\n        event?.statement?.verb?.id !==\n          \"http://adlnet.gov/expapi/verbs/completed\"\n      ) {\n        onCompleteH5pTopic(event, false);\n      }\n    },\n    [isThereAnotherTopic, disableNextTopicButton, onCompleteH5pTopic]\n  );\n\n  return {\n    onCompleteTopic,\n    onXAPI,\n    onCompleteH5pTopic,\n  };\n};\n","import { useContext, useMemo } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { API } from \"@escolalms/sdk/lib\";\n\ninterface Props {\n  topic?: API.Topic;\n  courseId?: number;\n  program: API.CourseProgram;\n  lesson?: API.Lesson;\n}\n\nexport const useBookmarkNotes = ({\n  topic,\n  courseId,\n  program,\n  lesson,\n}: Props) => {\n  const {\n    bookmarkNotes,\n    fetchBookmarkNotes,\n    createBookmarkNote,\n    deleteBookmarkNote,\n  } = useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n\n  const topicBookmark = useMemo(\n    () =>\n      bookmarkNotes.list?.data.filter(\n        (item) =>\n          item.bookmarkable_id === Number(topic?.id) && item.value === null\n      ),\n    [bookmarkNotes.list?.data, topic?.id]\n  );\n\n  const handleBookmark = () => {\n    return !topicBookmark?.length\n      ? createBookmarkNote({\n          bookmarkable_id: Number(topic?.id),\n          bookmarkable_type: API.BookmarkableType.Topic,\n          value: null,\n        }).then(() => {\n          fetchBookmarkNotes();\n          toast.success(t<string>(\"Notifications.CreateBookmark\"));\n        })\n      : deleteBookmarkNote(topicBookmark[0].id).then(() => {\n          fetchBookmarkNotes();\n          toast.success(t<string>(\"Notifications.DeleteBookmark\"));\n        });\n  };\n\n  const topicNote = useMemo(\n    () =>\n      bookmarkNotes.list?.data.filter(\n        (item) =>\n          item.bookmarkable_id === Number(topic?.id) && item.value !== null\n      ),\n    [bookmarkNotes.list?.data, topic?.id]\n  );\n\n  return {\n    handleBookmark,\n    topicBookmark,\n    topicNote,\n  };\n};\n","import { useContext, useEffect, useMemo } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\n\ninterface Props {\n  courseId: number | undefined;\n  program: API.CourseProgram;\n  topic: API.Topic | undefined;\n}\n\nexport const useCourseBreakPoint = ({ courseId, program, topic }: Props) => {\n  const { courseProgressDetails, progress } = useContext(EscolaLMSContext);\n  const location = useLocation();\n  const { push } = useHistory();\n  // if pathname contain 3 splited items we cannot fire topicbreakpoint effect otherwise we can\n  const startWithBreakPoint = location.pathname.split(\"/\").length === 3;\n\n  const getCourseProgress = useMemo(() => {\n    if (\n      courseProgressDetails.byId?.[Number(courseId)] &&\n      courseProgressDetails.byId[Number(courseId)].value\n    ) {\n      return courseProgressDetails.byId[Number(courseId)].value;\n    }\n    return (\n      progress &&\n      progress.value &&\n      progress.value.find(\n        (courseProgress: API.CourseProgressItem) =>\n          courseProgress.course.id === Number(courseId)\n      )?.progress\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [progress, courseId]);\n\n  const topicBreakPoint = useMemo(() => {\n    const currentProgress = getCourseProgress || [];\n\n    const lastStartedLesson = currentProgress\n      .filter(\n        (topic: API.CourseProgressItemElement) =>\n          topic.status === API.CourseProgressItemElementStatus.IN_PROGRESS\n      )\n      .sort(\n        (a: API.CourseProgressItemElement, b: API.CourseProgressItemElement) =>\n          new Date(b.started_at as string).getTime() -\n          new Date(a.started_at as string).getTime()\n      )[0];\n\n    if (!lastStartedLesson) {\n      return currentProgress.filter(\n        (topic: API.CourseProgressItemElement) =>\n          topic.status === API.CourseProgressItemElementStatus.INCOMPLETE\n      )[0];\n    }\n    return lastStartedLesson;\n  }, [getCourseProgress]);\n\n  const findLessonBreakPoint = useMemo(() => {\n    return (\n      topicBreakPoint &&\n      program.lessons.find(\n        (lesson: API.Lesson) =>\n          lesson &&\n          lesson.topics &&\n          lesson.topics.some(\n            (topic: API.Topic) => topic.id === topicBreakPoint.topic_id\n          )\n      )\n    );\n  }, [program, topicBreakPoint]);\n\n  useEffect(() => {\n    if (startWithBreakPoint) {\n      if (findLessonBreakPoint && topicBreakPoint) {\n        push(\n          `/course/${program.id}/${findLessonBreakPoint.id}/${topicBreakPoint.topic_id}`,\n          null\n        );\n      }\n    }\n  }, [\n    startWithBreakPoint,\n    findLessonBreakPoint,\n    program,\n    push,\n    topicBreakPoint,\n  ]);\n\n  const finishedTopicIndex = getCourseProgress?.findIndex((ttopic) => {\n    return (\n      ttopic.topic_id === topic?.id &&\n      ttopic.status === API.CourseProgressItemElementStatus.COMPLETE\n    );\n  });\n\n  return {\n    getCourseProgress,\n    finishedTopicIndex,\n  };\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport Preloader from \"@/components/Preloader\";\nimport Layout from \"@/components/_App/Layout\";\n\nimport CourseProgramLessons from \"@/components/Course/CourseProgramLessons\";\nimport ErrorBox from \"@/components/Errorbox\";\nimport { t } from \"i18next\";\nimport ScormPlayer from \"@/components/Course/Players/ScormPlayer\";\n\nconst CourseProgramScorm: React.FC<{ program: API.CourseProgram }> = ({\n  program,\n}) => {\n  const sco = program?.scorm_sco;\n  const uuid = sco?.uuid;\n\n  if (!sco && !uuid) {\n    return <React.Fragment />;\n  }\n\n  return (\n    <ScormPlayer\n      value={{\n        title: sco.title,\n        uuid: sco.uuid,\n      }}\n    />\n  );\n};\n\nconst CourseProgram = () => {\n  const { id } = useParams<{ id: string }>();\n  const { program, fetchProgram, fetchCourseProgress } =\n    useContext(EscolaLMSContext);\n\n  useEffect(() => {\n    if (id) {\n      fetchProgram(Number(id));\n      fetchCourseProgress(Number(id));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n  if (program.loading) {\n    return <Preloader />;\n  }\n  if (program.error) {\n    return <ErrorBox error={t(\"CourseProgram.NoProgram\")} />;\n  }\n  if (program.value && program?.value?.scorm_sco_id) {\n    return (\n      <Layout metaTitle={program.value.title}>\n        <CourseProgramScorm program={program.value} />\n      </Layout>\n    );\n  }\n  if (program.value && program.value.lessons && program.value.lessons.length) {\n    return (\n      <Layout metaTitle={program.value.title}>\n        <CourseProgramLessons program={program.value} courseId={Number(id)} />\n      </Layout>\n    );\n  }\n\n  return <Preloader />;\n};\n\nexport default CourseProgram;\n","import React from \"react\";\nimport { BreadCrumbs } from \"@escolalms/components/lib/components/atoms/BreadCrumbs/BreadCrumbs\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  items: React.ReactNode[];\n};\n\nconst StyledBreadcrumbs = styled.div`\n  margin-bottom: 15px;\n  a {\n    text-decoration: none;\n    color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray5 : theme.gray2}!important;\n  }\n`;\n\nconst Breadcrumbs: React.FC<Props> = ({ items }) => {\n  return (\n    <StyledBreadcrumbs>\n      <BreadCrumbs items={items} />\n    </StyledBreadcrumbs>\n  );\n};\n\nexport default Breadcrumbs;\n","export enum QuestionnaireModelType {\n  COURSE = \"course\",\n  WEBINAR = \"webinar\",\n}\n\nexport enum QuestionType {\n  RATE = \"rate\",\n  TEXT = \"text\",\n  REVIEW = \"review\",\n}\n","import { QuestionType, QuestionnaireModelType } from \"@/types/questionnaire\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { t } from \"i18next\";\nimport { toast } from \"react-toastify\";\n\ntype getQuestionnaireProps = {\n  questionnaireId: number;\n  courseId: number;\n  fetchQuestionnaire: (\n    modelTypeTitle: string,\n    modelID: number,\n    id: number\n  ) => Promise<API.DefaultResponse<API.QuestionnaireAnswerResponse>>;\n};\n\ntype getQuestionnairesProps = {\n  courseId: number;\n  fetchQuestionnaire: (\n    modelTypeTitle: string,\n    modelID: number,\n    id: number\n  ) => Promise<API.DefaultResponse<API.QuestionnaireAnswerResponse>>;\n  fetchQuestionnaires: (\n    model: string,\n    id: number\n  ) => Promise<API.DefaultMetaResponse<API.Questionnaire>>;\n  onSucces: (questionnairesArray: API.Questionnaire[]) => void;\n  onFinish: () => void;\n};\n\nconst getQuestionnaire = async ({\n  courseId,\n  questionnaireId,\n  fetchQuestionnaire,\n}: getQuestionnaireProps) => {\n  try {\n    const response =\n      courseId &&\n      (await fetchQuestionnaire(\n        QuestionnaireModelType.COURSE,\n        courseId,\n        questionnaireId\n      ));\n    if (response && response.success) {\n      return response.data.questions;\n    }\n  } catch (error) {\n    toast.error(t<string>(\"UnexpectedError\"));\n    console.log(error);\n  }\n};\n\nexport const getQuestionnaires = async ({\n  courseId,\n  fetchQuestionnaires,\n  fetchQuestionnaire,\n  onSucces,\n  onFinish,\n}: getQuestionnairesProps) => {\n  try {\n    const response =\n      courseId &&\n      (await fetchQuestionnaires(QuestionnaireModelType.COURSE, courseId));\n    if (response && response.success) {\n      const questionnairesWithCombinedQuestions = await Promise.all(\n        response.data.map(async (data) => {\n          const res = await getQuestionnaire({\n            courseId,\n            questionnaireId: data.id,\n            fetchQuestionnaire,\n          });\n\n          const combinedQuestions = data.questions.reduce((result, element) => {\n            const matchingElement = res?.find((item) => item.id === element.id);\n\n            const updatedElement = {\n              ...element,\n              rate: matchingElement?.rate,\n              note: matchingElement?.note,\n            };\n\n            updatedElement.rate === null &&\n              updatedElement.note === null &&\n              result.push(updatedElement);\n            return result;\n          }, [] as API.QuestionnaireQuestion[]);\n\n          return {\n            ...data,\n            questions: combinedQuestions.sort(\n              (a, b) => a.position - b.position\n            ),\n          };\n        })\n      );\n\n      onSucces(\n        questionnairesWithCombinedQuestions.filter(\n          (item) => !!item.questions.length\n        )\n      );\n    }\n  } catch (error) {\n    toast.error(t<string>(\"UnexpectedError\"));\n    console.log(error);\n  } finally {\n    onFinish();\n  }\n};\n\nexport const getAverageRate = (reviewQuestions: API.QuestionnaireStars[]) => {\n  const avgRate =\n    reviewQuestions.reduce((sum, item) => sum + item.avg_rate, 0) /\n    reviewQuestions.length;\n  return avgRate.toFixed(1);\n};\n\nexport const getCourseQuestionnaireReviewQuestion = ({\n  questionnaires,\n  questionnaireId,\n  questionType,\n}: {\n  questionnaires: API.Questionnaire[];\n  questionnaireId: number | null;\n  questionType: QuestionType;\n}) => {\n  return questionnaires\n    ?.find((element) => element.id === questionnaireId)\n    ?.questions.filter((item) => item.public_answers)\n    .find((item) => item.type === questionType)?.id;\n};\n","import { FC, useState } from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport {\n  Button,\n  Rate,\n  Stack,\n  TextArea,\n  Title,\n  Text,\n} from \"@escolalms/components\";\nimport { useTranslation } from \"react-i18next\";\ninterface QuestionBoxProps {\n  withStarsRating?: boolean;\n  data: API.QuestionnaireQuestion;\n  textareaPlaceholder: string;\n  handleSubmit: (rate: number, note?: string) => void;\n}\n\nexport const QuestionBox: FC<QuestionBoxProps> = ({\n  data,\n  textareaPlaceholder,\n  withStarsRating,\n  handleSubmit,\n}) => {\n  const { t } = useTranslation();\n  const { title, description } = data;\n  const [answer, setAnswer] = useState({ rate: 0, note: \"\" });\n\n  const submit = () => {\n    handleSubmit(answer.rate, answer.note);\n    setAnswer({ rate: 0, note: \"\" });\n  };\n\n  return (\n    <form onSubmit={submit}>\n      {!!withStarsRating ? (\n        <Rate\n          onSubmit={(rate) => setAnswer((prev) => ({ ...prev, rate }))}\n          header={data.title}\n        >\n          <TextArea\n            placeholder={textareaPlaceholder}\n            style={{ marginTop: \"30px\" }}\n            value={answer.note}\n            onChange={({ target: { value } }) =>\n              setAnswer((prev) => ({ ...prev, note: value }))\n            }\n          />\n        </Rate>\n      ) : (\n        <Stack $gap={30}>\n          <Title>{title}</Title>\n          <Text>{description}</Text>\n          <TextArea\n            placeholder={textareaPlaceholder}\n            value={answer.note}\n            onChange={({ target: { value } }) =>\n              setAnswer((prev) => ({ ...prev, note: value }))\n            }\n          />\n          <Button\n            type=\"submit\"\n            mode=\"primary\"\n            style={{ width: \"fit-content\", alignSelf: \"center\" }}\n          >\n            {answer.note.length\n              ? t(\"RateCourse.SendAnswer\")\n              : t(\"RateCourse.NoAnswer\")}\n          </Button>\n        </Stack>\n      )}\n    </form>\n  );\n};\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Modal } from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { toast } from \"react-toastify\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { useTranslation } from \"react-i18next\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { QuestionBox } from \"../QuestionBox\";\nimport { QuestionType } from \"@/types/questionnaire\";\n\ntype Props = {\n  course: string;\n  courseId: number;\n  visible: boolean;\n  questionnaire: API.Questionnaire;\n  onClose: () => void;\n};\n\nconst RateCourse: React.FC<Props> = ({\n  course,\n  courseId,\n  visible,\n  questionnaire,\n  onClose,\n}) => {\n  const { sendQuestionnaireAnswer } = useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n\n  const [state, setState] = useState({\n    loading: false,\n    step: 0,\n    showLastScreen: false,\n  });\n\n  const handleSendAnswer = useCallback(\n    async (rate: number, note?: string) => {\n      if (questionnaire.questions) {\n        setState((prevState) => ({\n          ...prevState,\n          loading: true,\n        }));\n        try {\n          const request = await sendQuestionnaireAnswer(\n            course,\n            courseId,\n            questionnaire.id,\n            {\n              question_id: questionnaire.questions[state.step].id,\n              rate,\n              note,\n              visible_on_front:\n                questionnaire.questions[state.step].public_answers,\n            }\n          );\n          if (request.success) {\n            toast.success(t(\"RateCourse.ThankYouMessage\"));\n          }\n        } catch (error) {\n          toast.error(\"Error\");\n          console.error(error);\n        } finally {\n          setState((prevState) => ({\n            ...prevState,\n            loading: false,\n            step: prevState.step + 1,\n            note: \"\",\n            rating: null,\n          }));\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [course, courseId, questionnaire.id, state]\n  );\n\n  const handleSave = useCallback(\n    (rate: number, note?: string) => {\n      handleSendAnswer(rate, note);\n      if (\n        questionnaire.questions &&\n        state.step === questionnaire.questions.length - 1\n      ) {\n        setState((prevState) => ({\n          ...prevState,\n          showLastScreen: true,\n        }));\n      }\n    },\n    [questionnaire, state.step, handleSendAnswer]\n  );\n\n  return (\n    <Modal\n      onClose={onClose}\n      visible={visible}\n      animation=\"zoom\"\n      maskAnimation=\"fade\"\n      destroyOnClose={true}\n      width={468}\n    >\n      {!state.showLastScreen ? (\n        questionnaire.questions && (\n          <QuestionBox\n            textareaPlaceholder={t(\"RateCourse.OptionalComment\")}\n            data={questionnaire.questions[state.step]}\n            handleSubmit={(rate, note) => handleSave(rate, note)}\n            withStarsRating={\n              questionnaire.questions[state.step]?.type === QuestionType.REVIEW\n            }\n          />\n        )\n      ) : (\n        <React.Fragment>\n          <Title\n            level={4}\n            className=\"modal-title\"\n            style={{\n              paddingTop: \"50px\",\n            }}\n          >\n            {t(\"RateCourse.ThankYou\")}\n          </Title>\n          <Text\n            style={{\n              paddingBottom: \"50px\",\n              textAlign: \"center\",\n            }}\n          >\n            {t(\"RateCourse.ThankYouMessage\")}\n          </Text>\n        </React.Fragment>\n      )}\n    </Modal>\n  );\n};\n\nexport default RateCourse;\n"],"sourceRoot":""}