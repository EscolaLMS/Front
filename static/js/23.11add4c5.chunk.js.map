{"version":3,"sources":["pages/user/my-notifications.tsx","utils/index.ts","components/Preloader/index.tsx","components/Profile/UserSidebar/index.tsx","components/Profile/ProfileAside/index.tsx","components/Profile/ProfileHeader/index.tsx","components/Profile/ProfileLayout/index.tsx"],"names":["NotificationsContainer","styled","div","theme","mode","gray1","gray5","MyNotificationsPage","useContext","EscolaLMSContext","user","fetchNotifications","notifications","readNotify","history","useHistory","t","useTranslation","useEffect","loading","value","push","ProfileLayout","title","list","map","item","index","className","Notification","notification","id","unread","event","split","pop","description","dateTime","Date","created_at","onClick","maxLengthDesc","Preloader","StyledLoader","backgroundDark","backgroundLight","useTheme","document","body","style","overflow","color","primaryColor","StyledSidebar","isMobile","cardBackgroundColorLight","cardBackgroundColorDark","cardRadius","UserSidebar","icon","children","IconTitle","as","level","StyledAside","props","opened","SingleProgress","MobileHeader","ProfileAside","useState","menuOpened","setMenuOpened","logout","certificates","progress","fetchProgress","finishedCourses","useMemo","filter","course","finish_date","mainTabs","key","url","avatar","Avatar","size","src","alt","Text","first_name","last_name","Title","activeClassName","to","then","length","data","StyledHeader","withTabs","ProfileHeader","StyledProfile","section","Layout","metaTitle"],"mappings":"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","file":"static/js/23.11add4c5.chunk.js","sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport ProfileLayout from \"@/components/Profile/ProfileLayout\";\nimport { Notification } from \"@escolalms/components/lib/components/molecules/Notification/Notification\";\nimport styled from \"styled-components\";\nimport { getEventType } from \"../../utils\";\nimport { useTranslation } from \"react-i18next\";\nimport Preloader from \"@/components/Preloader\";\n\nconst NotificationsContainer = styled.div`\n  margin-top: 11px;\n  row-gap: 11px;\n  display: flex;\n  flex-direction: column;\n  .single-notification {\n    background: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray1 : theme.gray5};\n  }\n`;\n\nconst MyNotificationsPage = () => {\n  const { user, fetchNotifications, notifications, readNotify } =\n    useContext(EscolaLMSContext);\n  const history = useHistory();\n  const { t } = useTranslation();\n  useEffect(() => {\n    if (!user.loading && !user.value) {\n      history.push(\"/login\");\n    } else {\n      fetchNotifications();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ProfileLayout title={t(\"MyProfilePage.Notifications\")}>\n      <NotificationsContainer>\n        {notifications &&\n          notifications.list?.map((item, index) => (\n            <div key={index} className=\"single-notification\">\n              <Notification\n                key={item.id}\n                notification={{\n                  id: \"324241\",\n                  unread: true,\n                  title: t<string>(`Notifications.${getEventType(item.event)}`),\n                  description: \"\",\n                  dateTime: new Date(item.created_at),\n                }}\n                onClick={() => {\n                  readNotify(item.id);\n                }}\n                maxLengthDesc={60}\n              />\n            </div>\n          ))}\n      </NotificationsContainer>\n      {notifications.loading && <Preloader />}\n    </ProfileLayout>\n  );\n};\n\nexport default MyNotificationsPage;\n","export const getEventType = (event: string) =>\n  event.split(\"\\\\\").pop() as String;\n\nexport const getTopicType = (type: string) => type.split(\"\\\\\")?.pop();\n","import { useEffect } from \"react\";\nimport { Spin } from \"@escolalms/components/lib/components/atoms/Spin/Spin\";\nimport styled, { useTheme } from \"styled-components\";\n\nconst StyledLoader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  z-index: 999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) =>\n    theme.mode === \"dark\" ? theme.backgroundDark : theme.backgroundLight};\n`;\n\nconst Preloader = () => {\n  const theme = useTheme();\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n\n    return () => {\n      document.body.style.overflow = \"inherit\";\n    };\n  }, []);\n\n  return (\n    <StyledLoader>\n      <Spin color={theme.primaryColor} />\n    </StyledLoader>\n  );\n};\n\nexport default Preloader;\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { isMobile } from \"react-device-detect\";\nimport { IconTitle } from \"@escolalms/components/lib/components/atoms/IconTitle/IconTitle\";\n\ntype Props = {\n  title: string;\n  children: ReactNode;\n  icon: ReactNode;\n};\n\nconst StyledSidebar = styled.div`\n  padding: ${isMobile ? \"20px\" : \"40px\"};\n  background: ${({ theme }) =>\n    theme.mode === \"dark\"\n      ? theme.cardBackgroundColorLight\n      : theme.cardBackgroundColorDark};\n  border-radius: ${({ theme }) => theme.cardRadius};\n`;\n\nconst UserSidebar: React.FC<Props> = ({ title, icon, children }) => {\n  return (\n    <StyledSidebar>\n      <IconTitle title={title} icon={icon} as={\"h4\"} level={4} />\n      {children}\n    </StyledSidebar>\n  );\n};\n\nexport default UserSidebar;\n","import { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Avatar } from \"@escolalms/components/lib/components/atoms/Avatar/Avatar\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport UserSidebar from \"@/components/Profile/UserSidebar\";\nimport { HeaderUser, ProgressTropy, UserIcon } from \"../../../icons\";\nimport { isMobile } from \"react-device-detect\";\nimport { useTranslation } from \"react-i18next\";\n\ntype NavigationTab = {\n  title: string;\n  key: string;\n  url: string;\n};\n\nconst StyledAside = styled(\"aside\")<{ opened: boolean }>`\n  ${isMobile &&\n  `\n    box-shadow: 0px -2px 15px rgba(0, 0, 0, 0.1);\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    height: 100vh;\n    width: 100%;\n    transition: all 0.25s;\n    z-index: 1000;\n    overflow: scroll;\n    `}\n  transform: ${(props) =>\n    props.opened && isMobile\n      ? \"translate(0, 0%)\"\n      : !props.opened && isMobile\n      ? \"translate(0, 91%)\"\n      : \"translate(0, 0)\"};\n  background: ${({ theme }) =>\n    theme.mode === \"dark\" ? theme.backgroundDark : theme.backgroundLight};\n  .user-main-sidebar {\n    margin-bottom: ${isMobile ? \"70px\" : \"22px\"};\n    .avatar-wrapper {\n      margin-bottom: ${isMobile ? \"30px\" : \"21px\"};\n      display: flex;\n      justify-content: flex-start;\n      align-items: ${isMobile ? \"center\" : \"flex-start\"};\n      flex-direction: ${isMobile ? \"row\" : \"column\"};\n    }\n    .name {\n      margin: ${isMobile ? \"0 0 0 21px\" : \"16px 0 0 0\"};\n    }\n    .navigation {\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-start;\n      align-items: flex-start;\n      row-gap: 15px;\n      margin-bottom: 50px;\n      a {\n        text-decoration: none;\n        &:hover {\n          p {\n            color: ${({ theme }) => theme.primaryColor};\n          }\n        }\n        &.selected {\n          p {\n            color: ${({ theme }) => theme.primaryColor};\n          }\n        }\n      }\n    }\n    .logout-wrapper {\n      position: relative;\n      &:before {\n        position: absolute;\n        content: \"\";\n        left: 0;\n        top: -16px;\n        height: 1px;\n        width: 24px;\n        background: ${({ theme }) =>\n          theme.mode === \"dark\" ? theme.gray5 : theme.gray1};\n      }\n      button {\n        appearance: none;\n        outline: none;\n        border: none;\n        background: transparent;\n        padding: 0;\n        margin: 0;\n        cursor: pointer;\n        p {\n          &:hover {\n            color: ${({ theme }) => theme.primaryColor};\n          }\n        }\n      }\n    }\n  }\n  .progress-container {\n    display: flex;\n    flex-direction: ${isMobile ? \"row\" : \"column\"};\n    flex-wrap: wrap;\n    justify-content: ${isMobile ? \"space-between\" : \"flex-start\"};\n    align-items: ${isMobile ? \"center\" : \"flex-start\"};\n  }\n`;\n\nconst SingleProgress = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: ${isMobile ? \"flex-start\" : \"flex-end\"};\n  flex-direction: ${isMobile ? \"column\" : \"row\"};\n  &:not(:last-child) {\n    margin-bottom: ${isMobile ? 0 : \"14px\"};\n    margin-right: ${isMobile ? \"10px\" : 0};\n  }\n  .number {\n    min-width: 56px;\n    color: ${({ theme }) => theme.primaryColor};\n  }\n  .label {\n    margin-left: ${isMobile ? 0 : \"11px\"};\n    position: relative;\n    top: ${isMobile ? 0 : \"-12px\"};\n    font-size: 14px;\n    line-height: 1.2;\n    font-weight: 700;\n    max-width: ${isMobile ? \"80px\" : \"unset\"};\n  }\n`;\n\nconst MobileHeader = styled(\"div\")<{ onClick: () => void; opened: boolean }>`\n  padding: 17px 15px;\n  box-shadow: 0px -2px 15px rgba(0, 0, 0, 0.1);\n  position: relative;\n  &:after {\n    content: \"\";\n    display: ${({ opened }) => (opened ? \"block\" : \"none\")};\n    position: absolute;\n    right: 22px;\n    top: 50%;\n    transform: translate(0, -50%) rotate(-45deg);\n    width: 12px;\n    height: 12px;\n    border-left: 2px solid\n      ${({ theme }) => (theme.mode === \"dark\" ? theme.gray5 : theme.gray1)};\n    border-bottom: 2px solid\n      ${({ theme }) => (theme.mode === \"dark\" ? theme.gray5 : theme.gray1)};\n  }\n  .content-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    column-gap: 10px;\n  }\n`;\n\nconst ProfileAside: React.FC = () => {\n  const [menuOpened, setMenuOpened] = useState(false);\n  const { user, logout, certificates, progress, fetchProgress } =\n    useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const history = useHistory();\n  useEffect(() => {\n    fetchProgress();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const finishedCourses = useMemo(() => {\n    return (progress.value || []).filter(\n      (course: API.CourseProgressItem) => course.finish_date\n    );\n  }, [progress]);\n  const mainTabs: NavigationTab[] = [\n    {\n      key: \"COURSES\",\n      title: t(\"MyProfilePage.MyCourses\"),\n      url: \"/user/my-profile\",\n    },\n    {\n      key: \"ORDERS\",\n      title: t(\"MyProfilePage.OrdersHistory\"),\n      url: \"/user/my-orders\",\n    },\n    {\n      key: \"NOTIFICATIONS\",\n      title: t(\"MyProfilePage.Notifications\"),\n      url: \"/user/my-notifications\",\n    },\n    {\n      key: \"EDIT\",\n      title: t(\"MyProfilePage.EditData\"),\n      url: \"/user/my-data\",\n    },\n  ];\n  return (\n    <StyledAside opened={menuOpened}>\n      {isMobile && (\n        <MobileHeader\n          opened={menuOpened}\n          onClick={() => setMenuOpened(!menuOpened)}\n        >\n          <div className=\"content-wrapper\">\n            {user.value?.avatar ? (\n              <Avatar size=\"extraSmall\" src={user.value?.avatar} alt=\"\" />\n            ) : (\n              <HeaderUser mode={theme.mode === \"dark\" ? \"light\" : \"dark\"} />\n            )}\n            <Text>\n              <strong>\n                {user.value?.first_name} {user.value?.last_name}\n              </strong>\n            </Text>\n          </div>\n        </MobileHeader>\n      )}\n      <div className=\"user-main-sidebar\">\n        <UserSidebar title={t(\"MyProfilePage.YourAccount\")} icon={<UserIcon />}>\n          <div className=\"avatar-wrapper\">\n            {user.value?.avatar ? (\n              <Avatar size=\"small\" src={user.value?.avatar} alt=\"\" />\n            ) : (\n              <HeaderUser mode={theme.mode === \"dark\" ? \"light\" : \"dark\"} />\n            )}\n            <Title className=\"name\" level={4}>\n              {user.value?.first_name} {user.value?.last_name}\n            </Title>\n          </div>\n          <nav className=\"navigation\">\n            {mainTabs.map((item) => (\n              <NavLink activeClassName=\"selected\" to={item.url} key={item.key}>\n                <Text size=\"14\">{item.title}</Text>\n              </NavLink>\n            ))}\n          </nav>\n          <div className=\"logout-wrapper\">\n            <button onClick={() => logout().then(() => history.push(\"/\"))}>\n              <Text>{t<string>(\"MyProfilePage.Logout\")}</Text>\n            </button>\n          </div>\n        </UserSidebar>\n      </div>\n      <div className=\"user-progress sidebar\">\n        <UserSidebar\n          title={t(\"MyProfilePage.MyProgress\")}\n          icon={<ProgressTropy />}\n        >\n          <div className=\"progress-container\">\n            <SingleProgress>\n              <Title className=\"number\" level={1}>\n                {finishedCourses.length}\n              </Title>\n              <Text className=\"label\">\n                {t<string>(\"MyProfilePage.FinishedCourses\")}\n              </Text>\n            </SingleProgress>\n            <SingleProgress>\n              <Title className=\"number\" level={1}>\n                {certificates.list?.data.length}\n              </Title>\n              <Text className=\"label\">\n                {t<string>(\"MyProfilePage.TotalCertificates\")}\n              </Text>\n            </SingleProgress>\n            {/* <SingleProgress>\n              <Title className=\"number\" level={1}>\n                65\n              </Title>\n              <Text className=\"label\">godzin nauki</Text>\n            </SingleProgress> */}\n          </div>\n        </UserSidebar>\n      </div>\n    </StyledAside>\n  );\n};\n\nexport default ProfileAside;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\n\ntype Props = {\n  title: string;\n  withTabs?: boolean;\n};\n\nconst StyledHeader = styled.div<{ withTabs?: boolean }>`\n  position: relative;\n  z-index: 0;\n  padding: ${(props) =>\n    props.withTabs ? \"105px 40px 90px 40px\" : \"165px 40px 30px 40px\"};\n  background: ${({ theme }) =>\n    theme.mode === \"dark\"\n      ? theme.cardBackgroundColorLight\n      : theme.cardBackgroundColorDark};\n  border-radius: ${({ theme }) => theme.cardRadius};\n  @media (max-width: 991px) {\n    padding: 60px 20px 20px 20px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst ProfileHeader: React.FC<Props> = ({ title, withTabs }) => {\n  return (\n    <StyledHeader withTabs={withTabs}>\n      <Title level={1}>{title}</Title>\n    </StyledHeader>\n  );\n};\n\nexport default ProfileHeader;\n","import Layout from \"../../../components/_App/Layout\";\nimport ProfileAside from \"@/components/Profile/ProfileAside\";\nimport ProfileHeader from \"@/components/Profile/ProfileHeader\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { ReactNode, useContext, useEffect } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\n\ntype Props = {\n  children: ReactNode;\n  title: string;\n  withTabs?: boolean;\n};\n\nconst StyledProfile = styled.section`\n  .courses-wrapper {\n    margin-top: -70px;\n    .tabs-menu {\n      margin: 0 0 70px 40px;\n    }\n  }\n  .certificates-container {\n    margin-top: 70px;\n    h2 {\n      margin-left: 40px;\n    }\n  }\n`;\n\nconst ProfileLayout: React.FC<Props> = ({ children, title, withTabs }) => {\n  const { user } = useContext(EscolaLMSContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user.loading && !user.value) {\n      history.push(\"/login\");\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Layout metaTitle={title}>\n      <StyledProfile>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-9\">\n              <ProfileHeader title={title} withTabs={withTabs} />\n              {children}\n            </div>\n            <div className=\"col-lg-3\">\n              <ProfileAside />\n            </div>\n          </div>\n        </div>\n      </StyledProfile>\n    </Layout>\n  );\n};\n\nexport default ProfileLayout;\n"],"sourceRoot":""}