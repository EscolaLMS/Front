{"version":3,"sources":["pages/tutors/index.tsx","components/Breadcrumbs/index.tsx"],"names":["StyledTitleWrapper","styled","div","TutorsPage","useContext","EscolaLMSContext","tutors","fetchTutors","t","useTranslation","theme","useTheme","useEffect","className","items","to","size","level","loading","style","display","justifyContent","width","minHeight","flexDirection","alignItems","color","primaryColor","list","map","tutor","sm","md","lg","id","Number","title","name","image","path_avatar","path","srcSizes","src","alt","subtitle","first_name","last_name","StyledBreadcrumbs","mode","gray5","gray2","Breadcrumbs"],"mappings":"kRAiBMA,EAAqBC,UAAOC,IAAG,oDAsFtBC,UAlFI,WACjB,MAAgCC,qBAAWC,oBAAnCC,EAAM,EAANA,OAAQC,EAAW,EAAXA,YAERC,EAAMC,cAAND,EACFE,EAAQC,qBAOd,OALAC,qBAAU,WACRL,GAEF,GAAG,IAGD,cAAC,IAAM,UACL,qBAAKM,UAAU,eAAc,SAC3B,eAAC,IAAS,WACR,cAAC,IAAW,CACVC,MAAO,CACL,cAAC,IAAI,CAACC,GAAG,IAAG,SAAEP,EAAU,UACxB,cAAC,OAAI,CAACQ,KAAK,KAAI,SAAER,EAAE,eAGvB,cAACR,EAAkB,UACjB,eAAC,QAAK,CAACiB,MAAO,EAAE,UAAC,IAAET,EAAE,eAGvB,eAAC,MAAG,WACDF,EAAOY,SACN,qBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,MAAO,OACPC,UAAW,QACXC,cAAe,SACfC,WAAY,UAEdZ,UAAU,iBAAgB,SAE1B,cAAC,OAAI,CAACa,MAAOhB,EAAMiB,kBAGrBrB,EAAOY,UACNZ,EAAOsB,MAAQ,IAAIC,KAAI,SAACC,GAAmB,OAC1C,cAAC,MAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE,SACvB,cAAC,aAAU,CACTC,GAAIC,OAAOL,EAAMI,IACjBE,MAAON,EAAMO,KACbC,MACE,cAAC,IAAI,CAACvB,GAAE,kBAAae,EAAMI,IAAK,SAC7BJ,EAAMS,YACL,cAAC,IAAK,CACJC,KAAMV,EAAMS,YACZE,SAAU,CAAC,IAAK,OAGlB,qBACE5B,UAAU,qBACV6B,IAAG,yBACHC,IAAI,mBAKZC,SACE,cAAC,IAAI,CAAC7B,GAAE,kBAAae,EAAMI,IAAK,SAC9B,cAAC,OAAI,CAAClB,KAAK,KAAI,SACb,mCACGc,EAAMe,WAAW,IAAEf,EAAMgB,oBAxBPhB,EAAMI,GA8B/B,aAOtB,C,+EC7FMa,EAAoB9C,UAAOC,IAAG,uHAIvB,gBAAGQ,EAAK,EAALA,MAAK,MACA,SAAfA,EAAMsC,KAAkBtC,EAAMuC,MAAQvC,EAAMwC,KAAK,IAYxCC,IARsB,SAAH,GAAmB,IAAbrC,EAAK,EAALA,MACtC,OACE,cAACiC,EAAiB,UAChB,cAAC,cAAW,CAACjC,MAAOA,KAG1B,C","file":"static/js/29.a4fa519d.chunk.js","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport Layout from \"../../components/_App/Layout\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { useTranslation } from \"react-i18next\";\n\nimport styled, { useTheme } from \"styled-components\";\nimport { Spin } from \"@escolalms/components/lib/components/atoms/Spin/Spin\";\nimport { CourseCard } from \"@escolalms/components/lib/components/molecules/CourseCard/CourseCard\";\nimport Image from \"@escolalms/sdk/lib/react/components/Image\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\nimport { Col, Row } from \"react-grid-system\";\nimport Container from \"@/components/Container\";\n\nconst StyledTitleWrapper = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst TutorsPage = () => {\n  const { tutors, fetchTutors } = useContext(EscolaLMSContext);\n\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  useEffect(() => {\n    fetchTutors();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"advisor-area\">\n        <Container>\n          <Breadcrumbs\n            items={[\n              <Link to=\"/\">{t<string>(\"Home\")}</Link>,\n              <Text size=\"12\">{t(\"Tutors\")}</Text>,\n            ]}\n          />\n          <StyledTitleWrapper>\n            <Title level={1}> {t(\"Tutors\")}</Title>\n          </StyledTitleWrapper>\n\n          <Row>\n            {tutors.loading && (\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  width: \"100%\",\n                  minHeight: \"500px\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                }}\n                className=\"loader-wrapper\"\n              >\n                <Spin color={theme.primaryColor} />\n              </div>\n            )}\n            {!tutors.loading &&\n              (tutors.list || []).map((tutor: API.UserItem) => (\n                <Col sm={6} md={6} lg={4} key={tutor.id}>\n                  <CourseCard\n                    id={Number(tutor.id)}\n                    title={tutor.name}\n                    image={\n                      <Link to={`/tutors/${tutor.id}`}>\n                        {tutor.path_avatar ? (\n                          <Image\n                            path={tutor.path_avatar}\n                            srcSizes={[380, 380 * 2]}\n                          />\n                        ) : (\n                          <img\n                            className=\"tutor-card__avatar\"\n                            src={`/images/tutorblind.png`}\n                            alt=\"tutor_avatar\"\n                          />\n                        )}\n                      </Link>\n                    }\n                    subtitle={\n                      <Link to={`/tutors/${tutor.id}`}>\n                        <Text size=\"16\">\n                          <strong>\n                            {tutor.first_name} {tutor.last_name}\n                          </strong>\n                        </Text>\n                      </Link>\n                    }\n                  />\n                </Col>\n              ))}\n          </Row>\n        </Container>\n      </div>\n    </Layout>\n  );\n};\n\nexport default TutorsPage;\n","import React from \"react\";\nimport { BreadCrumbs } from \"@escolalms/components/lib/components/atoms/BreadCrumbs/BreadCrumbs\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  items: React.ReactNode[];\n};\n\nconst StyledBreadcrumbs = styled.div`\n  margin-bottom: 15px;\n  a {\n    text-decoration: none;\n    color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray5 : theme.gray2}!important;\n  }\n`;\n\nconst Breadcrumbs: React.FC<Props> = ({ items }) => {\n  return (\n    <StyledBreadcrumbs>\n      <BreadCrumbs items={items} />\n    </StyledBreadcrumbs>\n  );\n};\n\nexport default Breadcrumbs;\n"],"sourceRoot":""}