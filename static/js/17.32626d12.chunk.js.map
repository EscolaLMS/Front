{"version":3,"sources":["components/Courses/CoursesContext.ts","components/Pagination/index.tsx","components/Courses/CoursesCollection/index.tsx","components/Courses/CoursesProvider.tsx","pages/courses/index.tsx","components/CourseImgPlaceholder/index.tsx","components/CourseCardWrapper/index.tsx","images/image.svg","components/CategoriesSection/index.tsx","images/placeholder-course.jpeg","components/PromotedCoursesSection/index.tsx"],"names":["CoursesContext","React","createContext","StyledPagination","styled","div","theme","primaryColor","Pagination","currentPage","total","perPage","onPage","lastPage","Math","ceil","href","className","onClick","e","preventDefault","Array","from","length","map","page","i","to","Text","size","StyledHeader","isMobile","white","filters","Object","keys","undefined","css","CoursesList","section","CoursesCollection","useContext","params","setParams","courses","EscolaLMSContext","categoryTree","uniqueTags","useState","parsedParams","setParsedParams","initialFilters","categories","tag","title","filterState","setFilterState","paramsLoaded","setParamsLoaded","t","useTranslation","history","useHistory","location","useLocation","useTheme","updateState","useCallback","updateObj","prevState","key","value","resetFilters","tagsFilters","list","item","label","String","useEffect","qs","parse","search","arrayFormat","parseNumbers","category_id","Title","level","loading","type","Categories","mobile","selectedCategories","drawerTitle","style","fontSize","handleChange","newValue","filter","indexOf","id","category","name","placeholder","onSubmit","backgroundColor","Dropdown","onChange","options","data","display","justifyContent","Spin","color","CourseCardWrapper","CourseCard","image","image_path","ResponsiveImage","path","alt","srcSizes","CourseImgPlaceholder","tags","index","Badge","subtitle","BreadCrumbs","hyphen","items","actions","Button","mode","push","footer","users_count","IconText","icon","text","lessons_count","meta","per_page","current_page","PromotedCoursesSection","CategoriesSection","parseParams","stringify","CoursesProvider","onlyFree","children","fetchCourses","pathname","split","apiParams","free","getApiParams","Provider","CoursesPage","Layout","metaTitle","StyledPlaceholder","gray4","gray2","src","Placeholder","CardWrapper","StyledSection","dots","filteredCategories","count","settings","arrows","infinite","speed","slidesToShow","slidesToScroll","centerMode","responsive","breakpoint","dotsPosition","slice","buttonText","onButtonClick","variant","radius","backgroundDark","backgroundLight","subtitleColor","black","Number","lineHeight","ImageBubble","image_url","header","textAlign","hideImage","onSecondaryButtonClick","block"],"mappings":"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","file":"static/js/17.32626d12.chunk.js","sourcesContent":["import React from 'react';\nimport { API } from '@escolalms/sdk/lib';\n\ninterface ReactCoursesList {\n  loading: boolean;\n  list?: API.PaginatedMetaList<API.CourseListItem>;\n  error?: API.DefaultResponseError;\n}\n\nexport const CoursesContext: React.Context<{\n  courses?: ReactCoursesList;\n  params?: API.CourseParams;\n  setParams?: (params: API.CourseParams) => void;\n  onlyFree?: boolean;\n}> = React.createContext({});\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledPagination = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  a {\n    text-decoration: none !important;\n  }\n  .arrow {\n    width: 10px;\n    height: 10px;\n    border-left: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ${({ theme }) => theme.primaryColor};\n    &--left {\n      transform: rotate(45deg);\n      margin-right: 10px;\n    }\n    &--right {\n      transform: rotate(-135deg);\n      margin-left: 10px;\n    }\n  }\n  .number {\n    margin: 0 8px;\n    p {\n      opacity: 0.5;\n      &.current {\n        color: ${({ theme }) => theme.primaryColor}!important;\n        font-weight: 700;\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nconst Pagination: React.FC<{\n  currentPage: number;\n  total: number;\n  perPage: number;\n  onPage: (page: number) => void;\n}> = ({ currentPage, total, perPage, onPage }) => {\n  const lastPage = Math.ceil(total / perPage);\n  return (\n    <StyledPagination>\n      <a\n        href=\"#!prev_page\"\n        className=\"prev page-numbers\"\n        onClick={(e) => {\n          e.preventDefault();\n          onPage(currentPage <= 1 ? 1 : currentPage - 1);\n        }}\n      >\n        <div className=\"arrow arrow--left\" />\n      </a>\n      {Array.from({ length: lastPage }).map((page, i) => (\n        <Link\n          onClick={(e) => {\n            e.preventDefault();\n            onPage(i + 1);\n          }}\n          to={`#!page-${i + 1}`}\n          key={`#${i + 1}`}\n          className=\"number\"\n        >\n          <Text\n            className={i + 1 === currentPage ? \"current\" : \"\"}\n            size=\"16\"\n            aria-current=\"page\"\n          >\n            {i + 1}\n          </Text>\n        </Link>\n      ))}\n      <a\n        href=\"#!next_page\"\n        className=\"next page-numbers\"\n        onClick={(e) => {\n          e.preventDefault();\n          onPage(currentPage === lastPage ? lastPage : currentPage + 1);\n        }}\n      >\n        <div className=\"arrow arrow--right\" />\n      </a>\n    </StyledPagination>\n  );\n};\n\nexport default Pagination;\n","//@ts-nocheck - delete when \"ids\" type will be aded to sdk\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { CoursesContext } from \"@/components/Courses/CoursesContext\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { Spin } from \"@escolalms/components/lib/components/atoms/Spin/Spin\";\nimport { Dropdown } from \"@escolalms/components/lib/components/molecules/Dropdown/Dropdown\";\nimport { useTranslation } from \"react-i18next\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { CourseCard } from \"@escolalms/components/lib/components/molecules/CourseCard/CourseCard\";\nimport { Categories } from \"@escolalms/components/lib/components/molecules/Categories/Categories\";\nimport styled, { css, useTheme } from \"styled-components\";\nimport { IconText } from \"@escolalms/components/lib/components/atoms/IconText/IconText\";\nimport { Badge } from \"@escolalms/components/lib/components/atoms/Badge/Badge\";\nimport { BreadCrumbs } from \"@escolalms/components/lib/components/atoms/BreadCrumbs/BreadCrumbs\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { CloseIcon, UserIcon } from \"../../../icons\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport qs from \"query-string\";\nimport Pagination from \"@/components/Pagination\";\nimport { isMobile } from \"react-device-detect\";\nimport PromotedCoursesSection from \"@/components/PromotedCoursesSection\";\nimport CategoriesSection from \"@/components/CategoriesSection\";\nimport { LessonsIcon } from \"../../../icons\";\nimport CourseImgPlaceholder from \"@/components/CourseImgPlaceholder\";\nimport { ResponsiveImage } from \"@escolalms/components/lib/components/organisms/ResponsiveImage/ResponsiveImage\";\nimport CourseCardWrapper from \"@/components/CourseCardWrapper\";\nimport { Search } from \"@escolalms/components\";\n\ntype updateParamType =\n  | { key: \"tag\"; value: string | undefined }\n  | { key: \"categories\"; value: number[] }\n  | { key: \"title\"; value: string };\n\ntype InitialFilters = {\n  categories: number[] | undefined;\n  tag: string | undefined;\n  title: string | undefined;\n};\n\nconst StyledHeader = styled(\"div\")<{ filters: API.CourseParams | undefined }>`\n  background: ${({ theme }) => theme.primaryColor};\n  padding: ${isMobile ? \"60px 20px 20px 20px\" : \"140px 40px 30px\"};\n  margin-bottom: ${isMobile ? \"100px\" : \"40px\"};\n  position: relative;\n  z-index: 100;\n\n  h1 {\n    color: ${({ theme }) => theme.white};\n    margin-bottom: ${({ filters }) =>\n      isMobile\n        ? 0\n        : filters && Object.keys(filters).length > 1\n        ? \"35px\"\n        : filters && Object.keys(filters).length === 1 && \"page\" in filters\n        ? \"-35px\"\n        : filters === undefined\n        ? \"-35px\"\n        : \"35px\"};\n    transition: margin-bottom 0.5s ease-out;\n  }\n\n  .filters-container {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    align-items: center;\n    position: relative;\n\n    .categories-container {\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n      &--loading {\n        opacity: 0.6;\n      }\n      ${isMobile &&\n      css`\n        position: absolute;\n        bottom: -95px;\n        left: -20px;\n        width: calc(100% + 40px);\n      `}\n\n      .clear-btn {\n        appearance: none;\n        background: transparent;\n        border: none;\n        outline: none;\n        margin-left: 15px;\n        cursor: pointer;\n        &--desktop {\n          display: ${isMobile ? \"none\" : \"block\"};\n        }\n        ${isMobile &&\n        css`\n          svg {\n            path {\n              fill: ${({ theme }) => theme.primaryColor};\n            }\n          }\n        `}\n      }\n\n      .categories-row {\n        display: flex;\n        max-width: ${isMobile ? \"100%\" : \"500px\"};\n        overflow-x: auto;\n        overflow-y: hidden;\n        justify-content: flex-start;\n        align-items: center;\n        column-gap: 10px;\n        padding-bottom: 5px;\n        ::-webkit-scrollbar {\n          height: 4px;\n          width: 4px;\n          border: 1px solid transparent;\n        }\n        ::-webkit-scrollbar-track {\n          border-radius: 0;\n          background: rgba(255, 255, 255, 0.2);\n        }\n        ::-webkit-scrollbar-thumb {\n          border-radius: 0;\n          background: #ffffff;\n        }\n\n        .single-filter {\n          border-width: 2px;\n          border-style: solid;\n          margin-bottom: 0;\n          padding: 10px 20px;\n          line-height: 0.9;\n          text-align: center;\n          max-height: 50px;\n          min-height: 50px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border-color: ${({ theme }) =>\n            isMobile ? theme.primaryColor : theme.white};\n          color: ${({ theme }) =>\n            isMobile ? theme.primaryColor : theme.white};\n\n          &--filters {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-width: 120px;\n            color: ${({ theme }) => theme.primaryColor};\n          }\n\n          &--active {\n            border-color: ${({ theme }) =>\n              isMobile ? theme.primaryColor : theme.white};\n            color: ${({ theme }) =>\n              isMobile ? theme.white : theme.primaryColor};\n            background-color: ${({ theme }) =>\n              isMobile ? theme.primaryColor : theme.white};\n          }\n        }\n      }\n    }\n    .mobile-categories-wrapper {\n      button {\n        color: ${({ theme }) => theme.primaryColor};\n        border-color: ${({ theme }) => theme.primaryColor};\n        min-width: 110px;\n      }\n    }\n\n    .selects-row {\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      column-gap: 35px;\n\n      @media (max-width: 991px) {\n        flex-direction: column;\n        justify-content: flex-start;\n        align-items: flex-start;\n        margin-top: 40px;\n      }\n      @media (max-width: 575px) {\n        row-gap: 15px;\n        margin-top: 20px;\n      }\n\n      .single-select--search {\n        .search-input-options {\n          display: none !important;\n        }\n        input {\n          background: transparent;\n          border-bottom: 1px solid #fff;\n          color: #fff;\n          border-radius: 0;\n        }\n\n        .fieldset {\n          border-color: transparent;\n        }\n\n        svg {\n          filter: brightness(0) invert(1);\n        }\n      }\n\n      .single-select--category {\n        min-width: 200px;\n      }\n    }\n  }\n`;\n\nconst CoursesList = styled.section`\n  margin-bottom: ${isMobile ? \"50px\" : \"75px\"};\n\n  .row {\n    gap: 30px 0;\n  }\n`;\n\nconst CoursesCollection: React.FC = () => {\n  const { params, setParams, courses } = useContext(CoursesContext);\n  const { categoryTree, uniqueTags } = useContext(EscolaLMSContext);\n  const [parsedParams, setParsedParams] = useState<\n    API.CourseParams | undefined\n  >();\n  const initialFilters = {\n    categories: [],\n    tag: \"\",\n    title: \"\",\n  };\n  const [filterState, setFilterState] =\n    useState<InitialFilters>(initialFilters);\n  const [paramsLoaded, setParamsLoaded] = useState<API.CourseParams | false>(\n    false\n  );\n  const { t } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n  const theme = useTheme();\n\n  const updateState = useCallback(\n    (updateObj: updateParamType) =>\n      setFilterState((prevState) => ({\n        ...prevState,\n        [updateObj.key]: updateObj.value,\n      })),\n    []\n  );\n\n  const resetFilters = () => {\n    setFilterState(initialFilters);\n  };\n\n  const tagsFilters = uniqueTags.list\n    ? uniqueTags.list?.map((item) => {\n        return { label: String(item.title), value: String(item.title) };\n      })\n    : [];\n\n  useEffect(() => {\n    params && setParamsLoaded(params);\n  }, [params]);\n\n  useEffect(() => {\n    paramsLoaded &&\n      setParsedParams(\n        qs.parse(location.search, {\n          arrayFormat: \"bracket\",\n          parseNumbers: true,\n        })\n      );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [paramsLoaded]);\n\n  useEffect(() => {\n    parsedParams &&\n      setFilterState({\n        categories: parsedParams.category_id,\n        tag: parsedParams.tag,\n        title: parsedParams.title,\n      });\n  }, [parsedParams]);\n  return (\n    <>\n      <StyledHeader filters={params}>\n        <Title level={1}> {t(\"CoursesPage.Courses\")}</Title>\n        <div className=\"filters-container\">\n          <div\n            className={`categories-container ${\n              courses?.loading && \"categories-container--loading\"\n            }`}\n          >\n            <div className=\"categories-row\">\n              {(filterState.tag ||\n                (filterState.categories &&\n                  filterState.categories?.length > 0)) &&\n                isMobile && (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setParsedParams({});\n                      setParams && setParams({ page: 1 });\n                      resetFilters();\n                    }}\n                    className=\"clear-btn\"\n                  >\n                    <CloseIcon />\n                  </button>\n                )}\n              {isMobile && (\n                <div className=\"mobile-categories-wrapper\">\n                  <Categories\n                    mobile\n                    categories={categoryTree.list || []}\n                    label={\"Kategoria\"}\n                    selectedCategories={\n                      filterState.categories &&\n                      filterState.categories.length > 0\n                        ? filterState.categories\n                        : parsedParams && parsedParams.category_id\n                    }\n                    drawerTitle={\n                      <Title\n                        level={5}\n                        style={{\n                          fontSize: \"14px\",\n                        }}\n                      >\n                        {t(\"CoursesPage.Category\")}\n                      </Title>\n                    }\n                    handleChange={(value) => {\n                      const newValue = value;\n                      updateState({\n                        key: \"categories\",\n                        value: newValue,\n                      });\n                      setParams &&\n                        setParams({\n                          ...params,\n                          page: 1,\n                          \"category_id[]\": newValue,\n                        });\n                    }}\n                  />\n                </div>\n              )}\n              {filterState.categories &&\n                filterState.categories.length > 0 &&\n                categoryTree?.list\n                  ?.filter(\n                    (item) => filterState.categories.indexOf(item.id) > -1\n                  )\n                  .map((category) => (\n                    <Text key={category.id} className=\"single-filter\">\n                      {category.name}\n                    </Text>\n                  ))}\n              {filterState?.tag && (\n                <Text className=\"single-filter\">{params?.tag}</Text>\n              )}\n              {filterState?.title && (\n                <Text className=\"single-filter\">{params?.title}</Text>\n              )}\n            </div>\n            {((filterState.categories && filterState.categories?.length > 0) ||\n              filterState.title ||\n              filterState.tag) &&\n              !isMobile && (\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setParsedParams({});\n                    setParams && setParams({ page: 1 });\n                    resetFilters();\n                  }}\n                  className=\"clear-btn clear-btn--desktop\"\n                >\n                  <CloseIcon />\n                </button>\n              )}\n          </div>\n          <div className=\"selects-row\">\n            <div className=\"single-select single-select--search\">\n              <Search\n                placeholder={t(\"CoursesPage.Search\")}\n                onSubmit={(e) => {\n                  const title = e;\n                  updateState({\n                    key: \"title\",\n                    value: title,\n                  });\n                  if (e === \"\") {\n                    params && delete params[\"title\"];\n                    setParams && setParams({ ...params, page: 1 });\n                  } else {\n                    setParams &&\n                      setParams({ ...params, page: 1, title: title });\n                  }\n                }}\n              />\n            </div>\n            {!isMobile && (\n              <div className=\"single-select single-select--category\">\n                <Categories\n                  backgroundColor={theme.primaryColor}\n                  categories={categoryTree.list || []}\n                  label={t(\"CoursesPage.Category\")}\n                  selectedCategories={\n                    filterState.categories && filterState.categories.length > 0\n                      ? filterState.categories\n                      : parsedParams && parsedParams.category_id\n                  }\n                  drawerTitle={\n                    <Title\n                      level={5}\n                      style={{\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      {t(\"CoursesPage.Category\")}\n                    </Title>\n                  }\n                  handleChange={(value) => {\n                    const newValue = value;\n                    updateState({\n                      key: \"categories\",\n                      value: newValue,\n                    });\n                    setParams &&\n                      setParams({\n                        ...params,\n                        page: 1,\n                        \"category_id[]\": newValue,\n                      });\n                  }}\n                />\n              </div>\n            )}\n            <div className=\"single-select single-select--tag\">\n              <Dropdown\n                onChange={(e) => {\n                  updateState({\n                    key: \"tag\",\n                    value: e.value,\n                  });\n                  setParams &&\n                    setParams({\n                      ...params,\n                      page: 1,\n                      tag: e.value,\n                    });\n                }}\n                backgroundColor={theme.primaryColor}\n                value={filterState.tag}\n                placeholder=\"Tag\"\n                options={[\n                  { label: t(\"CoursesPage.All\"), value: \"\" },\n                  ...tagsFilters,\n                ]}\n              />\n            </div>\n          </div>\n        </div>\n      </StyledHeader>\n      {courses &&\n      !courses.loading &&\n      (!courses.list || !courses.list.data?.length) ? (\n        <Title level={4}>{t(\"NoCourses\")}</Title>\n      ) : (\n        <>\n          {courses?.loading ? (\n            <div\n              style={{ display: \"flex\", justifyContent: \"center\" }}\n              className=\"loader-wrapper\"\n            >\n              <Spin color={theme.primaryColor} />\n            </div>\n          ) : (\n            <CoursesList>\n              <div className=\"row\">\n                {courses?.list?.data.map((item) => (\n                  <div className=\"col-xl-3 col-lg-4 col-md-6\" key={item.id}>\n                    <CourseCardWrapper>\n                      <CourseCard\n                        mobile={isMobile}\n                        id={item.id}\n                        image={\n                          <Link to={`/courses/${item.id}`}>\n                            {item.image_path ? (\n                              <ResponsiveImage\n                                path={item.image_path}\n                                alt={item.title}\n                                srcSizes={[300, 600, 900]}\n                              />\n                            ) : (\n                              <CourseImgPlaceholder />\n                            )}\n                          </Link>\n                        }\n                        tags={\n                          <>\n                            {item.tags?.map((item, index) => (\n                              <Badge key={index} color={theme.primaryColor}>\n                                <Link\n                                  style={{ color: theme.white }}\n                                  to={`/courses/?tag=${item.title}`}\n                                >\n                                  {item.title}\n                                </Link>\n                              </Badge>\n                            ))}\n                          </>\n                        }\n                        subtitle={\n                          item.subtitle ? (\n                            <Text size=\"12\">\n                              <Link\n                                style={{ color: theme.primaryColor }}\n                                to={`/courses/${item.id}`}\n                              >\n                                <strong>{item.subtitle}</strong>\n                              </Link>\n                            </Text>\n                          ) : undefined\n                        }\n                        title={\n                          <Link to={`/courses/${item.id}`}>{item.title}</Link>\n                        }\n                        categories={\n                          <BreadCrumbs\n                            hyphen=\"/\"\n                            items={item.categories?.map((category) => (\n                              <Link\n                                key={category.id}\n                                to={`/courses/?category_id[]=${category.id}`}\n                              >\n                                {category.name}\n                              </Link>\n                            ))}\n                          />\n                        }\n                        actions={\n                          <>\n                            <Button\n                              mode=\"secondary\"\n                              onClick={() =>\n                                history.push(`/courses/${item.id}`)\n                              }\n                            >\n                              {t<string>(\"Start now\")}\n                            </Button>\n                          </>\n                        }\n                        footer={\n                          <>\n                            {item.users_count && item.users_count > 0 ? (\n                              <IconText\n                                icon={<UserIcon />}\n                                text={`${item.users_count} ${t<string>(\n                                  \"Students\"\n                                )}`}\n                              />\n                            ) : (\n                              \"\"\n                            )}{\" \"}\n                            {item.lessons_count && item.lessons_count > 0 ? (\n                              <IconText\n                                icon={<LessonsIcon />}\n                                text={`${item.lessons_count} ${t<string>(\n                                  \"Lessons\"\n                                )}`}\n                              />\n                            ) : (\n                              \"\"\n                            )}\n                          </>\n                        }\n                      />\n                    </CourseCardWrapper>\n                  </div>\n                ))}\n              </div>\n            </CoursesList>\n          )}\n        </>\n      )}\n      {courses &&\n        courses.list &&\n        courses.list.meta.total > courses.list.meta.per_page && (\n          <Pagination\n            total={courses.list.meta.total}\n            perPage={courses.list.meta.per_page}\n            currentPage={courses.list.meta.current_page}\n            onPage={(i) =>\n              setParams &&\n              setParams({\n                ...params,\n                page: i,\n                per_page: 6,\n              })\n            }\n          />\n        )}\n      {courses && courses.list && courses.list.data.length >= 6 && (\n        <PromotedCoursesSection courses={courses.list.data} />\n      )}\n      {categoryTree && (\n        <CategoriesSection\n          categories={\n            categoryTree.list?.filter((category) => !!category.icon) || []\n          }\n        />\n      )}\n    </>\n  );\n};\n\nexport default CoursesCollection;\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport qs from \"query-string\";\nimport { CoursesContext } from \"./CoursesContext\";\n\nconst parseParams = (params: API.CourseParams = {}) => {\n  return qs.stringify(params);\n};\n\nconst CoursesProvider: React.FC<{\n  onlyFree?: boolean;\n  children: React.ReactNode;\n}> = ({ onlyFree = true, children }) => {\n  const { fetchCourses, courses } = useContext(EscolaLMSContext);\n  const location = useLocation();\n  const { push } = useHistory();\n\n  const [params, setParams] = useState<API.CourseParams | undefined>();\n\n  const getApiParams = (params: API.CourseParams = {}): API.CourseParams => {\n    const apiParams = { ...params };\n\n    if (onlyFree) apiParams.free = true;\n    return apiParams;\n  };\n\n  useEffect(() => {\n    push(`${location.pathname}?${parseParams(params)}`);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params, location.pathname]);\n\n  useEffect(() => {\n    if (\n      location.search &&\n      location.search.split(\"?\")[1] !== parseParams(params)\n    ) {\n      const parsedParams = qs.parse(location.search);\n      setParams(parsedParams);\n      fetchCourses(parsedParams || {});\n    } else {\n      fetchCourses(getApiParams(params));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.search]);\n\n  return (\n    <CoursesContext.Provider value={{ params, setParams, courses, onlyFree }}>\n      {children}\n    </CoursesContext.Provider>\n  );\n};\n\nexport default CoursesProvider;\n","import React from \"react\";\n\nimport Layout from \"@/components/_App/Layout\";\nimport CoursesCollection from \"@/components/Courses/CoursesCollection\";\nimport CoursesProvider from \"@/components/Courses/CoursesProvider\";\nimport { useTranslation } from \"react-i18next\";\n\nconst CoursesPage = () => {\n  const { t } = useTranslation();\n  return (\n    <Layout metaTitle={t(\"CoursesPage.Courses\")}>\n      <CoursesProvider onlyFree={false}>\n        <section className=\"courses-page\">\n          <div className=\"container\">\n            <CoursesCollection />\n          </div>\n        </section>\n      </CoursesProvider>\n    </Layout>\n  );\n};\n\nexport default CoursesPage;\n","import styled from \"styled-components\";\nimport Placeholder from \"../../images/image.svg\";\n\nconst StyledPlaceholder = styled.div`\n  width: 100%;\n  height: 100%;\n  border: 1px solid\n    ${({ theme }) => (theme.mode === \"light\" ? theme.gray4 : theme.gray2)};\n`;\n\nconst CourseImgPlaceholder = () => {\n  return (\n    <StyledPlaceholder>\n      <img src={Placeholder} alt=\"\" />\n    </StyledPlaceholder>\n  );\n};\n\nexport default CourseImgPlaceholder;\n","import React, { PropsWithChildren } from \"react\";\nimport styled from \"styled-components\";\n\nconst CardWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n\n  a {\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst CourseCardWrapper: React.FC<PropsWithChildren> = ({ children }) => {\n  return <CardWrapper>{children}</CardWrapper>;\n};\n\nexport default CourseCardWrapper;\n","export default __webpack_public_path__ + \"static/media/image.ece42557.svg\";","import { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { IconText } from \"@escolalms/components/lib/components/atoms/IconText/IconText\";\nimport { Slider } from \"@escolalms/components/lib/components/atoms/Slider/Slider\";\nimport { CategoryCard } from \"@escolalms/components/lib/components/molecules/CategoryCard/CategoryCard\";\nimport { isMobile } from \"react-device-detect\";\nimport { useTranslation } from \"react-i18next\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { IconSquares } from \"../../icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Settings } from \"react-slick\";\n\ntype Props = {\n  categories: API.Category[];\n};\n\nconst StyledSection = styled.section`\n  overflow: hidden;\n  padding: 60px 0 0;\n  @media (max-width: 768px) {\n    padding: 30px 0;\n  }\n  h3 {\n    text-align: center;\n    margin-bottom: 30px;\n  }\n  .slider-title {\n    @media (max-width: 575px) {\n      padding-right: 45%;\n    }\n  }\n  .categories-slider {\n    .slick-dots {\n      bottom: 40px;\n    }\n  }\n  .slick-track {\n    display: flex;\n    gap: 0 20px;\n  }\n  .slick-slide {\n    @media (max-width: 991px) {\n      display: flex !important;\n      justify-content: center;\n    }\n  }\n  .single-category-slide {\n    margin: 0 8px;\n    .category-card-icon {\n      img {\n        margin: 0 auto;\n        display: block;\n      }\n    }\n    @media (max-width: 991px) {\n      margin: 0 auto;\n      min-width: 300px;\n    }\n  }\n`;\n\nconst CategoriesSection: React.FC<Props> = ({ categories }) => {\n  const [dots] = useState(true);\n  const { t } = useTranslation();\n  const history = useHistory();\n  const categoriesSliderSettings: Settings = {\n    arrows: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 1,\n    centerMode: false,\n    responsive: [\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 1,\n        },\n      },\n    ],\n  };\n  const filteredCategories = categories.filter(\n    (category) => category.count && category.count > 0\n  );\n  return (\n    <StyledSection>\n      <div className=\"container\">\n        <Title level={3}>\n          <strong>{t<string>(\"Homepage.CategoriesTitle\")}</strong>\n        </Title>\n        {isMobile ? (\n          <div className=\"categories-slider\">\n            <Slider\n              settings={{ ...categoriesSliderSettings, dots }}\n              dotsPosition=\"bottom\"\n            >\n              {filteredCategories.slice(-4).map((item) => (\n                <div className=\"single-category-slide\" key={item.id}>\n                  <CategoryCard\n                    icon={<img src={item.icon} alt={item.name} />}\n                    title={item.name}\n                    buttonText={t(\"Homepage.CategoryBtnText\")}\n                    subtitle={\n                      <IconText\n                        icon={<IconSquares />}\n                        text={`${t(\"CoursesLength\", {\n                          count: item.count,\n                        })}`}\n                      />\n                    }\n                    onButtonClick={() =>\n                      history.push(`/courses/?category_id[]=${item.id}`)\n                    }\n                    variant=\"gradient\"\n                  />\n                </div>\n              ))}\n            </Slider>\n          </div>\n        ) : (\n          <div className=\"row\">\n            {filteredCategories.slice(-4).map((item) => (\n              <div className=\"col-md-3\" key={item.id}>\n                <CategoryCard\n                  icon={<img src={item.icon} alt={item.name} />}\n                  title={item.name}\n                  buttonText={t(\"Homepage.CategoryBtnText\")}\n                  subtitle={\n                    <IconText\n                      icon={<IconSquares />}\n                      text={`${t(\"CoursesLength\", {\n                        count: item.count,\n                      })}`}\n                    />\n                  }\n                  onButtonClick={() =>\n                    history.push(`/courses/?category_id[]=${item.id}`)\n                  }\n                  variant=\"gradient\"\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </StyledSection>\n  );\n};\n\nexport default CategoriesSection;\n","export default __webpack_public_path__ + \"static/media/placeholder-course.eeb91632.jpeg\";","import { API } from \"@escolalms/sdk/lib\";\nimport React from \"react\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { CourseCard } from \"@escolalms/components/lib/components/molecules/CourseCard/CourseCard\";\nimport { ImageBubble } from \"@escolalms/components/lib/components/molecules/ImageBubble/ImageBubble\";\nimport { Badge } from \"@escolalms/components/lib/components/atoms/Badge/Badge\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled, { useTheme } from \"styled-components\";\nimport { isMobile } from \"react-device-detect\";\nimport CourseImgPlaceholder from \"../CourseImgPlaceholder\";\nimport { ResponsiveImage } from \"@escolalms/components/lib/components/organisms/ResponsiveImage/ResponsiveImage\";\nimport { BreadCrumbs } from \"@escolalms/components/lib/components/atoms/BreadCrumbs/BreadCrumbs\";\nimport CourseCardWrapper from \"../CourseCardWrapper\";\nimport Placeholder from \"../../images/placeholder-course.jpeg\";\n\ntype Props = {\n  courses: API.Course[];\n};\n\nconst StyledSection = styled.section`\n  margin: 40px 0;\n  @media (max-width: 768px) {\n    margin: 30px 0;\n  }\n  .container {\n    position: relative;\n    padding-top: 55px;\n    padding-bottom: 35px;\n    z-index: 1;\n    &:after {\n      position: absolute;\n      content: \"\";\n      width: ${isMobile ? \"100%\" : \"calc(100% + 100px)\"};\n      height: 100%;\n      background: ${({ theme }) =>\n        theme.theme === \"orangeTheme\" && theme.mode === \"light\"\n          ? theme.gray4\n          : \"linear-gradient(180deg, #FFFFFF 0%, rgba(255, 255, 255, 0) 100%)\"};\n      left: 50%;\n      transform: translate(-50%, 0);\n      top: 0;\n      z-index: -1;\n      opacity: ${({ theme }) => (theme.mode === \"dark\" ? 0.1 : 1)};\n      border-radius: ${({ theme }) => theme.radius};\n\n      @media (max-width: 1200px) {\n        background: ${({ theme }) =>\n          theme.theme === \"orangeTheme\"\n            ? \"linear-gradient(180deg, #F2F2F2 0%, rgba(242, 242, 242, 0) 100%)\"\n            : \"linear-gradient(180deg, #FFFFFF 0%, rgba(255, 255, 255, 0) 100%)\"};\n      }\n    }\n  }\n  .small-padding {\n    padding-left: 10px;\n    padding-right: 10px;\n\n    @media (max-width: 991px) {\n      padding-left: 15px;\n      padding-right: 15px;\n    }\n\n    &-wrapper {\n      padding-left: 10px;\n      padding-right: 10px;\n      @media (max-width: 991px) {\n        padding-left: 5px;\n        padding-right: 5px;\n      }\n    }\n  }\n  .header-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 55px;\n\n    button {\n      @media (max-width: 1200px) {\n        display: none;\n      }\n    }\n  }\n  .main-col-1 {\n    @media (max-width: 1200px) {\n      order: 2;\n    }\n  }\n  .main-col-2 {\n    @media (max-width: 1200px) {\n      order: 1;\n    }\n  }\n  .main-col-3 {\n    @media (max-width: 1200px) {\n      order: 3;\n    }\n  }\n  .mobile-hide {\n    @media (max-width: 1200px) {\n      display: none;\n    }\n  }\n  .show-more-btn {\n    display: none;\n    @media (max-width: 1200px) {\n      display: block;\n    }\n  }\n  .course-wrapper {\n    background-color: ${({ theme }) =>\n      theme.theme === \"orangeTheme\" && theme.mode === \"dark\"\n        ? theme.backgroundDark\n        : theme.theme === \"orangeTheme\" && theme.mode === \"light\"\n        ? theme.backgroundLight\n        : \"transparent\"};\n    padding: ${({ theme }) =>\n      theme.theme === \"orangeTheme\" ? \"12px 10px 1px 10px\" : 0};\n    margin-bottom: 20px;\n    &--small {\n      .course-section {\n        margin-top: 0;\n      }\n    }\n    &--hidden-section {\n      .course-section {\n        display: none;\n      }\n    }\n    &--big {\n      padding: 0;\n    }\n    .lesson-container {\n      display: none;\n    }\n  }\n`;\n\nconst PromotedCoursesSection: React.FC<Props> = ({ courses }) => {\n  const history = useHistory();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const subtitleColor = theme.mode === \"dark\" ? theme.white : theme.black;\n  return (\n    <StyledSection>\n      <div className=\"container\">\n        <div className=\"header-wrapper\">\n          <Title level={3}>{t<string>(\"Homepage.AwardedCoursesTitle\")}</Title>\n          <Button mode=\"outline\" onClick={() => history.push(\"/courses\")}>\n            {t<string>(\"Homepage.AwardedCoursesBtnText\")}\n          </Button>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xl-4 small-padding main-col-1\">\n            <div className=\"row justify-content-end\">\n              <div className=\"col-6 small-padding-wrapper\">\n                <div className=\"course-wrapper course-wrapper--small\">\n                  <CourseCardWrapper>\n                    <CourseCard\n                      id={Number(courses[0].id)}\n                      title=\"\"\n                      tags={\n                        <>\n                          {courses[0].tags?.map((item, index) => (\n                            <Badge key={index} color={theme.primaryColor}>\n                              <Link\n                                style={{ color: theme.white }}\n                                //@ts-ignore\n                                to={`/courses/?tag=${item.title}`}\n                              >\n                                {\n                                  //@ts-ignore\n                                  item.title\n                                }\n                              </Link>\n                            </Badge>\n                          ))}\n                        </>\n                      }\n                      image={\n                        <Link to={`/courses/${courses[0].id}`}>\n                          {courses[0].image_path ? (\n                            <ResponsiveImage\n                              path={courses[0].image_path}\n                              alt={courses[0].title}\n                              srcSizes={[300, 600, 900]}\n                            />\n                          ) : (\n                            <CourseImgPlaceholder />\n                          )}\n                        </Link>\n                      }\n                      subtitle={\n                        <Text size=\"12\" style={{ lineHeight: 1.2 }}>\n                          <Link\n                            style={{ color: subtitleColor }}\n                            to={`/courses/${courses[0].id}`}\n                          >\n                            <strong>{courses[0].title}</strong>\n                          </Link>\n                        </Text>\n                      }\n                    />\n                  </CourseCardWrapper>\n                </div>\n              </div>\n              <div className=\"col-6 small-padding-wrapper\">\n                <div className=\"course-wrapper course-wrapper--small\">\n                  <CourseCardWrapper>\n                    <CourseCard\n                      id={Number(courses[1].id)}\n                      title=\"\"\n                      tags={\n                        <>\n                          {courses[1].tags?.map((item, index) => (\n                            <Badge key={index} color={theme.primaryColor}>\n                              <Link\n                                style={{ color: theme.white }}\n                                //@ts-ignore\n                                to={`/courses/?tag=${item.title}`}\n                              >\n                                {\n                                  //@ts-ignore\n                                  item.title\n                                }\n                              </Link>\n                            </Badge>\n                          ))}\n                        </>\n                      }\n                      image={\n                        <Link to={`/courses/${courses[1].id}`}>\n                          {courses[1].image_path ? (\n                            <ResponsiveImage\n                              path={courses[1].image_path}\n                              alt={courses[1].title}\n                              srcSizes={[300, 600, 900]}\n                            />\n                          ) : (\n                            <CourseImgPlaceholder />\n                          )}\n                        </Link>\n                      }\n                      subtitle={\n                        <Text size=\"12\" style={{ lineHeight: 1.2 }}>\n                          <Link\n                            style={{ color: subtitleColor }}\n                            to={`/courses/${courses[1].id}`}\n                          >\n                            <strong>{courses[1].title}</strong>\n                          </Link>\n                        </Text>\n                      }\n                    />\n                  </CourseCardWrapper>\n                </div>\n              </div>\n              <div className=\"col-lg-9 small-padding-wrapper mobile-hide\">\n                <div className=\"course-wrapper course-wrapper--small\">\n                  <CourseCardWrapper>\n                    <CourseCard\n                      id={Number(courses[2].id)}\n                      title=\"\"\n                      tags={\n                        <>\n                          {courses[2].tags?.map((item, index) => (\n                            <Badge key={index} color={theme.primaryColor}>\n                              <Link\n                                style={{ color: theme.white }}\n                                //@ts-ignore\n                                to={`/courses/?tag=${item.title}`}\n                              >\n                                {\n                                  //@ts-ignore\n                                  item.title\n                                }\n                              </Link>\n                            </Badge>\n                          ))}\n                        </>\n                      }\n                      image={\n                        <Link to={`/courses/${courses[2].id}`}>\n                          {courses[2].image_path ? (\n                            <ResponsiveImage\n                              path={courses[2].image_path}\n                              alt={courses[2].title}\n                              srcSizes={[300, 600, 900]}\n                            />\n                          ) : (\n                            <CourseImgPlaceholder />\n                          )}\n                        </Link>\n                      }\n                      subtitle={\n                        <Text size=\"12\" style={{ lineHeight: 1.2 }}>\n                          <Link\n                            style={{ color: subtitleColor }}\n                            to={`/courses/${courses[2].id}`}\n                          >\n                            <strong>{courses[2].title}</strong>\n                          </Link>\n                        </Text>\n                      }\n                    />\n                  </CourseCardWrapper>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-5 small-padding main-col-2\">\n            <div className=\"course-wrapper course-wrapper--big\">\n              <ImageBubble\n                image={{\n                  src: courses[5].image_url || Placeholder,\n                  alt: courses[5].title || \"\",\n                }}\n                header={\n                  <div style={{ textAlign: \"right\" }}>\n                    {courses[5].tags?.map(\n                      (\n                        item: any //TODO: Fix types of tags in sdk\n                      ) => (\n                        <Link\n                          key={item.title}\n                          to={`/courses/tag=${item.title}`}\n                        >\n                          <Badge>{item.title}</Badge>\n                        </Link>\n                      )\n                    )}\n                  </div>\n                }\n              >\n                <CourseCardWrapper>\n                  <CourseCard\n                    id={Number(courses[5].id)}\n                    title={\n                      <Link to={`/courses/${courses[5].id}`}>\n                        {courses[5].title}\n                      </Link>\n                    }\n                    hideImage\n                    buttonText={t<string>(\"HowItWorks\")}\n                    onButtonClick={() =>\n                      history.push(`/courses/${courses[5].id}`)\n                    }\n                    subtitle={\n                      <Text>\n                        <strong\n                          style={{\n                            fontSize: 14,\n                            display: \"inline-block\",\n                            lineHeight: 1.2,\n                          }}\n                        >\n                          {courses[5].title}\n                        </strong>\n                      </Text>\n                    }\n                    categories={\n                      <BreadCrumbs\n                        hyphen=\"/\"\n                        items={\n                          courses[5].categories?.map((category) => (\n                            <Link\n                              style={{\n                                color: subtitleColor,\n                              }}\n                              key={category.id}\n                              to={`/courses/?category_id[]=${category.id}`}\n                            >\n                              {category.name}\n                            </Link>\n                          )) || []\n                        }\n                      />\n                    }\n                    onSecondaryButtonClick={() =>\n                      history.push(`/courses/${courses[5].id}`)\n                    }\n                  />\n                </CourseCardWrapper>\n              </ImageBubble>\n            </div>\n          </div>\n          <div className=\"col-xl-3 small-padding main-col-3\">\n            <div className=\"row\">\n              <div className=\"col-xl-12 col-6 small-padding-wrapper\">\n                <div className=\"course-wrapper course-wrapper--small course-wrapper--hidden-section\">\n                  <CourseCardWrapper>\n                    <CourseCard\n                      id={Number(courses[5].id)}\n                      title=\"\"\n                      tags={\n                        <>\n                          {courses[5].tags?.map((item, index) => (\n                            <Badge key={index} color={theme.primaryColor}>\n                              <Link\n                                style={{ color: theme.white }}\n                                //@ts-ignore\n                                to={`/courses/?tag=${item.title}`}\n                              >\n                                {\n                                  //@ts-ignore\n                                  item.title\n                                }\n                              </Link>\n                            </Badge>\n                          ))}\n                        </>\n                      }\n                      image={\n                        <Link to={`/courses/${courses[5].id}`}>\n                          {courses[5].image_path ? (\n                            <ResponsiveImage\n                              path={courses[5].image_path}\n                              alt={courses[5].title}\n                              srcSizes={[300, 600, 900]}\n                            />\n                          ) : (\n                            <CourseImgPlaceholder />\n                          )}\n                        </Link>\n                      }\n                      subtitle={\n                        <Text size=\"12\" style={{ lineHeight: 1.2 }}>\n                          <Link\n                            style={{ color: subtitleColor }}\n                            to={`/courses/${courses[5].id}`}\n                          >\n                            <strong>{courses[5].title}</strong>\n                          </Link>\n                        </Text>\n                      }\n                    />\n                  </CourseCardWrapper>\n                </div>\n              </div>\n              <div className=\"col-xl-9 col-6 small-padding-wrapper\">\n                <div className=\"course-wrapper course-wrapper--small course-wrapper--hidden-section\">\n                  <CourseCardWrapper>\n                    <CourseCard\n                      id={Number(courses[4].id)}\n                      title=\"\"\n                      tags={\n                        <>\n                          {courses[4].tags?.map((item, index) => (\n                            <Badge key={index} color={theme.primaryColor}>\n                              <Link\n                                style={{ color: theme.white }}\n                                //@ts-ignore\n                                to={`/courses/?tag=${item.title}`}\n                              >\n                                {\n                                  //@ts-ignore\n                                  item.title\n                                }\n                              </Link>\n                            </Badge>\n                          ))}\n                        </>\n                      }\n                      image={\n                        <Link to={`/courses/${courses[4].id}`}>\n                          {courses[4].image_path ? (\n                            <ResponsiveImage\n                              path={courses[4].image_path}\n                              alt={courses[4].title}\n                              srcSizes={[300, 600, 900]}\n                            />\n                          ) : (\n                            <CourseImgPlaceholder />\n                          )}\n                        </Link>\n                      }\n                      subtitle={\n                        <Text size=\"12\" style={{ lineHeight: 1.2 }}>\n                          <Link\n                            style={{ color: subtitleColor }}\n                            to={`/courses/${courses[4].id}`}\n                          >\n                            <strong>{courses[4].title}</strong>\n                          </Link>\n                        </Text>\n                      }\n                    />\n                  </CourseCardWrapper>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Button\n          className=\"show-more-btn\"\n          onClick={() => history.push(\"/courses\")}\n          block\n          mode=\"outline\"\n        >\n          {t<string>(\"Homepage.AwardedCoursesBtnText\")}\n        </Button>\n      </div>\n    </StyledSection>\n  );\n};\n\nexport default PromotedCoursesSection;\n"],"sourceRoot":""}