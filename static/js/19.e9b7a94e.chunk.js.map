{"version":3,"sources":["components/Courses/CoursesContext.ts","components/Pagination/index.tsx","components/Courses/CoursesCollection/index.tsx","components/Courses/CoursesProvider.tsx","pages/courses/index.tsx","components/CourseImgPlaceholder/index.tsx","components/PromotedCoursesSection/index.tsx","components/CategoriesSection/index.tsx"],"names":["CoursesContext","React","createContext","StyledPagination","styled","div","theme","primaryColor","Pagination","currentPage","total","perPage","onPage","lastPage","Math","ceil","href","className","onClick","e","preventDefault","Array","from","length","map","page","i","to","Text","size","StyledHeader","isMobile","white","filters","Object","keys","undefined","css","font","CoursesList","section","CoursesCollection","useContext","params","setParams","courses","EscolaLMSContext","categoryTree","uniqueTags","useState","parsedParams","setParsedParams","initialFilters","categories","free","tag","filterState","setFilterState","paramsLoaded","setParamsLoaded","t","useTranslation","history","useHistory","location","useLocation","useTheme","updateState","useCallback","updateObj","prevState","key","value","resetFilters","tagsFilters","list","item","label","String","title","useEffect","qs","parse","search","arrayFormat","parseNumbers","ids","Title","level","loading","type","Categories","mobile","selectedCategories","drawerTitle","style","fontSize","handleChange","newValue","filter","indexOf","id","category","name","backgroundColor","Dropdown","onChange","placeholder","options","data","display","justifyContent","Spin","color","CourseCard","image","image_url","src","alt","CourseImgPlaceholder","tags","index","Badge","subtitle","BreadCrumbs","hyphen","items","actions","Button","mode","push","footer","users_count","IconText","icon","text","lessons_count","meta","per_page","current_page","PromotedCoursesSection","CategoriesSection","parseParams","stringify","CoursesProvider","onlyFree","children","fetchCourses","pathname","split","apiParams","getApiParams","Provider","CoursesPage","Layout","metaTitle","StyledPlaceholder","gray4","gray2","StyledSection","radius","backgroundDark","backgroundLight","Number","lineHeight","black","header","textAlign","hideImage","buttonText","onButtonClick","categoryElements","onCategoryClick","onSecondaryButtonClick","secondaryButtonText","block","dots","settings","arrows","infinite","speed","slidesToShow","slidesToScroll","centerMode","dotsPosition","slice","count","variant"],"mappings":"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","file":"static/js/19.e9b7a94e.chunk.js","sourcesContent":["import React from 'react';\nimport { API } from '@escolalms/sdk/lib';\n\ninterface ReactCoursesList {\n  loading: boolean;\n  list?: API.PaginatedMetaList<API.CourseListItem>;\n  error?: API.DefaultResponseError;\n}\n\nexport const CoursesContext: React.Context<{\n  courses?: ReactCoursesList;\n  params?: API.CourseParams;\n  setParams?: (params: API.CourseParams) => void;\n  onlyFree?: boolean;\n}> = React.createContext({});\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledPagination = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  a {\n    text-decoration: none !important;\n  }\n  .arrow {\n    width: 10px;\n    height: 10px;\n    border-left: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ${({ theme }) => theme.primaryColor};\n    &--left {\n      transform: rotate(45deg);\n      margin-right: 10px;\n    }\n    &--right {\n      transform: rotate(-135deg);\n      margin-left: 10px;\n    }\n  }\n  .number {\n    margin: 0 8px;\n    p {\n      opacity: 0.5;\n      &.current {\n        color: ${({ theme }) => theme.primaryColor}!important;\n        font-weight: 700;\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nconst Pagination: React.FC<{\n  currentPage: number;\n  total: number;\n  perPage: number;\n  onPage: (page: number) => void;\n}> = ({ currentPage, total, perPage, onPage }) => {\n  const lastPage = Math.ceil(total / perPage);\n  return (\n    <StyledPagination>\n      <a\n        href=\"#!prev_page\"\n        className=\"prev page-numbers\"\n        onClick={(e) => {\n          e.preventDefault();\n          onPage(currentPage <= 1 ? 1 : currentPage - 1);\n        }}\n      >\n        <div className=\"arrow arrow--left\" />\n      </a>\n      {Array.from({ length: lastPage }).map((page, i) => (\n        <Link\n          onClick={(e) => {\n            e.preventDefault();\n            onPage(i + 1);\n          }}\n          to={`#!page-${i + 1}`}\n          key={`#${i + 1}`}\n          className=\"number\"\n        >\n          <Text\n            className={i + 1 === currentPage ? \"current\" : \"\"}\n            size=\"16\"\n            aria-current=\"page\"\n          >\n            {i + 1}\n          </Text>\n        </Link>\n      ))}\n      <a\n        href=\"#!next_page\"\n        className=\"next page-numbers\"\n        onClick={(e) => {\n          e.preventDefault();\n          onPage(currentPage === lastPage ? lastPage : currentPage + 1);\n        }}\n      >\n        <div className=\"arrow arrow--right\" />\n      </a>\n    </StyledPagination>\n  );\n};\n\nexport default Pagination;\n","//@ts-nocheck - delete when \"ids\" type will be aded to sdk\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { CoursesContext } from \"@/components/Courses/CoursesContext\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { Spin } from \"@escolalms/components/lib/components/atoms/Spin/Spin\";\nimport { Dropdown } from \"@escolalms/components/lib/components/molecules/Dropdown/Dropdown\";\nimport { useTranslation } from \"react-i18next\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { CourseCard } from \"@escolalms/components/lib/components/molecules/CourseCard/CourseCard\";\nimport { Categories } from \"@escolalms/components/lib/components/molecules/Categories/Categories\";\nimport styled, { css, useTheme } from \"styled-components\";\nimport { IconText } from \"@escolalms/components/lib/components/atoms/IconText/IconText\";\nimport { Badge } from \"@escolalms/components/lib/components/atoms/Badge/Badge\";\nimport { BreadCrumbs } from \"@escolalms/components/lib/components/atoms/BreadCrumbs/BreadCrumbs\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { CloseIcon, UserIcon } from \"../../../icons\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport qs from \"query-string\";\nimport Pagination from \"@/components/Pagination\";\nimport { isMobile } from \"react-device-detect\";\nimport PromotedCoursesSection from \"@/components/PromotedCoursesSection\";\nimport CategoriesSection from \"@/components/CategoriesSection\";\nimport { LessonsIcon } from \"../../../icons\";\nimport CourseImgPlaceholder from \"@/components/CourseImgPlaceholder\";\n\ntype updateParamType =\n  | { key: \"free\" | \"tag\"; value: string | undefined }\n  | { key: \"categories\"; value: number[] };\n\ntype InitialFilters = {\n  categories: number[] | undefined;\n  free: string | undefined;\n  tag: string | undefined;\n};\n\nconst StyledHeader = styled(\"div\")<{ filters: API.CourseParams | undefined }>`\n  background: ${({ theme }) => theme.primaryColor};\n  padding: ${isMobile ? \"60px 20px 20px 20px\" : \"140px 40px 30px\"};\n  margin-bottom: ${isMobile ? \"100px\" : \"40px\"};\n  position: relative;\n  z-index: 100;\n\n  h1 {\n    color: ${({ theme }) => theme.white};\n    margin-bottom: ${({ filters }) =>\n      filters && Object.keys(filters).length > 1\n        ? \"35px\"\n        : filters && Object.keys(filters).length === 1 && \"page\" in filters\n        ? \"-35px\"\n        : filters === undefined\n        ? \"-35px\"\n        : \"35px\"};\n    transition: margin-bottom 0.5s ease-out;\n  }\n\n  .filters-container {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    align-items: center;\n    position: relative;\n\n    .Dropdown-control {\n      background: transparent;\n      border-color: transparent;\n      .Dropdown-placeholder {\n        color: ${({ theme }) => theme.white};\n      }\n      .Dropdown-arrow-wrapper {\n        svg {\n          filter: brightness(0) invert(1);\n        }\n      }\n    }\n    .categories-container {\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n      &--loading {\n        opacity: 0.6;\n      }\n      ${isMobile &&\n      css`\n        position: absolute;\n        bottom: -95px;\n        left: -20px;\n        width: calc(100% + 40px);\n      `}\n\n      .clear-btn {\n        appearance: none;\n        background: transparent;\n        border: none;\n        outline: none;\n        margin-left: 15px;\n        cursor: pointer;\n        &--desktop {\n          display: ${isMobile ? \"none\" : \"block\"};\n        }\n        ${isMobile &&\n        css`\n          svg {\n            path {\n              fill: ${({ theme }) => theme.primaryColor};\n            }\n          }\n        `}\n      }\n\n      .categories-row {\n        display: flex;\n        max-width: ${isMobile ? \"100%\" : \"500px\"};\n        overflow-x: auto;\n        overflow-y: hidden;\n        justify-content: flex-start;\n        align-items: center;\n        column-gap: 10px;\n        padding-bottom: 5px;\n        ::-webkit-scrollbar {\n          height: 4px;\n          width: 4px;\n          border: 1px solid transparent;\n        }\n        ::-webkit-scrollbar-track {\n          border-radius: 0;\n          background: rgba(255, 255, 255, 0.2);\n        }\n        ::-webkit-scrollbar-thumb {\n          border-radius: 0;\n          background: #ffffff;\n        }\n\n        .single-filter {\n          border-width: 2px;\n          border-style: solid;\n          margin-bottom: 0;\n          padding: 10px 20px;\n          line-height: 0.9;\n          text-align: center;\n          max-height: 50px;\n          min-height: 50px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border-color: ${({ theme }) =>\n            isMobile ? theme.primaryColor : theme.white};\n          color: ${({ theme }) =>\n            isMobile ? theme.primaryColor : theme.white};\n\n          &--filters {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-width: 120px;\n            color: ${({ theme }) => theme.primaryColor};\n          }\n\n          &--active {\n            border-color: ${({ theme }) =>\n              isMobile ? theme.primaryColor : theme.white};\n            color: ${({ theme }) =>\n              isMobile ? theme.white : theme.primaryColor};\n            background-color: ${({ theme }) =>\n              isMobile ? theme.primaryColor : theme.white};\n          }\n        }\n      }\n    }\n    .mobile-categories-wrapper {\n      button {\n        color: ${({ theme }) => theme.primaryColor};\n        border-color: ${({ theme }) => theme.primaryColor};\n        min-width: 110px;\n      }\n    }\n    .selects-row {\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      column-gap: 35px;\n      @media (max-width: 991px) {\n        justify-content: space-between;\n        width: 100%;\n      }\n      @media (max-width: 575px) {\n        flex-direction: column;\n        justify-content: flex-start;\n        align-items: flex-start;\n        row-gap: 15px;\n      }\n      .single-select {\n        min-width: 130px;\n        &--category {\n          min-width: 200px;\n          div {\n            &:not(.categories-dropdown-options) {\n              border: none;\n            }\n          }\n          .categories-dropdown-options {\n            background-color: ${({ theme }) => theme.white};\n            margin-top: -1px;\n          }\n          .categories-dropdown-button {\n            font-size: 16px;\n            font-weight: 400;\n            font-family: ${({ theme }) => theme.font};\n          }\n          button {\n            ${isMobile &&\n            css`\n              color: ${({ theme }) => theme.white};\n              border-color: ${({ theme }) => theme.white};\n            `}\n          }\n\n          label {\n            input {\n              min-width: 20px;\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst CoursesList = styled.section`\n  .course-wrapper {\n    margin-bottom: ${isMobile ? \"50px\" : \"75px\"};\n    padding-bottom: 15px;\n    overflow: hidden;\n    a {\n      text-decoration: none;\n    }\n  }\n`;\n\nconst CoursesCollection: React.FC = () => {\n  const { params, setParams, courses } = useContext(CoursesContext);\n  const { categoryTree, uniqueTags } = useContext(EscolaLMSContext);\n  const [parsedParams, setParsedParams] = useState<\n    API.CourseParams | undefined\n  >();\n  const initialFilters = {\n    categories: [],\n    free: \"\",\n    tag: \"\",\n  };\n  const [filterState, setFilterState] =\n    useState<InitialFilters>(initialFilters);\n  const [paramsLoaded, setParamsLoaded] = useState<API.CourseParams | false>(\n    false\n  );\n  const { t } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n  const theme = useTheme();\n\n  const updateState = useCallback(\n    (updateObj: updateParamType) =>\n      setFilterState((prevState) => ({\n        ...prevState,\n        [updateObj.key]: updateObj.value,\n      })),\n    []\n  );\n\n  const resetFilters = () => {\n    setFilterState(initialFilters);\n  };\n\n  const typeFilters = [\n    { label: \"Wszystkie\", value: \"false\" },\n    { label: \"Darmowe\", value: \"true\" },\n  ];\n  const tagsFilters = uniqueTags.list\n    ? uniqueTags.list?.map((item) => {\n        return { label: String(item.title), value: String(item.title) };\n      })\n    : [];\n\n  useEffect(() => {\n    params && setParamsLoaded(params);\n  }, [params]);\n\n  useEffect(() => {\n    paramsLoaded &&\n      setParsedParams(\n        qs.parse(location.search, {\n          arrayFormat: \"bracket\",\n          parseNumbers: true,\n        })\n      );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [paramsLoaded]);\n\n  useEffect(() => {\n    parsedParams &&\n      setFilterState({\n        categories: parsedParams.ids,\n        tag: parsedParams.tag,\n        free: parsedParams.free,\n      });\n  }, [parsedParams]);\n  return (\n    <>\n      <StyledHeader filters={params}>\n        <Title level={1}> {t(\"CoursesPage.Courses\")}</Title>\n        <div className=\"filters-container\">\n          <div\n            className={`categories-container ${\n              courses?.loading && \"categories-container--loading\"\n            }`}\n          >\n            <div className=\"categories-row\">\n              {(filterState.free ||\n                filterState.tag ||\n                (filterState.categories &&\n                  filterState.categories?.length > 0)) &&\n                isMobile && (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setParsedParams({});\n                      setParams && setParams({ page: 1 });\n                      resetFilters();\n                    }}\n                    className=\"clear-btn\"\n                  >\n                    <CloseIcon />\n                  </button>\n                )}\n              {isMobile && (\n                <div className=\"mobile-categories-wrapper\">\n                  <Categories\n                    mobile\n                    categories={categoryTree.list || []}\n                    label={\"Kategoria\"}\n                    selectedCategories={\n                      filterState.categories &&\n                      filterState.categories.length > 0\n                        ? filterState.categories\n                        : parsedParams && parsedParams.ids\n                    }\n                    drawerTitle={\n                      <Title\n                        level={5}\n                        style={{\n                          fontSize: \"14px\",\n                        }}\n                      >\n                        {t(\"CoursesPage.Category\")}\n                      </Title>\n                    }\n                    handleChange={(value) => {\n                      const newValue = value;\n                      updateState({\n                        key: \"categories\",\n                        value: newValue,\n                      });\n                      setParams &&\n                        setParams({\n                          ...params,\n                          page: 1,\n                          \"ids[]\": newValue,\n                        });\n                    }}\n                  />\n                </div>\n              )}\n              {filterState.categories &&\n                filterState.categories.length > 0 &&\n                categoryTree?.list\n                  ?.filter(\n                    (item) => filterState.categories.indexOf(item.id) > -1\n                  )\n                  .map((category) => (\n                    <Text key={category.id} className=\"single-filter\">\n                      {category.name}\n                    </Text>\n                  ))}\n              {filterState && filterState.free === \"true\" && (\n                <Text className=\"single-filter\"> {t(\"CoursesPage.Free\")}</Text>\n              )}\n              {filterState && filterState.free === \"false\" && (\n                <Text className=\"single-filter\"> {t(\"CoursesPage.All\")}</Text>\n              )}\n              {filterState?.tag && (\n                <Text className=\"single-filter\">{params?.tag}</Text>\n              )}\n            </div>\n            {(filterState.free ||\n              filterState.tag ||\n              (filterState.categories && filterState.categories?.length > 0)) &&\n              !isMobile && (\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setParsedParams({});\n                    setParams && setParams({ page: 1 });\n                    resetFilters();\n                  }}\n                  className=\"clear-btn clear-btn--desktop\"\n                >\n                  <CloseIcon />\n                </button>\n              )}\n          </div>\n          <div className=\"selects-row\">\n            {!isMobile && (\n              <div className=\"single-select single-select--category\">\n                <Categories\n                  backgroundColor={theme.primaryColor}\n                  categories={categoryTree.list || []}\n                  label={\"Kategoria\"}\n                  selectedCategories={\n                    filterState.categories && filterState.categories.length > 0\n                      ? filterState.categories\n                      : parsedParams && parsedParams.ids\n                  }\n                  drawerTitle={\n                    <Title\n                      level={5}\n                      style={{\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      {t(\"CoursesPage.Category\")}\n                    </Title>\n                  }\n                  handleChange={(value) => {\n                    const newValue = value;\n                    updateState({\n                      key: \"categories\",\n                      value: newValue,\n                    });\n                    setParams &&\n                      setParams({\n                        ...params,\n                        page: 1,\n                        \"ids[]\": newValue,\n                      });\n                  }}\n                />\n              </div>\n            )}\n            <div className=\"single-select\">\n              <Dropdown\n                onChange={(e) => {\n                  updateState({\n                    key: \"free\",\n                    value: e.value,\n                  });\n                  setParams &&\n                    setParams({\n                      ...params,\n                      page: 1,\n                      free: e.value === \"true\" ? true : false,\n                    });\n                }}\n                placeholder={t(\"CoursesPage.Type\")}\n                value={filterState.free}\n                options={typeFilters}\n              />\n            </div>\n            <div className=\"single-select\">\n              <Dropdown\n                onChange={(e) => {\n                  updateState({\n                    key: \"tag\",\n                    value: e.value,\n                  });\n                  setParams &&\n                    setParams({\n                      ...params,\n                      page: 1,\n                      tag: e.value,\n                    });\n                }}\n                value={filterState.tag}\n                placeholder=\"Tag\"\n                options={[\n                  { label: t(\"CoursesPage.All\"), value: \"\" },\n                  ...tagsFilters,\n                ]}\n              />\n            </div>\n          </div>\n        </div>\n      </StyledHeader>\n      {courses &&\n      !courses.loading &&\n      (!courses.list || !courses.list.data?.length) ? (\n        <Title level={4}>{t(\"NoCourses\")}</Title>\n      ) : (\n        <>\n          {courses?.loading ? (\n            <div\n              style={{ display: \"flex\", justifyContent: \"center\" }}\n              className=\"loader-wrapper\"\n            >\n              <Spin color={theme.primaryColor} />\n            </div>\n          ) : (\n            <CoursesList>\n              <div className=\"row\">\n                {courses?.list?.data.map((item) => (\n                  <div className=\"col-xl-3 col-lg-4 col-md-6\" key={item.id}>\n                    <div className=\"course-wrapper\">\n                      <CourseCard\n                        mobile={isMobile}\n                        id={item.id}\n                        image={\n                          <Link to={`/courses/${item.id}`}>\n                            {item.image_url ? (\n                              <img src={item.image_url} alt={item.title} />\n                            ) : (\n                              <CourseImgPlaceholder />\n                            )}\n                          </Link>\n                        }\n                        tags={\n                          <>\n                            {item.tags?.map((item, index) => (\n                              <Badge key={index} color={theme.primaryColor}>\n                                <Link\n                                  style={{ color: theme.white }}\n                                  to={`/courses/?tag=${item.title}`}\n                                >\n                                  {item.title}\n                                </Link>\n                              </Badge>\n                            ))}\n                          </>\n                        }\n                        subtitle={\n                          item.subtitle ? (\n                            <Text size=\"12\">\n                              <Link\n                                style={{ color: theme.primaryColor }}\n                                to={`/courses/${item.id}`}\n                              >\n                                <strong>{item.subtitle}</strong>\n                              </Link>\n                            </Text>\n                          ) : undefined\n                        }\n                        title={\n                          <Link to={`/courses/${item.id}`}>{item.title}</Link>\n                        }\n                        categories={\n                          <BreadCrumbs\n                            hyphen=\"/\"\n                            items={item.categories?.map((category) => (\n                              <Link\n                                key={category.id}\n                                to={`/courses/?ids[]=${category.id}`}\n                              >\n                                {category.name}\n                              </Link>\n                            ))}\n                          />\n                        }\n                        actions={\n                          <>\n                            <Button\n                              mode=\"secondary\"\n                              onClick={() =>\n                                history.push(`/courses/${item.id}`)\n                              }\n                            >\n                              {t<string>(\"Start now\")}\n                            </Button>\n                          </>\n                        }\n                        footer={\n                          <>\n                            {item.users_count && item.users_count > 0 ? (\n                              <IconText\n                                icon={<UserIcon />}\n                                text={`${item.users_count} ${t<string>(\n                                  \"Students\"\n                                )}`}\n                              />\n                            ) : (\n                              \"\"\n                            )}{\" \"}\n                            {item.lessons_count && item.lessons_count > 0 ? (\n                              <IconText\n                                icon={<LessonsIcon />}\n                                text={`${item.lessons_count} ${t<string>(\n                                  \"Lessons\"\n                                )}`}\n                              />\n                            ) : (\n                              \"\"\n                            )}\n                          </>\n                        }\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CoursesList>\n          )}\n        </>\n      )}\n      {courses &&\n        courses.list &&\n        courses.list.meta.total > courses.list.meta.per_page && (\n          <Pagination\n            total={courses.list.meta.total}\n            perPage={courses.list.meta.per_page}\n            currentPage={courses.list.meta.current_page}\n            onPage={(i) =>\n              setParams &&\n              setParams({\n                ...params,\n                page: i,\n                per_page: 6,\n              })\n            }\n          />\n        )}\n      {courses && courses.list && courses.list.data.length >= 6 && (\n        <PromotedCoursesSection courses={courses.list.data} />\n      )}\n      {categoryTree && (\n        <CategoriesSection categories={categoryTree.list || []} />\n      )}\n    </>\n  );\n};\n\nexport default CoursesCollection;\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport qs from \"query-string\";\nimport { CoursesContext } from \"./CoursesContext\";\n\nconst parseParams = (params: API.CourseParams = {}) => {\n  return qs.stringify(params);\n};\n\nconst CoursesProvider: React.FC<{\n  onlyFree?: boolean;\n  children: React.ReactNode;\n}> = ({ onlyFree = true, children }) => {\n  const { fetchCourses, courses } = useContext(EscolaLMSContext);\n  const location = useLocation();\n  const { push } = useHistory();\n\n  const [params, setParams] = useState<API.CourseParams | undefined>();\n\n  const getApiParams = (params: API.CourseParams = {}): API.CourseParams => {\n    const apiParams = { ...params };\n\n    if (onlyFree) apiParams.free = true;\n    return apiParams;\n  };\n\n  useEffect(() => {\n    push(`${location.pathname}?${parseParams(params)}`);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params, location.pathname]);\n\n  useEffect(() => {\n    if (\n      location.search &&\n      location.search.split(\"?\")[1] !== parseParams(params)\n    ) {\n      const parsedParams = qs.parse(location.search);\n      setParams(parsedParams);\n      fetchCourses(parsedParams || {});\n    } else {\n      fetchCourses(getApiParams(params));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.search]);\n\n  return (\n    <CoursesContext.Provider value={{ params, setParams, courses, onlyFree }}>\n      {children}\n    </CoursesContext.Provider>\n  );\n};\n\nexport default CoursesProvider;\n","import React from \"react\";\n\nimport Layout from \"@/components/_App/Layout\";\nimport CoursesCollection from \"@/components/Courses/CoursesCollection\";\nimport CoursesProvider from \"@/components/Courses/CoursesProvider\";\nimport { t } from \"i18next\";\n\nconst CoursesPage = () => {\n  return (\n    <Layout metaTitle={t(\"CoursesPage.Courses\")}>\n      <CoursesProvider onlyFree={false}>\n        <section className=\"courses-page\">\n          <div className=\"container\">\n            <CoursesCollection />\n          </div>\n        </section>\n      </CoursesProvider>\n    </Layout>\n  );\n};\n\nexport default CoursesPage;\n","import styled from \"styled-components\";\n\nconst StyledPlaceholder = styled.div`\n  width: 100%;\n  height: 100%;\n  border: 1px solid\n    ${({ theme }) => (theme.mode === \"light\" ? theme.gray4 : theme.gray2)};\n`;\n\nconst CourseImgPlaceholder = () => {\n  return <StyledPlaceholder />;\n};\n\nexport default CourseImgPlaceholder;\n","import { API } from \"@escolalms/sdk/lib\";\nimport React from \"react\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { CourseCard } from \"@escolalms/components/lib/components/molecules/CourseCard/CourseCard\";\nimport { ImageBubble } from \"@escolalms/components/lib/components/molecules/ImageBubble/ImageBubble\";\nimport { Badge } from \"@escolalms/components/lib/components/atoms/Badge/Badge\";\nimport { t } from \"i18next\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled, { useTheme } from \"styled-components\";\nimport { isMobile } from \"react-device-detect\";\nimport CourseImgPlaceholder from \"../CourseImgPlaceholder\";\n\ntype Props = {\n  courses: API.Course[];\n};\n\nconst StyledSection = styled.section`\n  margin: 60px 0;\n  @media (max-width: 768px) {\n    margin: 30px 0;\n  }\n  .container {\n    position: relative;\n    padding-top: 55px;\n    padding-bottom: 35px;\n    z-index: 1;\n    &:after {\n      position: absolute;\n      content: \"\";\n      width: ${isMobile ? \"100%\" : \"calc(100% + 100px)\"};\n      height: 100%;\n      background: ${({ theme }) =>\n        theme.theme === \"orangeTheme\" && theme.mode === \"light\"\n          ? theme.gray4\n          : \"linear-gradient(180deg, #FFFFFF 0%, rgba(255, 255, 255, 0) 100%)\"};\n      left: 50%;\n      transform: translate(-50%, 0);\n      top: 0;\n      z-index: -1;\n      opacity: ${({ theme }) => (theme.mode === \"dark\" ? 0.1 : 1)};\n      border-radius: ${({ theme }) => theme.radius};\n\n      @media (max-width: 1200px) {\n        background: ${({ theme }) =>\n          theme.theme === \"orangeTheme\"\n            ? \"linear-gradient(180deg, #F2F2F2 0%, rgba(242, 242, 242, 0) 100%)\"\n            : \"linear-gradient(180deg, #FFFFFF 0%, rgba(255, 255, 255, 0) 100%)\"};\n      }\n    }\n  }\n  a {\n    text-decoration: none !important;\n  }\n  .small-padding {\n    padding-left: 10px;\n    padding-right: 10px;\n\n    @media (max-width: 991px) {\n      padding-left: 15px;\n      padding-right: 15px;\n    }\n\n    &-wrapper {\n      padding-left: 10px;\n      padding-right: 10px;\n      @media (max-width: 991px) {\n        padding-left: 5px;\n        padding-right: 5px;\n      }\n    }\n  }\n  .header-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 55px;\n\n    button {\n      @media (max-width: 1200px) {\n        display: none;\n      }\n    }\n  }\n  .main-col-1 {\n    @media (max-width: 1200px) {\n      order: 2;\n    }\n  }\n  .main-col-2 {\n    @media (max-width: 1200px) {\n      order: 1;\n    }\n  }\n  .main-col-3 {\n    @media (max-width: 1200px) {\n      order: 3;\n    }\n  }\n  .mobile-hide {\n    @media (max-width: 1200px) {\n      display: none;\n    }\n  }\n  .show-more-btn {\n    display: none;\n    @media (max-width: 1200px) {\n      display: block;\n    }\n  }\n  .course-wrapper {\n    background-color: ${({ theme }) =>\n      theme.theme === \"orangeTheme\" && theme.mode === \"dark\"\n        ? theme.backgroundDark\n        : theme.theme === \"orangeTheme\" && theme.mode === \"light\"\n        ? theme.backgroundLight\n        : \"transparent\"};\n    padding: ${({ theme }) =>\n      theme.theme === \"orangeTheme\" ? \"12px 10px 1px 10px\" : 0};\n    margin-bottom: 20px;\n    &--small {\n      .course-section {\n        margin-top: 0;\n      }\n    }\n    &--hidden-section {\n      .course-section {\n        display: none;\n      }\n    }\n    &--big {\n      padding: 0;\n    }\n    .lesson-container {\n      display: none;\n    }\n  }\n`;\n\nconst PromotedCoursesSection: React.FC<Props> = ({ courses }) => {\n  const history = useHistory();\n  const theme = useTheme();\n  return (\n    <StyledSection>\n      <div className=\"container\">\n        <div className=\"header-wrapper\">\n          <Title level={3}>{t<string>(\"Homepage.AwardedCoursesTitle\")}</Title>\n          <Button mode=\"outline\" onClick={() => history.push(\"/courses\")}>\n            {t<string>(\"Homepage.AwardedCoursesBtnText\")}\n          </Button>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xl-4 small-padding main-col-1\">\n            <div className=\"row justify-content-end\">\n              <div className=\"col-6 small-padding-wrapper\">\n                <div className=\"course-wrapper course-wrapper--small\">\n                  <CourseCard\n                    id={Number(courses[0].id)}\n                    title=\"\"\n                    tags={\n                      <>\n                        {courses[0].tags?.map((item, index) => (\n                          <Badge key={index} color={theme.primaryColor}>\n                            <Link\n                              style={{ color: theme.white }}\n                              //@ts-ignore\n                              to={`/courses/?tag=${item.title}`}\n                            >\n                              {\n                                //@ts-ignore\n                                item.title\n                              }\n                            </Link>\n                          </Badge>\n                        ))}\n                      </>\n                    }\n                    image={\n                      <Link to={`/courses/${courses[0].id}`}>\n                        {courses[0].image_url ? (\n                          <img\n                            src={courses[0].image_url}\n                            alt={courses[0].title}\n                          />\n                        ) : (\n                          <CourseImgPlaceholder />\n                        )}\n                      </Link>\n                    }\n                    subtitle={\n                      <Text size=\"12\" style={{ lineHeight: 1.2 }}>\n                        <Link\n                          style={{ color: theme.black }}\n                          to={`/courses/${courses[0].id}`}\n                        >\n                          <strong>{courses[0].title}</strong>\n                        </Link>\n                      </Text>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-6 small-padding-wrapper\">\n                <div className=\"course-wrapper course-wrapper--small\">\n                  <CourseCard\n                    id={Number(courses[1].id)}\n                    title=\"\"\n                    tags={\n                      <>\n                        {courses[1].tags?.map((item, index) => (\n                          <Badge key={index} color={theme.primaryColor}>\n                            <Link\n                              style={{ color: theme.white }}\n                              //@ts-ignore\n                              to={`/courses/?tag=${item.title}`}\n                            >\n                              {\n                                //@ts-ignore\n                                item.title\n                              }\n                            </Link>\n                          </Badge>\n                        ))}\n                      </>\n                    }\n                    image={\n                      <Link to={`/courses/${courses[1].id}`}>\n                        {courses[1].image_url ? (\n                          <img\n                            src={courses[1].image_url}\n                            alt={courses[1].title}\n                          />\n                        ) : (\n                          <CourseImgPlaceholder />\n                        )}\n                      </Link>\n                    }\n                    subtitle={\n                      <Text size=\"12\" style={{ lineHeight: 1.2 }}>\n                        <Link\n                          style={{ color: theme.black }}\n                          to={`/courses/${courses[1].id}`}\n                        >\n                          <strong>{courses[1].title}</strong>\n                        </Link>\n                      </Text>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-lg-9 small-padding-wrapper mobile-hide\">\n                <div className=\"course-wrapper course-wrapper--small\">\n                  <CourseCard\n                    id={Number(courses[2].id)}\n                    title=\"\"\n                    tags={\n                      <>\n                        {courses[2].tags?.map((item, index) => (\n                          <Badge key={index} color={theme.primaryColor}>\n                            <Link\n                              style={{ color: theme.white }}\n                              //@ts-ignore\n                              to={`/courses/?tag=${item.title}`}\n                            >\n                              {\n                                //@ts-ignore\n                                item.title\n                              }\n                            </Link>\n                          </Badge>\n                        ))}\n                      </>\n                    }\n                    image={\n                      <Link to={`/courses/${courses[2].id}`}>\n                        {courses[2].image_url ? (\n                          <img\n                            src={courses[2].image_url}\n                            alt={courses[2].title}\n                          />\n                        ) : (\n                          <CourseImgPlaceholder />\n                        )}\n                      </Link>\n                    }\n                    subtitle={\n                      <Text size=\"12\" style={{ lineHeight: 1.2 }}>\n                        <Link\n                          style={{ color: theme.black }}\n                          to={`/courses/${courses[2].id}`}\n                        >\n                          <strong>{courses[2].title}</strong>\n                        </Link>\n                      </Text>\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-5 small-padding main-col-2\">\n            <div className=\"course-wrapper course-wrapper--big\">\n              <ImageBubble\n                image={{\n                  src: courses[5].image_url || \"\",\n                  alt: courses[5].title || \"\",\n                }}\n                header={\n                  <div style={{ textAlign: \"right\" }}>\n                    {courses[5].tags?.map(\n                      (\n                        item: any //TODO: Fix types of tags in sdk\n                      ) => (\n                        <Link\n                          key={item.title}\n                          to={`/courses/tag=${item.title}`}\n                        >\n                          <Badge>{item.title}</Badge>\n                        </Link>\n                      )\n                    )}\n                  </div>\n                }\n              >\n                <CourseCard\n                  id={Number(courses[5].id)}\n                  title={\n                    <Link to={`/courses/${courses[5].id}`}>\n                      {courses[5].title}\n                    </Link>\n                  }\n                  hideImage\n                  buttonText=\"Jak to działa\"\n                  onButtonClick={() =>\n                    history.push(`/courses/${courses[5].id}`)\n                  }\n                  subtitle={\n                    <Text>\n                      <strong\n                        style={{\n                          fontSize: 14,\n                          display: \"inline-block\",\n                          lineHeight: 1.2,\n                        }}\n                      >\n                        {courses[5].title}\n                      </strong>\n                    </Text>\n                  }\n                  categories={{\n                    categoryElements: courses[5].categories || [],\n                    onCategoryClick: (id) =>\n                      history.push(`/courses/?ids[]=${id}`),\n                  }}\n                  onSecondaryButtonClick={() =>\n                    history.push(`/courses/${courses[5].id}`)\n                  }\n                  secondaryButtonText=\"Jak to działa\"\n                />\n              </ImageBubble>\n            </div>\n          </div>\n          <div className=\"col-xl-3 small-padding main-col-3\">\n            <div className=\"row\">\n              <div className=\"col-xl-12 col-6 small-padding-wrapper\">\n                <div className=\"course-wrapper course-wrapper--small course-wrapper--hidden-section\">\n                  <CourseCard\n                    id={Number(courses[5].id)}\n                    title=\"\"\n                    tags={\n                      <>\n                        {courses[5].tags?.map((item, index) => (\n                          <Badge key={index} color={theme.primaryColor}>\n                            <Link\n                              style={{ color: theme.white }}\n                              //@ts-ignore\n                              to={`/courses/?tag=${item.title}`}\n                            >\n                              {\n                                //@ts-ignore\n                                item.title\n                              }\n                            </Link>\n                          </Badge>\n                        ))}\n                      </>\n                    }\n                    image={\n                      <Link to={`/courses/${courses[5].id}`}>\n                        {courses[5].image_url ? (\n                          <img\n                            src={courses[5].image_url}\n                            alt={courses[5].title}\n                          />\n                        ) : (\n                          <CourseImgPlaceholder />\n                        )}\n                      </Link>\n                    }\n                    subtitle={\n                      <Text size=\"12\" style={{ lineHeight: 1.2 }}>\n                        <Link\n                          style={{ color: theme.black }}\n                          to={`/courses/${courses[5].id}`}\n                        >\n                          <strong>{courses[5].title}</strong>\n                        </Link>\n                      </Text>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-xl-9 col-6 small-padding-wrapper\">\n                <div className=\"course-wrapper course-wrapper--small course-wrapper--hidden-section\">\n                  <CourseCard\n                    id={Number(courses[4].id)}\n                    title=\"\"\n                    tags={\n                      <>\n                        {courses[4].tags?.map((item, index) => (\n                          <Badge key={index} color={theme.primaryColor}>\n                            <Link\n                              style={{ color: theme.white }}\n                              //@ts-ignore\n                              to={`/courses/?tag=${item.title}`}\n                            >\n                              {\n                                //@ts-ignore\n                                item.title\n                              }\n                            </Link>\n                          </Badge>\n                        ))}\n                      </>\n                    }\n                    image={\n                      <Link to={`/courses/${courses[4].id}`}>\n                        {courses[4].image_url ? (\n                          <img\n                            src={courses[4].image_url}\n                            alt={courses[4].title}\n                          />\n                        ) : (\n                          <CourseImgPlaceholder />\n                        )}\n                      </Link>\n                    }\n                    subtitle={\n                      <Text size=\"12\" style={{ lineHeight: 1.2 }}>\n                        <Link\n                          style={{ color: theme.black }}\n                          to={`/courses/${courses[4].id}`}\n                        >\n                          <strong>{courses[4].title}</strong>\n                        </Link>\n                      </Text>\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Button\n          className=\"show-more-btn\"\n          onClick={() => history.push(\"/courses\")}\n          block\n          mode=\"outline\"\n        >\n          {t<string>(\"Homepage.AwardedCoursesBtnText\")}\n        </Button>\n      </div>\n    </StyledSection>\n  );\n};\n\nexport default PromotedCoursesSection;\n","import { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { IconText } from \"@escolalms/components/lib/components/atoms/IconText/IconText\";\nimport { Slider } from \"@escolalms/components/lib/components/atoms/Slider/Slider\";\nimport { CategoryCard } from \"@escolalms/components/lib/components/molecules/CategoryCard/CategoryCard\";\nimport { isMobile } from \"react-device-detect\";\nimport { t } from \"i18next\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { IconBook, IconSquares } from \"../../icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"@escolalms/sdk/lib\";\n\ntype Props = {\n  categories: API.Category[];\n};\n\nconst StyledSection = styled.section`\n  overflow: hidden;\n  padding: 60px 0;\n  @media (max-width: 768px) {\n    padding: 30px 0;\n  }\n  h3 {\n    text-align: center;\n    margin-bottom: 30px;\n  }\n  .slider-title {\n    @media (max-width: 575px) {\n      padding-right: 45%;\n    }\n  }\n  .categories-slider {\n    margin-left: -60px;\n    .slick-dots {\n      margin-left: 30px;\n      bottom: 40px;\n    }\n  }\n  .single-category-slide {\n    max-width: 272px;\n    margin: 0 8px;\n    @media (max-width: 390px) {\n      max-width: 230px;\n    }\n    @media (max-width: 330px) {\n      max-width: 200px;\n    }\n  }\n`;\n\nconst CategoriesSection: React.FC<Props> = ({ categories }) => {\n  const [dots] = useState(true);\n  const history = useHistory();\n  const categoriesSliderSettings = {\n    arrows: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    centerMode: true,\n  };\n  return (\n    <StyledSection>\n      <div className=\"container\">\n        <Title level={3}>\n          <strong>{t<string>(\"Homepage.CategoriesTitle\")}</strong>\n        </Title>\n        {isMobile ? (\n          <div className=\"categories-slider\">\n            <Slider\n              settings={{ ...categoriesSliderSettings, dots }}\n              dotsPosition=\"bottom\"\n            >\n              {categories.slice(-4).map((item) => (\n                <div className=\"single-category-slide\" key={item.id}>\n                  <CategoryCard\n                    icon={<img src={item.icon} alt={item.name} />}\n                    title={item.name}\n                    buttonText={t(\"Homepage.CategoryBtnText\")}\n                    subtitle={\n                      <IconText\n                        icon={<IconBook />}\n                        text={`${item.count} ${t(\"CoursesLength\")}`}\n                      />\n                    }\n                    onButtonClick={() =>\n                      history.push(`/courses/?ids[]=${item.id}`)\n                    }\n                    variant=\"gradient\"\n                  />\n                </div>\n              ))}\n            </Slider>\n          </div>\n        ) : (\n          <div className=\"row\">\n            {categories.slice(-4).map((item) => (\n              <div className=\"col-md-3\" key={item.id}>\n                <CategoryCard\n                  icon={<img src={item.icon} alt={item.name} />}\n                  title={item.name}\n                  buttonText={t(\"Homepage.CategoryBtnText\")}\n                  subtitle={\n                    <IconText\n                      icon={<IconSquares />}\n                      text={`${t(\"CoursesLength\", {\n                        count: item.count,\n                      })}`}\n                    />\n                  }\n                  onButtonClick={() =>\n                    history.push(`/courses/?ids[]=${item.id}`)\n                  }\n                  variant=\"gradient\"\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </StyledSection>\n  );\n};\n\nexport default CategoriesSection;\n"],"sourceRoot":""}