{"version":3,"sources":["components/Profile/ProfileConsultations/index.tsx","components/ConsultationTutorCard/ConsultationTutorCardStyles.tsx","components/ConsultationTutorCard/Image/index.tsx","components/ConsultationTutorCard/Content/UserInfo/index.tsx","components/ConsultationTutorCard/Content/DateInfo/index.tsx","components/TimeInfo/index.tsx","components/ConsultationTutorCard/Content/index.tsx","components/Status/index.tsx","components/ConsultationTutorCard/Actions/index.tsx","components/ConsultationTutorCard/Status/index.tsx","components/ConsultationTutorCard/index.tsx","components/Profile/ProfileTutorConsultations/index.tsx","pages/user/my-consultations.tsx","config/app.ts","utils/date.ts","components/BookTermModal/SuccessContent/index.tsx","components/BookTermSuccessModal/index.tsx","components/Profile/ProfileConsultations/ProfileConsultationsProvider.tsx","components/BookTermModal/SelectedTermContent/index.tsx","components/StyledTitle/ModalTitle/index.tsx","components/DateInfo/index.tsx","components/ConsultationCard/MeetModal/MeetModalStyles.tsx","components/ConsultationCard/MeetModal/index.tsx","components/ConsultationCard/Buttons/JoinButton/index.tsx","components/InfoBox/index.tsx","components/DatePicker/styles.tsx","components/DatePicker/index.tsx","components/BookTermModal/styles.tsx","components/BookTermModal/ProposedTermsContent/index.tsx","components/BookTermModal/UserSelectDatePicker/index.tsx","components/BookTermModal/index.tsx","components/ConsultationCard/Buttons/BookButton/index.tsx","components/ConsultationCard/Buttons/ChangeButton/index.tsx","components/ConsultationCard/Buttons/index.tsx","components/ConsultationCard/Content/index.tsx","components/ConsultationCard/Image/index.tsx","components/ConsultationCard/index.tsx","hooks/useRoles.ts"],"names":["ProfileConsultations","_ref","_userConsultations$li2","type","userConsultations","fetchUserConsultations","useContext","EscolaLMSContext","t","useTranslation","consultationsData","useMemo","_userConsultations$li","list","data","filter","consultation","ConsultationStatus","STARTED","UPCOMING","in_coming","is_started","is_ended","useEffect","_jsx","ProfileConsultationsProvider","children","loading","ContentLoader","length","Text","style","paddingLeft","isMobile","Row","gap","map","Col","xs","md","lg","ConsultationCard","id","memo","ConsultationTutorCardStyles","styled","div","_templateObject","_taggedTemplateLiteral","theme","font","ConsultationTutorCardImage","product","Link","to","concat","poster_path","ResponsiveImage","path","alt","name","srcSizes","CourseImgPlaceholder","ConsultationTutorCardContentUserInfoStyles","ConsultationTutorCardContentUserInfo","first_name","last_name","email","phone","user","_jsxs","className","ConsultationTutorCardContentDateInfoButtonsStyles","ConsultationTutorCardContentDateInfo","isEnded","isStarted","isReported","status","isApproved","isNotReported","isRejected","_Fragment","date","DateInfo","DateInfoTypes","ENDED","addTimeToDate","extractTimeUnits","duration","WAITING","info","ACCEPTED","consultation_term_id","ConsultationCardJoinButton","consultationTermId","formatDate","DEFAULT","TimeInfoStyles","primaryColor","_ref2","TimeInfo","_ref3","time","IconTime","color","width","height","ConsultationTutorCardContentStyles","ConsultationTutorCardContent","StatusStyles","StatusTypes","Status","useTheme","CANCELED","backgroundColor","ConsultationTutorCardButtons","approveConsultationTerm","rejectConsultationTerm","menuItems","content","IconText","icon","IconSuccess","text","onClick","IconCircleError","DropdownMenu","child","Button","mode","IconMenuVertical","ConsultationTutorCardStatusStyles","ConsultationTutorCardStatus","ConsultationTutorCard","props","_consultation$related","CourseCard","image","related_product","title","subtitle","footer","ProfileTutorConsultations","_tutorConsultations$l2","tutorConsultations","fetchTutorConsultations","_tutorConsultations$l","MyConsultationsPage","isTutor","useRoles","myConsultationsTabs","tabs","label","key","component","PAST","defaultActiveKey","ProfileLayout","withTabs","Tabs","APP_CONFIG","defaultDateFormat","defaultDateTimeFormat","tutorPlaceholderPath","dateFormat","arguments","undefined","format","Date","isTwoDatesEqual","firstDate","secondDate","createArrayWithDateAndTimes","terms","newTerms","forEach","term","existingTerm","find","times","push","removePastDates","dates","isAfter","sortDates","sort","a","b","getTime","input","matches","Array","from","matchAll","extractedUnits","foundMatch","match","value","parseInt","unit","numberRegex","add","years","year","months","month","weeks","week","days","day","hours","hour","minutes","minute","seconds","second","SuccessContentStyles","SuccessContent","block","BookTermSuccessModal","onClose","visible","Modal","animation","maskAnimation","destroyOnClose","ProfileConsultationsContext","createContext","showBookTermSuccess","setShowBookTermSuccess","useState","Provider","API_URL","window","REACT_APP_API_URL","process","SelectedTermContent","selectedDate","author","ModalTitle","InfoBox","Tutor","mobile","avatar","src","path_avatar","fullName","rating","ratingValue","description","bio","disabled","Title","gray1","gray3","DateInfoStyles","borderColor","IconCalendar","ConsultationMeetModalStyles","ConsultationMeetModal","meetData","setMeetData","setLoading","generateConsultationJitsy","async","res","success","getMeetUrl","bodyStyle","minHeight","roomName","url","showModal","setShowModal","InfoBoxStyles","StyledDatePicker","textColor","_ref4","buttonRadius","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","registerLocale","pl","en","DatePicker","onChange","includeDates","includeTimes","minDate","showTimeInput","timeInputLabel","i18n","ReactDatePicker","selected","inline","locale","language","StyledBookTermButtons","ProposedTermsContent","_consultation$propose","_sortedDates$find","setSelectedDay","selectedTime","setSelectedTime","step","setStep","bookConsultationTerm","proposed_terms","dateString","sortedDates","currentTimes","dateObj","inComing","executed_status","isAnyTerm","close","useCallback","toISOString","Tag","UserSelectDatePicker","BookTermModal","_consultation$product","isSingle","ConsultationCardBookButton","showBookTerm","ConsultationCardChangeButton","ConsultationCardButtons","history","useHistory","owned","ConsultationCardContentStyles","ConsultationCardContent","executed_at","ConsultationCardImage","image_path","ConsultationCardStyles","setShowBookTerm","actions","_user$value","_user$value$roles","roles","includes","isStudent","_user$value2","_user$value2$roles"],"mappings":"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","file":"static/js/32.e3b0fa42.chunk.js","sourcesContent":["import { memo, useContext, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { isMobile } from \"react-device-detect\";\nimport { Col, Row } from \"react-grid-system\";\nimport { ConsultationStatus } from \"../../../pages/user/my-consultations\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport ConsultationCard from \"@/components/ConsultationCard\";\nimport ContentLoader from \"@/components/ContentLoader\";\nimport ProfileConsultationsProvider from \"./ProfileConsultationsProvider\";\n\ninterface ProfileConsultationsProps {\n  type: ConsultationStatus;\n}\n\nconst ProfileConsultations = ({ type }: ProfileConsultationsProps) => {\n  const { userConsultations, fetchUserConsultations } =\n    useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n  const consultationsData = useMemo(\n    () =>\n      userConsultations.list?.data.filter((consultation) =>\n        type === ConsultationStatus.STARTED ||\n        type === ConsultationStatus.UPCOMING\n          ? consultation.in_coming || consultation.is_started\n          : consultation.is_ended\n      ) || [],\n    [type, userConsultations.list?.data]\n  );\n\n  useEffect(() => {\n    fetchUserConsultations();\n  }, [type, fetchUserConsultations]);\n\n  return (\n    <ProfileConsultationsProvider>\n      {userConsultations.loading ? (\n        <ContentLoader />\n      ) : consultationsData.length === 0 ? (\n        <Text style={{ paddingLeft: isMobile ? 20 : 40 }}>\n          {t<string>(\"MyProfilePage.OrdersEmpty\")}\n        </Text>\n      ) : (\n        <Row\n          style={{\n            gap: \"30px 0\",\n          }}\n        >\n          {consultationsData.map((consultation) => (\n            <Col key={consultation.id} xs={12} md={6} lg={4}>\n              <ConsultationCard consultation={consultation} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </ProfileConsultationsProvider>\n  );\n};\n\nexport default memo(ProfileConsultations);\n","import styled from \"styled-components\";\n\nexport const ConsultationTutorCardStyles = styled.div`\n  .course-section {\n    margin-top: 0px;\n  }\n\n  .course-card-buttons-group {\n    margin: 0;\n    width: 100%;\n\n    button {\n      width: 100%;\n      margin: 0;\n    }\n  }\n\n  p {\n    font-family: ${({ theme }) => theme.font};\n  }\n`;\n","import { Link } from \"react-router-dom\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ResponsiveImage from \"@escolalms/components/lib/components/organisms/ResponsiveImage/ResponsiveImage\";\nimport CourseImgPlaceholder from \"../../CourseImgPlaceholder\";\n\ninterface Props {\n  product: API.Product | undefined;\n}\n\nconst ConsultationTutorCardImage = ({ product }: Props) => {\n  if (!product) return null;\n  return (\n    <Link to={`/consultations/${product.id}`}>\n      {product.poster_path ? (\n        <ResponsiveImage\n          path={product.poster_path}\n          alt={product.name}\n          srcSizes={[300, 600, 900]}\n        />\n      ) : (\n        <CourseImgPlaceholder />\n      )}\n    </Link>\n  );\n};\n\nexport default ConsultationTutorCardImage;\n","import styled from \"styled-components\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\n\nconst ConsultationTutorCardContentUserInfoStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-height: 65px;\n\n  .text {\n    margin: 0;\n    font-size: 14px;\n  }\n`;\n\ninterface Props {\n  consultation: API.AppointmentTerm;\n}\n\nconst ConsultationTutorCardContentUserInfo = ({ consultation }: Props) => {\n  const { first_name, last_name, email, phone } = consultation.user;\n\n  return (\n    <ConsultationTutorCardContentUserInfoStyles>\n      <Text className=\"text\">\n        {first_name} {last_name}\n      </Text>\n      <Text className=\"text\">{email}</Text>\n      <Text className=\"text\">{phone}</Text>\n    </ConsultationTutorCardContentUserInfoStyles>\n  );\n};\n\nexport default ConsultationTutorCardContentUserInfo;\n","import { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { addTimeToDate, extractTimeUnits, formatDate } from \"@/utils/date\";\nimport DateInfo, { DateInfoTypes } from \"@/components/DateInfo\";\nimport ConsultationCardJoinButton from \"@/components/ConsultationCard/Buttons/JoinButton\";\n\nconst ConsultationTutorCardContentDateInfoButtonsStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 100%;\n  gap: 12px;\n`;\n\ninterface Props {\n  consultation: API.AppointmentTerm;\n}\n\nconst ConsultationTutorCardContentDateInfo = ({ consultation }: Props) => {\n  const { t } = useTranslation();\n  const isEnded = consultation.is_ended;\n  const isStarted = consultation.is_started;\n  const isReported = consultation.status === \"reported\";\n  const isApproved = consultation.status === \"approved\";\n  const isNotReported = consultation.status === \"not_reported\";\n  const isRejected = consultation.status === \"reject\";\n\n  return (\n    <>\n      {isEnded && consultation.date && (\n        <DateInfo\n          type={DateInfoTypes.ENDED}\n          date={addTimeToDate(\n            consultation.date,\n            extractTimeUnits(`${consultation.duration}`)\n          )}\n        />\n      )}\n      {isRejected && (\n        <DateInfo\n          type={DateInfoTypes.ENDED}\n          date={addTimeToDate(\n            consultation.date,\n            extractTimeUnits(`${consultation.duration}`)\n          )}\n        />\n      )}\n      {isReported && !isEnded && (\n        <DateInfo\n          type={DateInfoTypes.WAITING}\n          date={consultation.date}\n          info={t(\"ConsultationStatus.UnconfirmedInfo\")}\n        />\n      )}\n      {isApproved && !isEnded && (\n        <DateInfo\n          type={DateInfoTypes.ACCEPTED}\n          date={consultation.date}\n          info={\n            isStarted && consultation.consultation_term_id ? (\n              <ConsultationTutorCardContentDateInfoButtonsStyles>\n                <ConsultationCardJoinButton\n                  consultationTermId={consultation.consultation_term_id}\n                />\n              </ConsultationTutorCardContentDateInfoButtonsStyles>\n            ) : (\n              t(\"ConsultationStatus.AppointmentInfo\", {\n                date: formatDate(\n                  consultation.date,\n                  \"EEEE, dd LLLL yyyy, HH:mm\"\n                ),\n              })\n            )\n          }\n        />\n      )}\n      {isNotReported && <DateInfo type={DateInfoTypes.DEFAULT} />}\n    </>\n  );\n};\n\nexport default ConsultationTutorCardContentDateInfo;\n","import styled from \"styled-components\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { IconTime } from \"../../icons\";\n\nconst TimeInfoStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  border: 1px solid ${({ theme }) => theme.primaryColor};\n  border-radius: 2px;\n  align-items: center;\n\n  .icon-container {\n    display: flex;\n    align-items: center;\n    padding: 0.6rem;\n    background-color: ${({ theme }) => theme.primaryColor};\n  }\n\n  .time {\n    padding: 0.5rem;\n    margin: 0 auto;\n  }\n`;\n\ninterface TimeInfoProps {\n  time: string;\n}\n\nconst TimeInfo = ({ time }: TimeInfoProps) => {\n  return (\n    <TimeInfoStyles>\n      <div className=\"icon-container\">\n        <IconTime color=\"#ffffff\" width=\"22px\" height=\"22px\" />\n      </div>\n      <Text className=\"time\">{time}</Text>\n    </TimeInfoStyles>\n  );\n};\n\nexport default TimeInfo;\n","import styled from \"styled-components\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ConsultationTutorCardContentUserInfo from \"./UserInfo\";\nimport ConsultationTutorCardContentDateInfo from \"./DateInfo\";\nimport TimeInfo from \"@/components/TimeInfo\";\n\nconst ConsultationTutorCardContentStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 12px;\n`;\n\ninterface Props {\n  consultation: API.AppointmentTerm;\n}\n\nconst ConsultationTutorCardContent = ({ consultation }: Props) => {\n  return (\n    <ConsultationTutorCardContentStyles>\n      <ConsultationTutorCardContentUserInfo consultation={consultation} />\n      <TimeInfo time={consultation.duration} />\n      <ConsultationTutorCardContentDateInfo consultation={consultation} />\n    </ConsultationTutorCardContentStyles>\n  );\n};\n\nexport default ConsultationTutorCardContent;\n","import { useMemo } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nconst StatusStyles = styled.div`\n  display: flex;\n  align-items: center;\n  user-select: none;\n\n  .status {\n    display: block;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n  }\n\n  .name {\n    padding: 0.5rem;\n    font-family: ${({ theme }) => theme.font};\n  }\n`;\n\nexport enum StatusTypes {\n  \"ACCEPTED\",\n  \"WAITING\",\n  \"ENDED\",\n  \"CANCELED\",\n  \"DEFAULT\",\n}\n\ninterface Props {\n  status: StatusTypes;\n  name: string;\n}\n\nconst Status = ({ status, name }: Props) => {\n  const theme = useTheme();\n  const color = useMemo(() => {\n    switch (status) {\n      case StatusTypes.ACCEPTED:\n        return \"#198754\";\n      case StatusTypes.WAITING:\n        return \"#FFC300\";\n      case StatusTypes.ENDED:\n      case StatusTypes.CANCELED:\n        return \"#D22B2B\";\n      default:\n        return theme.primaryColor;\n    }\n  }, [theme.primaryColor, status]);\n\n  return (\n    <StatusStyles>\n      <div\n        className=\"status\"\n        style={{\n          backgroundColor: color,\n        }}\n      />\n      <div className=\"name\">{name}</div>\n    </StatusStyles>\n  );\n};\n\nexport default Status;\n","import { useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport IconText from \"@escolalms/components/lib/components/atoms/IconText/IconText\";\nimport { IconCircleError, IconMenuVertical, IconSuccess } from \"@/icons/index\";\nimport DropdownMenu from \"@escolalms/components/lib/components/molecules/DropdownMenu/DropdownMenu\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\n\ninterface Props {\n  consultation: API.AppointmentTerm;\n}\n\nconst ConsultationTutorCardButtons = ({ consultation }: Props) => {\n  const { approveConsultationTerm, rejectConsultationTerm } =\n    useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n  const { consultation_term_id } = consultation;\n\n  const menuItems = useMemo(\n    () => [\n      {\n        id: 1,\n        content: (\n          <IconText\n            icon={<IconSuccess />}\n            text={t(\"Confirm\")}\n            onClick={() => approveConsultationTerm(consultation_term_id)}\n          />\n        ),\n      },\n      {\n        id: 2,\n        content: (\n          <IconText\n            icon={<IconCircleError />}\n            text={t(\"Cancel\")}\n            onClick={() => rejectConsultationTerm(consultation_term_id)}\n          />\n        ),\n      },\n    ],\n    [approveConsultationTerm, consultation_term_id, rejectConsultationTerm, t]\n  );\n\n  return (\n    <DropdownMenu\n      menuItems={menuItems}\n      child={\n        <Button mode=\"icon\">\n          <IconMenuVertical />\n        </Button>\n      }\n    />\n  );\n};\n\nexport default ConsultationTutorCardButtons;\n","import { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport Status, { StatusTypes } from \"@/components/Status\";\nimport ConsultationTutorCardButtons from \"../Actions\";\n\nconst ConsultationTutorCardStatusStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  button > svg {\n    width: 24px;\n    height: 25px;\n  }\n`;\n\ninterface Props {\n  consultation: API.AppointmentTerm;\n}\n\nconst ConsultationTutorCardStatus = ({ consultation }: Props) => {\n  const { status, is_ended } = consultation;\n  const { t } = useTranslation();\n  const isReported = status === \"reported\";\n  const isApproved = status === \"approved\";\n  const isRejected = status === \"reject\";\n\n  if (isRejected) {\n    return (\n      <Status\n        status={StatusTypes.CANCELED}\n        name={t(\"ConsultationStatus.Canceled\")}\n      />\n    );\n  }\n  if (is_ended) {\n    return (\n      <Status status={StatusTypes.ENDED} name={t(\"ConsultationStatus.Ended\")} />\n    );\n  }\n  if (isReported) {\n    return (\n      <ConsultationTutorCardStatusStyles>\n        <Status\n          status={StatusTypes.WAITING}\n          name={t(\"ConsultationStatus.Unconfirmed\")}\n        />\n        <ConsultationTutorCardButtons consultation={consultation} />\n      </ConsultationTutorCardStatusStyles>\n    );\n  }\n  if (isApproved) {\n    return (\n      <Status\n        status={StatusTypes.ACCEPTED}\n        name={t(\"ConsultationStatus.Appointment\")}\n      />\n    );\n  }\n  return <Status status={StatusTypes.DEFAULT} name={status} />;\n};\n\nexport default ConsultationTutorCardStatus;\n\n// ConsultationStatus: {\n//   Unconfirmed: \"Unconfirmed\",\n//   Bought: \"Bought\",\n//   Canceled: \"Canceled\",\n//   Appointment: \"Appointment\",\n// }\n","import React from \"react\";\nimport { CourseCard } from \"@escolalms/components/lib/components/molecules/CourseCard/CourseCard\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { ConsultationTutorCardStyles } from \"./ConsultationTutorCardStyles\";\nimport ConsultationTutorCardImage from \"./Image\";\nimport ConsultationTutorCardContent from \"./Content\";\nimport ConsultationTutorCardStatus from \"./Status\";\n\ninterface ConsultationTutorCardProps {\n  consultation: API.AppointmentTerm;\n}\n\nconst ConsultationTutorCard: React.FC<ConsultationTutorCardProps> = (props) => {\n  const { consultation } = props;\n\n  return (\n    <ConsultationTutorCardStyles>\n      <CourseCard\n        id={consultation.consultation_term_id}\n        image={\n          <ConsultationTutorCardImage product={consultation.related_product} />\n        }\n        title={<ConsultationTutorCardStatus consultation={consultation} />}\n        subtitle={<p>{consultation.related_product?.name}</p>}\n        footer={<ConsultationTutorCardContent consultation={consultation} />}\n      />\n    </ConsultationTutorCardStyles>\n  );\n};\n\nexport default ConsultationTutorCard;\n","import { memo, useContext, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { isMobile } from \"react-device-detect\";\nimport { Col, Row } from \"react-grid-system\";\nimport { ConsultationStatus } from \"../../../pages/user/my-consultations\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport ConsultationTutorCard from \"@/components/ConsultationTutorCard\";\nimport ContentLoader from \"@/components/ContentLoader\";\n\ninterface ProfileTutorConsultationsProps {\n  type: ConsultationStatus;\n}\n\nconst ProfileTutorConsultations = ({\n  type,\n}: ProfileTutorConsultationsProps) => {\n  const { tutorConsultations, fetchTutorConsultations } =\n    useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n  const consultationsData = useMemo(\n    () =>\n      tutorConsultations.list?.data.filter((consultation) =>\n        type === ConsultationStatus.STARTED ||\n        type === ConsultationStatus.UPCOMING\n          ? consultation.in_coming || consultation.is_started\n          : consultation.is_ended\n      ) || [],\n    [type, tutorConsultations.list?.data]\n  );\n\n  useEffect(() => {\n    fetchTutorConsultations();\n  }, [fetchTutorConsultations]);\n\n  return (\n    <>\n      {tutorConsultations.loading ? (\n        <ContentLoader />\n      ) : consultationsData.length === 0 ? (\n        <Text style={{ paddingLeft: isMobile ? 20 : 40 }}>\n          {t<string>(\"MyProfilePage.OrdersEmpty\")}\n        </Text>\n      ) : (\n        <Row\n          style={{\n            gap: \"30px 0\",\n          }}\n        >\n          {consultationsData.map((consultation) => (\n            <Col key={consultation.consultation_term_id} xs={12} md={6} lg={4}>\n              <ConsultationTutorCard consultation={consultation} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default memo(ProfileTutorConsultations);\n","import { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport ProfileLayout from \"@/components/Profile/ProfileLayout\";\nimport { Tabs } from \"@escolalms/components/lib/components/atoms/Tabs/Tabs\";\nimport ProfileConsultations from \"@/components/Profile/ProfileConsultations\";\nimport ProfileTutorConsultations from \"@/components/Profile/ProfileTutorConsultations\";\nimport { useRoles } from \"@/hooks/useRoles\";\n\nexport enum ConsultationStatus {\n  UPCOMING = \"in_coming\",\n  PAST = \"is_ended\",\n  STARTED = \"is_started\",\n}\n\nconst MyConsultationsPage = () => {\n  const { t } = useTranslation();\n  const { isTutor } = useRoles();\n\n  const myConsultationsTabs = useMemo(\n    () => ({\n      tabs: isTutor\n        ? [\n            {\n              label: t(\"MyProfilePage.Upcoming\"),\n              key: 1,\n              component: (\n                <ProfileTutorConsultations type={ConsultationStatus.UPCOMING} />\n              ),\n            },\n            {\n              label: t(\"MyProfilePage.Archived\"),\n              key: 2,\n              component: (\n                <ProfileTutorConsultations type={ConsultationStatus.PAST} />\n              ),\n            },\n            {\n              label: t(\"MyProfilePage.BoughtUpcoming\"),\n              key: 3,\n              component: (\n                <ProfileConsultations type={ConsultationStatus.UPCOMING} />\n              ),\n            },\n            {\n              label: t(\"MyProfilePage.BoughtArchived\"),\n              key: 4,\n              component: (\n                <ProfileConsultations type={ConsultationStatus.PAST} />\n              ),\n            },\n          ]\n        : [\n            {\n              label: t(\"MyProfilePage.Upcoming\"),\n              key: 1,\n              component: (\n                <ProfileConsultations type={ConsultationStatus.UPCOMING} />\n              ),\n            },\n            {\n              label: t(\"MyProfilePage.Archived\"),\n              key: 2,\n              component: (\n                <ProfileConsultations type={ConsultationStatus.PAST} />\n              ),\n            },\n          ],\n      defaultActiveKey: 1,\n    }),\n    [isTutor, t]\n  );\n\n  return (\n    <ProfileLayout title={t(\"MyProfilePage.MyConsultations\")} withTabs>\n      <Tabs\n        tabs={myConsultationsTabs.tabs}\n        defaultActiveKey={myConsultationsTabs.defaultActiveKey}\n      />\n    </ProfileLayout>\n  );\n};\n\nexport default MyConsultationsPage;\n","export const APP_CONFIG = {\n  defaultDateFormat: \"dd/MM/yyyy\",\n  defaultDateTimeFormat: \"dd/MM/yyyy, HH:mm\",\n  tutorPlaceholderPath: \"/images/tutorblind.png\",\n};\n","import { add, format, isAfter } from \"date-fns\";\nimport { APP_CONFIG } from \"@/config/app\";\n\nexport const formatDate = (\n  date: string | number | Date | null | undefined,\n  dateFormat: string = APP_CONFIG.defaultDateFormat\n) => {\n  if (!date) return \"\";\n  return format(new Date(date), dateFormat);\n};\n\nexport const isTwoDatesEqual = (\n  firstDate: Date | string | number | null | undefined,\n  secondDate: Date | string | number | null | undefined,\n  format?: string\n) => {\n  if (!firstDate || !secondDate) return false;\n  return formatDate(firstDate, format) === formatDate(secondDate, format);\n};\n\nexport const createArrayWithDateAndTimes = (terms: string[] | Date[]) => {\n  const newTerms: {\n    date: string;\n    times: Date[];\n  }[] = [];\n\n  terms.forEach((term) => {\n    const date = format(new Date(term), \"MM/dd/yyyy\");\n    const existingTerm = newTerms.find(\n      (t) => format(new Date(t.date), \"MM/dd/yyyy\") === date\n    );\n\n    if (existingTerm) {\n      existingTerm.times.push(new Date(term));\n    } else {\n      newTerms.push({\n        date: date,\n        times: [new Date(term)],\n      });\n    }\n  });\n\n  return newTerms;\n};\n\nexport const removePastDates = (dates: Date[]) =>\n  dates.filter((date) => isAfter(date, new Date()));\n\nexport const sortDates = (dates: Date[]): Date[] =>\n  dates.sort((a, b) => a.getTime() - b.getTime());\n\nexport const extractTimeUnits = (input: string): Record<string, number> => {\n  const timeRegex = /(\\d+)\\s+(day|hour|minute|second|week|year)s?/g;\n  const matches = Array.from(input.matchAll(timeRegex));\n\n  const extractedUnits: Record<string, number> = {};\n\n  let foundMatch = false;\n  matches.forEach((match) => {\n    foundMatch = true;\n    const value = parseInt(match[1]);\n    const unit = match[2];\n\n    if (!extractedUnits[unit]) {\n      extractedUnits[unit] = value;\n    } else {\n      extractedUnits[unit] += value;\n    }\n  });\n\n  if (!foundMatch) {\n    const numberRegex = /\\d+/g;\n    const numberMatches = Array.from(input.matchAll(numberRegex));\n\n    numberMatches.forEach((match) => {\n      const value = parseInt(match[0]);\n      extractedUnits[\"hour\"] = value;\n    });\n  }\n\n  return extractedUnits;\n};\n\nexport const addTimeToDate = (\n  date: Date | string | number,\n  time: {\n    day?: number;\n    hour?: number;\n    minute?: number;\n    second?: number;\n    week?: number;\n    year?: number;\n    month?: number;\n  }\n) => {\n  return add(new Date(date), {\n    years: time.year || 0,\n    months: time.month || 0,\n    weeks: time.week || 0,\n    days: time.day || 0,\n    hours: time.hour || 0,\n    minutes: time.minute || 0,\n    seconds: time.second || 0,\n  });\n};\n","import styled, { useTheme } from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { IconSuccess } from \"../../../icons\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\n\nconst SuccessContentStyles = styled.div`\n  text-align: center;\n\n  .text {\n    margin: 1.5rem 0 3rem 0;\n  }\n`;\n\ninterface SuccessContentProps {\n  onClick: () => void;\n}\n\nconst SuccessContent = ({ onClick }: SuccessContentProps) => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  return (\n    <SuccessContentStyles>\n      <IconSuccess width=\"50px\" height=\"50px\" color={theme.primaryColor} />\n      <Text className=\"text\">{t(\"ConsultationPage.successTermInfo\")}</Text>\n      <Button mode=\"secondary\" onClick={onClick} block>\n        {t(\"ConsultationPage.Understand\")}\n      </Button>\n    </SuccessContentStyles>\n  );\n};\n\nexport default SuccessContent;\n","import Modal from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport SuccessContent from \"../BookTermModal/SuccessContent\";\n\ninterface Props {\n  onClose: () => void;\n  visible: boolean;\n}\n\nconst BookTermSuccessModal: React.FC<Props> = ({ onClose, visible }) => {\n  return (\n    <Modal\n      onClose={onClose}\n      visible={visible}\n      animation=\"zoom\"\n      maskAnimation=\"fade\"\n      destroyOnClose={true}\n      width={468}\n    >\n      <SuccessContent onClick={onClose} />\n    </Modal>\n  );\n};\n\nexport default BookTermSuccessModal;\n","import { PropsWithChildren, createContext, useState } from \"react\";\nimport BookTermSuccessModal from \"@/components/BookTermSuccessModal\";\n\nexport const ProfileConsultationsContext = createContext({\n  showBookTermSuccess: false,\n  setShowBookTermSuccess: (value: boolean) => {},\n});\n\nconst ProfileConsultationsProvider: React.FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const [showBookTermSuccess, setShowBookTermSuccess] = useState(false);\n\n  return (\n    <ProfileConsultationsContext.Provider\n      value={{\n        showBookTermSuccess,\n        setShowBookTermSuccess,\n      }}\n    >\n      {children}\n      {/* Success modal */}\n      <BookTermSuccessModal\n        visible={showBookTermSuccess}\n        onClose={() => setShowBookTermSuccess(false)}\n      />\n    </ProfileConsultationsContext.Provider>\n  );\n};\n\nexport default ProfileConsultationsProvider;\n","import { useTranslation } from \"react-i18next\";\nimport { isMobile } from \"react-device-detect\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport Button from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { formatDate } from \"@/utils/date\";\nimport { APP_CONFIG } from \"@/config/app\";\nimport ModalTitle from \"@/components/StyledTitle/ModalTitle\";\nimport InfoBox from \"@/components/InfoBox\";\nimport { Tutor } from \"@escolalms/components/lib/components/molecules/Tutor/Tutor\";\n\nconst API_URL =\n  window.REACT_APP_API_URL ||\n  (process && process.env && process.env.REACT_APP_PUBLIC_API_URL);\n\ninterface Props {\n  consultation: API.Consultation;\n  selectedDate: Date | null;\n  onClick: () => void;\n  loading: boolean;\n}\n\nconst SelectedTermContent = ({\n  consultation,\n  selectedDate,\n  onClick,\n  loading,\n}: Props) => {\n  const { t } = useTranslation();\n  const { author } = consultation;\n\n  return (\n    <>\n      <ModalTitle>\n        {t(\"ConsultationPage.SelectedTermOfConsultation\")}\n      </ModalTitle>\n      <InfoBox\n        title={t(\"ConsultationPage.ConsultationTerm\")}\n        content={formatDate(selectedDate, APP_CONFIG.defaultDateTimeFormat)}\n      />\n      <InfoBox\n        title={t(\"ConsultationPage.Expert\")}\n        content={\n          <Tutor\n            mobile={isMobile}\n            avatar={{\n              alt: `${author.first_name} ${author.last_name}`,\n              src: `${API_URL}/api/images/img?path=${author.path_avatar}` || \"\",\n            }}\n            title={<></>}\n            fullName={`${author.first_name} ${author.last_name}`}\n            rating={{\n              ratingValue: 5,\n            }}\n            description={author.bio}\n          />\n        }\n      />\n      <Button\n        mode=\"secondary\"\n        onClick={onClick}\n        block\n        disabled={!selectedDate}\n        loading={loading}\n      >\n        {t(\"ConsultationPage.Book\")}\n      </Button>\n    </>\n  );\n};\n\nexport default SelectedTermContent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\n\ntype BaseTextProps = React.ComponentProps<typeof Title>;\n\nconst ModalTitle = styled(Title)<BaseTextProps>`\n  font-size: 24px;\n  margin-bottom: 24px;\n  border-bottom: 1px solid\n    ${({ theme }) => (theme.mode === \"dark\" ? theme.gray1 : theme.gray3)};\n  padding-bottom: 12px;\n`;\n\nexport default ModalTitle;\n","import { useMemo } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { formatDate } from \"@/utils/date\";\nimport { APP_CONFIG } from \"@/config/app\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { IconCalendar } from \"../../icons\";\n\nconst DateInfoStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .date-container {\n    display: flex;\n    flex-direction: row;\n    border: 1px solid;\n    border-radius: 2px;\n    align-items: center;\n\n    .icon-container {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n    }\n\n    .date {\n      padding: 0.5rem;\n      margin: 0 auto;\n    }\n  }\n\n  .info {\n    padding: 0.5rem;\n    border-left: 1px solid;\n    border-right: 1px solid;\n    border-bottom: 1px solid;\n    font-family: ${({ theme }) => theme.font};\n    font-size: 12px;\n  }\n`;\n\nexport enum DateInfoTypes {\n  \"ACCEPTED\",\n  \"WAITING\",\n  \"ENDED\",\n  \"DEFAULT\",\n}\n\ninterface DateInfoProps {\n  type: DateInfoTypes;\n  date?: Date | string | number;\n  info?: string | React.ReactElement;\n}\n\nconst DateInfo = ({ type, date, info }: DateInfoProps) => {\n  const theme = useTheme();\n  const color = useMemo(() => {\n    switch (type) {\n      case DateInfoTypes.ACCEPTED:\n        return \"#198754\";\n      case DateInfoTypes.WAITING:\n        return \"#FFC300\";\n      case DateInfoTypes.ENDED:\n        return \"#D22B2B\";\n      default:\n        return theme.primaryColor;\n    }\n  }, [theme.primaryColor, type]);\n\n  return (\n    <DateInfoStyles>\n      <div\n        className=\"date-container\"\n        style={{\n          borderColor: color,\n        }}\n      >\n        <div\n          className=\"icon-container\"\n          style={{\n            backgroundColor: color,\n          }}\n        >\n          <IconCalendar color=\"#ffffff\" />\n        </div>\n        <Text className=\"date\">\n          {date\n            ? formatDate(new Date(date), APP_CONFIG.defaultDateTimeFormat)\n            : \"--\"}\n        </Text>\n      </div>\n      {info && (\n        <div\n          className=\"info\"\n          style={{\n            borderColor: color,\n          }}\n        >\n          {info}\n        </div>\n      )}\n    </DateInfoStyles>\n  );\n};\n\nexport default DateInfo;\n","import styled from \"styled-components\";\n\nexport const ConsultationMeetModalStyles = styled.div`\n  iframe {\n    width: 100% !important;\n    height: calc(100vh - 76px);\n    border: none;\n  }\n`;\n","import { useContext, useEffect, useState } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { Modal } from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport { JitsyData } from \"@escolalms/sdk/lib/types/api\";\nimport ContentLoader from \"@/components/ContentLoader\";\nimport { ConsultationMeetModalStyles } from \"./MeetModalStyles\";\n\ninterface Props {\n  onClose: () => void;\n  visible: boolean;\n  consultationTermId: number;\n}\n\nconst ConsultationMeetModal = ({\n  onClose,\n  visible,\n  consultationTermId,\n}: Props) => {\n  const [meetData, setMeetData] = useState<JitsyData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const { generateConsultationJitsy } = useContext(EscolaLMSContext);\n\n  useEffect(() => {\n    const getMeetUrl = async () => {\n      setLoading(true);\n      const res = await generateConsultationJitsy(consultationTermId);\n      if (res.success) {\n        setMeetData((res as { data: JitsyData }).data);\n      }\n      setLoading(false);\n    };\n\n    getMeetUrl();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Modal\n      onClose={onClose}\n      visible={visible}\n      animation=\"zoom\"\n      maskAnimation=\"fade\"\n      destroyOnClose={true}\n      width=\"100vw\"\n      height=\"100vh\"\n      bodyStyle={{\n        minHeight: \"93vh\",\n      }}\n    >\n      <ConsultationMeetModalStyles>\n        {loading && <ContentLoader />}\n        {!loading && meetData && (\n          <iframe title={meetData.data.roomName} src={meetData.url} />\n        )}\n      </ConsultationMeetModalStyles>\n    </Modal>\n  );\n};\n\nexport default ConsultationMeetModal;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport ConsultationMeetModal from \"@/components/ConsultationCard/MeetModal\";\n\ninterface Props {\n  consultationTermId: number;\n}\n\nconst ConsultationCardJoinButton = ({ consultationTermId }: Props) => {\n  const [showModal, setShowModal] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Button mode=\"secondary\" onClick={() => setShowModal(true)}>\n        {t(\"ConsultationPage.Join\")}\n      </Button>\n      <ConsultationMeetModal\n        visible={showModal}\n        onClose={() => setShowModal(false)}\n        consultationTermId={consultationTermId}\n      />\n    </>\n  );\n};\n\nexport default ConsultationCardJoinButton;\n","import { Text } from \"@escolalms/components\";\nimport styled from \"styled-components\";\n\nconst InfoBoxStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 12px;\n\n  .title {\n    margin: 0.2em 0;\n  }\n\n  .content {\n    margin: 0.2em 0;\n    font-weight: 700;\n    color: ${({ theme: { primaryColor } }) => primaryColor};\n  }\n`;\n\ninterface InfoBoxProps {\n  title: string | React.ReactElement;\n  content: string | React.ReactElement;\n}\n\nconst InfoBox = ({ title, content }: InfoBoxProps) => {\n  return (\n    <InfoBoxStyles>\n      {typeof title === \"string\" ? (\n        <Text className=\"title\">{title}</Text>\n      ) : (\n        title\n      )}\n      {typeof content === \"string\" ? (\n        <Text className=\"content\">{content}</Text>\n      ) : (\n        content\n      )}\n    </InfoBoxStyles>\n  );\n};\n\nexport default InfoBox;\n","import styled from \"styled-components\";\n\nexport const StyledDatePicker = styled.div`\n  .react-datepicker {\n    font-family: ${({ theme }) => theme.font};\n    color: ${({ theme }) => theme.textColor};\n    border-color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray1 : theme.gray3};\n    border-radius: ${({ theme }) => theme.buttonRadius || 2}px;\n    width: 100%;\n    margin-top: 0.5rem;\n  }\n\n  .react-datepicker__day--selected {\n    background-color: ${({ theme }) => theme.primaryColor};\n  }\n\n  .react-datepicker__day--selected:hover {\n    background-color: ${({ theme }) => theme.primaryColor};\n    opacity: 0.3;\n  }\n\n  .react-datepicker__month-container {\n    width: 100%;\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header {\n    font-size: 14px;\n  }\n\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    width: 4em;\n    line-height: 4em;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.primaryColor};\n    opacity: 0.3;\n    color: #ffffff;\n  }\n\n  .react-datepicker__header {\n    background-color: transparent;\n    border-color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray1 : theme.gray3};\n    border-top-right-radius: ${({ theme }) => theme.buttonRadius || 2}px;\n    border-top-left-radius: ${({ theme }) => theme.buttonRadius || 2}px;\n  }\n\n  .react-datepicker__input-time-container {\n    text-align: center;\n    margin: 15px 0;\n  }\n\n  .react-datepicker__input-time-container .react-datepicker-time__caption {\n    font-size: 14px;\n  }\n\n  .react-datepicker__input-time-container\n    .react-datepicker-time__input-container\n    .react-datepicker-time__input\n    input {\n    font-size: 14px;\n    padding: 1em;\n    border-radius: ${({ theme }) => theme.buttonRadius || 2}px;\n    border-color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray1 : theme.gray3};\n    border-width: 1px;\n    border-style: solid;\n  }\n\n  .react-datepicker__input-time-container\n    .react-datepicker-time__input-container\n    .react-datepicker-time__input\n    input:focus {\n    outline: none;\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\nimport ReactDatePicker, { registerLocale } from \"react-datepicker\";\nimport { StyledDatePicker } from \"./styles\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport en from \"date-fns/locale/en-GB\";\nimport pl from \"date-fns/locale/pl\";\nregisterLocale(\"pl\", pl);\nregisterLocale(\"en\", en);\n\ninterface Props {\n  selectedDate: Date | null;\n  onChange: (date: Date) => void;\n  includeDates?: Date[];\n  includeTimes?: Date[];\n  minDate?: Date | null;\n  showTimeInput?: boolean;\n  timeInputLabel?: string;\n}\n\nconst DatePicker = ({\n  selectedDate,\n  onChange,\n  includeDates,\n  includeTimes,\n  minDate,\n  showTimeInput,\n  timeInputLabel,\n}: Props) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <StyledDatePicker>\n      <ReactDatePicker\n        selected={selectedDate}\n        onChange={onChange}\n        includeDates={includeDates}\n        includeTimes={includeTimes}\n        inline\n        locale={i18n.language}\n        minDate={minDate}\n        showTimeInput={showTimeInput}\n        timeInputLabel={timeInputLabel}\n      />\n    </StyledDatePicker>\n  );\n};\n\nexport default DatePicker;\n","import styled from \"styled-components\";\n\nexport const StyledBookTermButtons = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.54rem;\n  margin: 0.5rem 0 2rem 0;\n\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  button {\n    animation: fadeIn 0.4s;\n  }\n`;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport DatePicker from \"@/components/DatePicker\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Button } from \"@escolalms/components\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport {\n  sortDates,\n  removePastDates,\n  createArrayWithDateAndTimes,\n  isTwoDatesEqual,\n  formatDate,\n} from \"@/utils/date\";\nimport { Tag } from \"@escolalms/components/lib/components/atoms/Tag/Tag\";\nimport SelectedTermContent from \"../SelectedTermContent\";\nimport { ProfileConsultationsContext } from \"@/components/Profile/ProfileConsultations/ProfileConsultationsProvider\";\nimport { StyledBookTermButtons } from \"../styles\";\n\ninterface Props {\n  consultation: API.Consultation & {\n    proposed_terms: string[];\n  };\n  onClose: () => void;\n}\n\nconst ProposedTermsContent = ({ consultation, onClose }: Props) => {\n  const [selectedDate, setSelectedDay] = useState<Date | null>(null);\n  const [selectedTime, setSelectedTime] = useState<Date | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [step, setStep] = useState(1);\n  const { setShowBookTermSuccess } = useContext(ProfileConsultationsContext);\n  const { t } = useTranslation();\n  const { bookConsultationTerm } = useContext(EscolaLMSContext);\n  const terms = sortDates(\n    removePastDates(\n      consultation?.proposed_terms?.map(\n        (dateString: string) => new Date(dateString)\n      ) || []\n    )\n  );\n  const sortedDates = createArrayWithDateAndTimes(terms);\n  const currentTimes = selectedDate\n    ? sortedDates.find((dateObj) => isTwoDatesEqual(dateObj.date, selectedDate))\n        ?.times || []\n    : [];\n  const inComing = consultation.in_coming;\n  const isApproved = consultation.executed_status === \"approved\";\n  const isAnyTerm = !!terms?.length;\n\n  useEffect(() => {\n    if (terms[0]) {\n      setSelectedDay(terms[0]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onChange = (date: Date) => {\n    setSelectedDay(date);\n    setSelectedTime(null);\n  };\n\n  const close = useCallback(() => {\n    setShowBookTermSuccess(true);\n    onClose();\n    setSelectedDay(null);\n    setSelectedTime(null);\n  }, [onClose, setShowBookTermSuccess]);\n\n  const onClick = useCallback(async () => {\n    if (consultation.consultation_term_id && selectedTime) {\n      setLoading(true);\n      const response = await bookConsultationTerm(\n        consultation.consultation_term_id,\n        selectedTime.toISOString()\n      );\n      if (response.success) {\n        close();\n      }\n      setLoading(false);\n    }\n  }, [\n    consultation.consultation_term_id,\n    selectedTime,\n    bookConsultationTerm,\n    close,\n  ]);\n\n  if (step === 2) {\n    return (\n      <SelectedTermContent\n        selectedDate={selectedDate}\n        consultation={consultation}\n        loading={loading}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <>\n      <DatePicker\n        onChange={onChange}\n        selectedDate={selectedDate}\n        includeDates={terms}\n        includeTimes={currentTimes}\n      />\n      <StyledBookTermButtons>\n        {currentTimes.map((date) => (\n          <Button\n            mode={\n              isTwoDatesEqual(date, selectedTime, \"HH:mm\")\n                ? \"secondary\"\n                : \"outline\"\n            }\n            onClick={() => setSelectedTime(date)}\n          >\n            {formatDate(date, \"HH:mm\")}\n          </Button>\n        ))}\n      </StyledBookTermButtons>\n      {!isAnyTerm && <Tag>{t(\"ConsultationPage.NoTermsAvailable\")}</Tag>}\n      {isAnyTerm && (\n        <Button\n          mode=\"secondary\"\n          onClick={() => setStep(2)}\n          block\n          disabled={!selectedDate || !selectedTime}\n          loading={loading}\n        >\n          {inComing && isApproved\n            ? t(\"ConsultationPage.ChangeTerm\")\n            : t(\"ConsultationPage.Book\")}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default ProposedTermsContent;\n","import { useCallback, useContext, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport DatePicker from \"@/components/DatePicker\";\nimport Button from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport ModalTitle from \"@/components/StyledTitle/ModalTitle\";\nimport SelectedTermContent from \"../SelectedTermContent\";\nimport { ProfileConsultationsContext } from \"@/components/Profile/ProfileConsultations/ProfileConsultationsProvider\";\n\ninterface Props {\n  consultation: API.Consultation & {\n    proposed_terms: string[];\n  };\n  onClose: () => void;\n}\n\nconst UserSelectDatePicker = ({ consultation, onClose }: Props) => {\n  const [selectedDate, setSelectedDay] = useState<Date | null>(null);\n  const { bookConsultationTerm } = useContext(EscolaLMSContext);\n  const [loading, setLoading] = useState(false);\n  const [step, setStep] = useState(1);\n  const { setShowBookTermSuccess } = useContext(ProfileConsultationsContext);\n  const { t } = useTranslation();\n  const inComing = consultation.in_coming;\n  const isApproved = consultation.executed_status === \"approved\";\n\n  const onChange = (date: Date) => {\n    setSelectedDay(date);\n  };\n\n  const close = useCallback(() => {\n    setShowBookTermSuccess(true);\n    onClose();\n    setSelectedDay(null);\n  }, [onClose, setShowBookTermSuccess]);\n\n  const onClick = useCallback(async () => {\n    if (consultation.consultation_term_id && selectedDate) {\n      setLoading(true);\n      const response = await bookConsultationTerm(\n        consultation.consultation_term_id,\n        selectedDate.toISOString()\n      );\n      if (response.success) {\n        close();\n      }\n      setLoading(false);\n    }\n  }, [\n    consultation.consultation_term_id,\n    selectedDate,\n    bookConsultationTerm,\n    close,\n  ]);\n\n  if (step === 2) {\n    return (\n      <SelectedTermContent\n        selectedDate={selectedDate}\n        consultation={consultation}\n        loading={loading}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <>\n      <ModalTitle>{t(\"ConsultationPage.SelectDateAndHour\")}</ModalTitle>\n      <DatePicker\n        onChange={onChange}\n        selectedDate={selectedDate}\n        minDate={new Date()}\n        showTimeInput\n        timeInputLabel={`${t(\"Time\")}: `}\n      />\n      <Button\n        mode=\"secondary\"\n        onClick={() => setStep(2)}\n        block\n        disabled={!selectedDate}\n        loading={loading}\n      >\n        {inComing && isApproved\n          ? t(\"ConsultationPage.ChangeTerm\")\n          : t(\"ConsultationPage.Choose\")}\n      </Button>\n    </>\n  );\n};\n\nexport default UserSelectDatePicker;\n","import Modal from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ProposedTermsContent from \"./ProposedTermsContent\";\nimport UserSelectDatePicker from \"./UserSelectDatePicker\";\n\ninterface Props {\n  onClose: () => void;\n  visible: boolean;\n  consultation: API.Consultation & {\n    proposed_terms: string[];\n  };\n}\n\nconst BookTermModal: React.FC<Props> = ({ onClose, visible, consultation }) => {\n  const isSingle = consultation.product?.type === \"single\";\n\n  return (\n    <Modal\n      onClose={onClose}\n      visible={visible}\n      animation=\"zoom\"\n      maskAnimation=\"fade\"\n      destroyOnClose={true}\n      width={468}\n    >\n      {isSingle ? (\n        <UserSelectDatePicker consultation={consultation} onClose={onClose} />\n      ) : (\n        <ProposedTermsContent consultation={consultation} onClose={onClose} />\n      )}\n    </Modal>\n  );\n};\n\nexport default BookTermModal;\n","import { useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\n\ninterface Props {\n  showBookTerm: (value: boolean) => void;\n}\n\nconst ConsultationCardBookButton = ({ showBookTerm }: Props) => {\n  const { t } = useTranslation();\n\n  const onClick = useCallback(() => {\n    showBookTerm(true);\n  }, [showBookTerm]);\n\n  return (\n    <Button mode=\"secondary\" onClick={onClick}>\n      {t(\"ConsultationPage.Book\")}\n    </Button>\n  );\n};\n\nexport default ConsultationCardBookButton;\n","import { useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\n\ninterface Props {\n  showBookTerm: (value: boolean) => void;\n}\n\nconst ConsultationCardChangeButton = ({ showBookTerm }: Props) => {\n  const { t } = useTranslation();\n\n  const onClick = useCallback(() => {\n    showBookTerm(true);\n  }, [showBookTerm]);\n\n  return (\n    <Button mode=\"secondary\" onClick={onClick}>\n      {t(\"ConsultationPage.ChangeTerm\")}\n    </Button>\n  );\n};\n\nexport default ConsultationCardChangeButton;\n","import { useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ConsultationCardJoinButton from \"./JoinButton\";\nimport ConsultationCardBookButton from \"./BookButton\";\nimport ConsultationCardChangeButton from \"./ChangeButton\";\n\ninterface Props {\n  consultation: API.Consultation;\n  showBookTerm: (value: boolean) => void;\n}\n\nconst ConsultationCardButtons = ({ consultation, showBookTerm }: Props) => {\n  const history = useHistory();\n  const { t } = useTranslation();\n  const isStarted = consultation.is_started;\n  const inComing = consultation.in_coming;\n  const isReported = consultation.executed_status === \"reported\";\n  const isNotReported = consultation.executed_status === \"not_reported\";\n\n  if (isReported) {\n    return null;\n  }\n  if (consultation.product?.owned && isNotReported) {\n    return (\n      <ConsultationCardBookButton\n        showBookTerm={(value) => showBookTerm(value)}\n      />\n    );\n  }\n  if (isStarted && consultation.consultation_term_id) {\n    return (\n      <ConsultationCardJoinButton\n        consultationTermId={consultation.consultation_term_id}\n      />\n    );\n  }\n  if (inComing) {\n    return (\n      <ConsultationCardChangeButton\n        showBookTerm={(value) => showBookTerm(value)}\n      />\n    );\n  }\n  return (\n    <Button\n      mode=\"secondary\"\n      onClick={() => history.push(`/consultations/${consultation.id}`)}\n    >\n      {t(\"ConsultationPage.Show\")}\n    </Button>\n  );\n};\n\nexport default ConsultationCardButtons;\n","import styled from \"styled-components\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { addTimeToDate, extractTimeUnits } from \"@/utils/date\";\nimport DateInfo, { DateInfoTypes } from \"@/components/DateInfo\";\n\nconst ConsultationCardContentStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\ninterface Props {\n  consultation: API.Consultation;\n}\n\nconst ConsultationCardContent = ({ consultation }: Props) => {\n  const isEnded = consultation.is_ended;\n  const isReported = consultation.executed_status === \"reported\";\n  const isApproved = consultation.executed_status === \"approved\";\n  const isNotReported = consultation.executed_status === \"not_reported\";\n\n  return (\n    <ConsultationCardContentStyles>\n      {isEnded && consultation.executed_at && (\n        <DateInfo\n          type={DateInfoTypes.ENDED}\n          date={addTimeToDate(\n            consultation.executed_at,\n            extractTimeUnits(`${consultation.duration}`)\n          )}\n        />\n      )}\n      {isReported && !isEnded && (\n        <DateInfo\n          type={DateInfoTypes.WAITING}\n          date={consultation.executed_at}\n        />\n      )}\n      {isApproved && !isEnded && (\n        <DateInfo\n          type={DateInfoTypes.ACCEPTED}\n          date={consultation.executed_at}\n        />\n      )}\n      {isNotReported && <DateInfo type={DateInfoTypes.DEFAULT} />}\n    </ConsultationCardContentStyles>\n  );\n};\n\nexport default ConsultationCardContent;\n","import { Link } from \"react-router-dom\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ResponsiveImage from \"@escolalms/components/lib/components/organisms/ResponsiveImage/ResponsiveImage\";\nimport CourseImgPlaceholder from \"../../CourseImgPlaceholder\";\n\ninterface Props {\n  consultation: API.Consultation;\n}\n\nconst ConsultationCardImage = ({ consultation }: Props) => {\n  return (\n    <Link to={`/consultations/${consultation.id}`}>\n      {consultation.image_path ? (\n        <ResponsiveImage\n          path={consultation.image_path}\n          alt={consultation.name}\n          srcSizes={[300, 600, 900]}\n        />\n      ) : (\n        <CourseImgPlaceholder />\n      )}\n    </Link>\n  );\n};\n\nexport default ConsultationCardImage;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { CourseCard } from \"@escolalms/components/lib/components/molecules/CourseCard/CourseCard\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport BookTermModal from \"@/components/BookTermModal\";\nimport ConsultationCardButtons from \"./Buttons\";\nimport ConsultationCardContent from \"./Content\";\nimport ConsultationCardImage from \"./Image\";\n\nconst ConsultationCardStyles = styled.div`\n  .course-card-buttons-group {\n    margin: 0;\n    width: 100%;\n\n    button {\n      width: 100%;\n      margin: 0;\n    }\n  }\n`;\n\ninterface ConsultationCardProps {\n  consultation: API.Consultation;\n}\n\nconst ConsultationCard: React.FC<ConsultationCardProps> = (props) => {\n  const { consultation } = props;\n  const [showBookTerm, setShowBookTerm] = useState(false);\n\n  return (\n    <ConsultationCardStyles>\n      <CourseCard\n        id={consultation.id}\n        image={<ConsultationCardImage consultation={consultation} />}\n        title={`${consultation.name}`}\n        footer={<ConsultationCardContent consultation={consultation} />}\n        actions={\n          <ConsultationCardButtons\n            consultation={consultation}\n            showBookTerm={(value) => setShowBookTerm(value)}\n          />\n        }\n      />\n      {/* Book term modal */}\n      <BookTermModal\n        visible={showBookTerm}\n        onClose={() => setShowBookTerm(false)}\n        consultation={consultation as any}\n      />\n    </ConsultationCardStyles>\n  );\n};\n\nexport default ConsultationCard;\n","import { useMemo, useContext } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\n\nexport const useRoles = () => {\n  const { user } = useContext(EscolaLMSContext);\n\n  const isTutor = useMemo(() => !!user.value?.roles?.includes(\"tutor\"), [user]);\n  const isStudent = useMemo(\n    () => !!user.value?.roles?.includes(\"student\"),\n    [user]\n  );\n\n  return {\n    isTutor,\n    isStudent,\n  };\n};\n"],"sourceRoot":""}