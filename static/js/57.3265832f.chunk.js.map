{"version":3,"sources":["pages/verify-email/index.tsx"],"names":["VerifyEmail","_search$split$","_search$split$2","push","useHistory","search","useLocation","id","split","hash","t","useTranslation","theme","useTheme","emailVerify","useContext","EscolaLMSContext","state","setState","useState","loading","isVerified","message","verifyEmail","useCallback","async","prevState","request","String","error","console","useEffect","routeRoutes","home","_jsx","Layout","children","className","_jsxs","style","display","flexDirection","alignItems","justifyContent","Spin","color","primaryColor","Text","size"],"mappings":"yHAAA,mFAuFeA,UA9EeA,KAAO,IAADC,EAAAC,EAClC,MAAM,KAAEC,GAASC,eACX,OAAEC,GAAWC,cACbC,EAAKF,IAAgB,OAANA,QAAM,IAANA,GAAqB,QAAfJ,EAANI,EAAQG,MAAM,KAAK,UAAE,IAAAP,OAAf,EAANA,EAAuBO,MAAM,KAAK,IACjDC,EAAOJ,IAAgB,OAANA,QAAM,IAANA,GAAqB,QAAfH,EAANG,EAAQG,MAAM,KAAK,UAAE,IAAAN,OAAf,EAANA,EAAuBM,MAAM,KAAK,KACnD,EAAEE,GAAMC,cACRC,EAAQC,sBACR,YAAEC,GAAgBC,qBAAWC,qBAE5BC,EAAOC,GAAYC,mBAAS,CACjCC,SAAS,EACTH,MAAO,OACPI,YAAY,EACZC,QAAS,KAGLC,EAAcC,uBAAYC,UAC9BP,GAAUQ,IAAS,IACdA,EACHN,SAAS,MAGX,IACE,MAAMO,EACJpB,GAAME,SAAeK,EAAYc,OAAOrB,GAAKqB,OAAOnB,IAElDkB,GACFT,GAAUQ,IAAS,IACdA,EACHT,MAAO,UACPK,QAASK,EAAQL,QACjBD,YAAY,KAGlB,CAAE,MAAOQ,GACPC,QAAQD,MAAMA,EAChB,CAAC,QACCX,GAAUQ,IAAS,IACdA,EACHN,SAAS,KAEb,IACC,CAACb,EAAIE,EAAMK,IASd,OAPAiB,qBAAU,KACHtB,GACHN,EAAK6B,IAAYC,MAEnB1B,GAAME,GAAQc,GAAa,GAC1B,CAAChB,EAAIE,EAAMc,EAAapB,IAGzB+B,cAACC,IAAM,CAAAC,SACLF,cAAA,OAAKG,UAAU,8BAA6BD,SAC1CF,cAAA,OAAKG,UAAU,YAAWD,SACxBF,cAAA,OAAKG,UAAU,OAAMD,SACnBF,cAAA,OAAKG,UAAU,sBAAqBD,SAClCE,eAAA,OACEC,MAAO,CACLC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,eAAgB,UAChBP,SAAA,CAEDnB,EAAMG,SAAWc,cAACU,OAAI,CAACC,MAAOjC,EAAMkC,eAAkB,IACtD7B,EAAMI,YACLa,cAACa,OAAI,CAACC,KAAK,KAAIZ,SAAE1B,EAAE,kCAOxB,C","file":"static/js/57.3265832f.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Layout from \"@/components/_App/Layout\";\nimport { useTranslation } from \"react-i18next\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { Spin, Text } from \"@escolalms/components\";\nimport { useTheme } from \"styled-components\";\nimport routeRoutes from \"@/components/Routes/routes\";\n\nconst VerifyEmail: React.FC = () => {\n  const { push } = useHistory();\n  const { search } = useLocation();\n  const id = search && search?.split(\"&\")[0]?.split(\"=\")[1];\n  const hash = search && search?.split(\"&\")[1]?.split(\"=\")[1];\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const { emailVerify } = useContext(EscolaLMSContext);\n\n  const [state, setState] = useState({\n    loading: false,\n    state: \"init\",\n    isVerified: false,\n    message: \"\",\n  });\n\n  const verifyEmail = useCallback(async () => {\n    setState((prevState) => ({\n      ...prevState,\n      loading: true,\n    }));\n\n    try {\n      const request =\n        id && hash && (await emailVerify(String(id), String(hash)));\n\n      if (request) {\n        setState((prevState) => ({\n          ...prevState,\n          state: \"success\",\n          message: request.message,\n          isVerified: true,\n        }));\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setState((prevState) => ({\n        ...prevState,\n        loading: false,\n      }));\n    }\n  }, [id, hash, emailVerify]);\n\n  useEffect(() => {\n    if (!hash) {\n      push(routeRoutes.home);\n    }\n    id && hash && verifyEmail();\n  }, [id, hash, verifyEmail, push]);\n\n  return (\n    <Layout>\n      <div className=\"profile-authentication-area\">\n        <div className=\"container\">\n          <div className=\"row \">\n            <div className=\"col-lg-12 col-md-12\">\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                {state.loading && <Spin color={theme.primaryColor} />}{\" \"}\n                {state.isVerified && (\n                  <Text size=\"32\">{t(\"EmailWasVerified\")}</Text>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default VerifyEmail;\n"],"sourceRoot":""}