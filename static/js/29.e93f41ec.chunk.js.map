{"version":3,"sources":["pages/register/index.tsx"],"names":["StyledRegisterPage","styled","div","isMobile","StyledContent","theme","primaryColor","RegisterPage","search","useLocation","useContext","EscolaLMSContext","user","socialAuthorize","useState","view","setView","email","history","useHistory","token","split","t","useTranslation","fieldLabels","size","to","setTimeout","push","loading","value","EmailActivation","className","level","type","onClick","metaTitle","mobile","onLoginLink","onSuccess"],"mappings":"sPAYMA,EAAqBC,UAAOC,IAAV,sLAOFC,WAAW,OAAS,SAIpCC,EAAgBH,UAAOC,IAAV,80BAgBF,qBAAGG,MAAkBC,gBA8HvBC,UAhGM,WACnB,IAAQC,EAAWC,cAAXD,OACR,EAAkCE,qBAAWC,oBAArCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,gBACd,EAAwBC,mBAAiB,IAAzC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgBF,mBAAS,IAAlBG,EAAP,oBACMC,EAAUC,cACVC,EAAQZ,EAAOa,MAAM,WAAW,GAC9BC,EAAMC,cAAND,EACFE,EAAc,CAClB,kCACE,eAAC,OAAD,CAAMC,KAAK,KAAX,UACGH,EAAE,kBAAmB,IACtB,cAAC,IAAD,CAAMI,GAAG,kBAAT,SAA4BJ,EAAE,sBAGlC,oCACE,eAAC,OAAD,CAAMG,KAAK,KAAX,UACGH,EAAE,kBAAmB,IACtB,cAAC,IAAD,CAAMI,GAAG,kBAAT,SAA4BJ,EAAE,wBAIhCF,IACFP,EAAgBO,GAChBO,YAAW,WACTT,EAAQU,KAAK,OACZ,MAGAhB,EAAKiB,SAAYT,IAASR,EAAKkB,OAClCZ,EAAQU,KAAK,KAGf,IAAMG,EAAkB,WACtB,OACE,cAAC3B,EAAD,UACE,qBAAK4B,UAAU,YAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,cAAC,QAAD,CAAOA,UAAU,cAAcC,MAAO,EAAtC,4FAGA,eAAC,OAAD,CAAMD,UAAU,kBAAkBP,KAAK,KAAvC,+DACgC,uBADhC,IACuC,+BAAOR,IAD9C,0CAEsC,uBAFtC,oEAKA,eAAC,OAAD,CAAMe,UAAU,kBAAkBP,KAAK,KAAvC,UACE,mEADF,IACuC,uBACrC,+BACE,0DACA,4FACA,0JAMJ,cAAC,OAAD,CAAMO,UAAU,YAAYP,KAAK,KAAjC,SACE,wBAAQS,KAAK,SAASC,QAAS,kBAAMnB,EAAQ,aAA7C,gDAYhB,OACE,cAAC,IAAD,CAAQoB,UAAWd,EAAE,oBAArB,SACY,YAATP,EACC,cAACf,EAAD,UACE,qBAAKgC,UAAU,YAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,eAAD,CACER,YAAaA,EACba,OAAQlC,WACRmC,YAAa,kBAAMpB,EAAQU,KAAK,WAChCW,UAAW,kBAAMvB,EAAQ,sBAOnC,cAACe,EAAD","file":"static/js/29.e93f41ec.chunk.js","sourcesContent":["import { useContext, useState } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Layout from \"@/components/_App/Layout\";\nimport { isMobile } from \"react-device-detect\";\nimport { useLocation } from \"react-router-dom\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { RegisterForm } from \"@escolalms/components\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\nconst StyledRegisterPage = styled.div`\n  min-height: calc(100vh - 500px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .container {\n    padding-bottom: ${isMobile ? \"50px\" : \"100px\"};\n  }\n`;\n\nconst StyledContent = styled.div`\n  .content-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-direction: column;\n\n    .email-title {\n      text-align: center;\n    }\n\n    .email-main-text {\n      text-align: center;\n      margin: 25px 0 85px;\n      font-weight: 700;\n      span {\n        color: ${({ theme }) => theme.primaryColor};\n      }\n    }\n\n    .email-help-text {\n      margin: 0 auto 20px 0;\n      ul {\n        padding-left: 15px;\n        margin-left: 0;\n        li {\n          font-size: 12px;\n        }\n      }\n    }\n\n    .back-text {\n      margin: 0 auto 0 0;\n      button {\n        appearance: none;\n        outline: none;\n        border: none;\n        background: transparent;\n        text-decoration: underline;\n        font-size: 16px;\n        cursor: pointer;\n      }\n    }\n  }\n`;\n\nconst RegisterPage = () => {\n  const { search } = useLocation();\n  const { user, socialAuthorize } = useContext(EscolaLMSContext);\n  const [view, setView] = useState<string>(\"\");\n  const [email] = useState(\"\");\n  const history = useHistory();\n  const token = search.split(\"?token=\")[1];\n  const { t } = useTranslation();\n  const fieldLabels = {\n    \"AdditionalFields.Privacy Policy\": (\n      <Text size=\"14\">\n        {t(\"AcceptCheckbox\")}{\" \"}\n        <Link to=\"/privacy-policy\">{t(\"PrivacyPolicy\")}</Link>\n      </Text>\n    ),\n    \"AdditionalFields.Terms of Service\": (\n      <Text size=\"14\">\n        {t(\"AcceptCheckbox\")}{\" \"}\n        <Link to=\"/privacy-policy\">{t(\"TermsOfService\")}</Link>\n      </Text>\n    ),\n  };\n  if (token) {\n    socialAuthorize(token);\n    setTimeout(() => {\n      history.push(\"/\");\n    }, 1000);\n  }\n\n  if (!user.loading && !token && user.value) {\n    history.push(\"/\");\n  }\n\n  const EmailActivation = () => {\n    return (\n      <StyledContent>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-7\">\n              <div className=\"content-container\">\n                <Title className=\"email-title\" level={3}>\n                  Aby dokończyć proces rejestracji sprawdź swoją pocztę\n                </Title>\n                <Text className=\"email-main-text\" size=\"16\">\n                  Wysłaliśmy wiadomość na adres <br /> <span>{email}</span> z\n                  linkiem do aktywacji Twojego konta. <br /> Przejdź do poczty i\n                  potwierdź swój adres e-mail.\n                </Text>\n                <Text className=\"email-help-text\" size=\"14\">\n                  <strong>Nie dostałeś maila?</strong> <br />\n                  <ul>\n                    <li>Sprawdź folder SPAM</li>\n                    <li>Sprawdź czy poprawnie wpisałeś adres e-mail</li>\n                    <li>\n                      Nie możemy dostarczyć wiadomości na Twój adres (zazwyczaj\n                      przez firewalla lub filtry na poczcie)\n                    </li>\n                  </ul>\n                </Text>\n                <Text className=\"back-text\" size=\"14\">\n                  <button type=\"button\" onClick={() => setView(\"register\")}>\n                    Wpisz adres ponownie\n                  </button>\n                </Text>\n              </div>\n            </div>\n          </div>\n        </div>\n      </StyledContent>\n    );\n  };\n\n  return (\n    <Layout metaTitle={t(\"LoginAndRegister\")}>\n      {view !== \"success\" ? (\n        <StyledRegisterPage>\n          <div className=\"container\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-lg-6 col-md-12\">\n                <RegisterForm\n                  fieldLabels={fieldLabels}\n                  mobile={isMobile}\n                  onLoginLink={() => history.push(\"/login\")}\n                  onSuccess={() => setView(\"success\")}\n                />\n              </div>\n            </div>\n          </div>\n        </StyledRegisterPage>\n      ) : (\n        <EmailActivation />\n      )}\n    </Layout>\n  );\n};\n\nexport default RegisterPage;\n"],"sourceRoot":""}