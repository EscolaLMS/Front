{"version":3,"sources":["pages/tutors/index.tsx","components/Breadcrumbs/index.tsx"],"names":["StyledTitleWrapper","styled","div","TutorsPage","useContext","EscolaLMSContext","tutors","fetchTutors","t","useTranslation","theme","useTheme","useEffect","className","items","to","size","level","loading","style","display","justifyContent","width","minHeight","flexDirection","alignItems","color","primaryColor","list","map","tutor","id","Number","title","name","image","path_avatar","path","srcSizes","src","alt","subtitle","first_name","last_name","StyledBreadcrumbs","mode","gray5","gray2","Breadcrumbs"],"mappings":"iQAeMA,EAAqBC,UAAOC,IAAV,oDAsFTC,UAlFI,WACjB,MAAgCC,qBAAWC,oBAAnCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YAERC,EAAMC,cAAND,EACFE,EAAQC,qBAOd,OALAC,qBAAU,WACRL,MAEC,IAGD,cAAC,IAAD,UACE,qBAAKM,UAAU,eAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CACEC,MAAO,CACL,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAcP,EAAU,UACxB,cAAC,OAAD,CAAMQ,KAAK,KAAX,SAAiBR,EAAE,eAGvB,cAACR,EAAD,UACE,eAAC,QAAD,CAAOiB,MAAO,EAAd,cAAmBT,EAAE,eAGvB,sBAAKK,UAAU,MAAf,UACGP,EAAOY,SACN,qBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,MAAO,OACPC,UAAW,QACXC,cAAe,SACfC,WAAY,UAEdZ,UAAU,iBATZ,SAWE,cAAC,OAAD,CAAMa,MAAOhB,EAAMiB,kBAGrBrB,EAAOY,UACNZ,EAAOsB,MAAQ,IAAIC,KAAI,SAACC,GAAD,OACtB,qBAAoBjB,UAAU,6BAA9B,SACE,cAAC,aAAD,CACEkB,GAAIC,OAAOF,EAAMC,IACjBE,MAAOH,EAAMI,KACbC,MACE,cAAC,IAAD,CAAMpB,GAAE,kBAAae,EAAMC,IAA3B,SACGD,EAAMM,YACL,cAAC,IAAD,CACEC,KAAMP,EAAMM,YACZE,SAAU,CAAC,IAAK,OAGlB,qBACEzB,UAAU,qBACV0B,IAAG,yBACHC,IAAI,mBAKZC,SACE,cAAC,IAAD,CAAM1B,GAAE,kBAAae,EAAMC,IAA3B,SACE,cAAC,OAAD,CAAMf,KAAK,KAAX,SACE,mCACGc,EAAMY,WADT,IACsBZ,EAAMa,oBAxB5Bb,EAAMC,mB,6ECtD1Ba,EAAoB3C,UAAOC,IAAV,uHAIV,gBAAGQ,EAAH,EAAGA,MAAH,MACQ,SAAfA,EAAMmC,KAAkBnC,EAAMoC,MAAQpC,EAAMqC,SAYnCC,IARsB,SAAC,GAAe,IAAblC,EAAY,EAAZA,MACtC,OACE,cAAC8B,EAAD,UACE,cAAC,cAAD,CAAa9B,MAAOA","file":"static/js/25.8eb0c923.chunk.js","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport Layout from \"../../components/_App/Layout\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { useTranslation } from \"react-i18next\";\n\nimport styled, { useTheme } from \"styled-components\";\nimport { Spin } from \"@escolalms/components/lib/components/atoms/Spin/Spin\";\nimport { CourseCard } from \"@escolalms/components/lib/components/molecules/CourseCard/CourseCard\";\nimport Image from \"@escolalms/sdk/lib/react/components/Image\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\n\nconst StyledTitleWrapper = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst TutorsPage = () => {\n  const { tutors, fetchTutors } = useContext(EscolaLMSContext);\n\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  useEffect(() => {\n    fetchTutors();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"advisor-area\">\n        <div className=\"container\">\n          <Breadcrumbs\n            items={[\n              <Link to=\"/\">{t<string>(\"Home\")}</Link>,\n              <Text size=\"12\">{t(\"Tutors\")}</Text>,\n            ]}\n          />\n          <StyledTitleWrapper>\n            <Title level={1}> {t(\"Tutors\")}</Title>\n          </StyledTitleWrapper>\n\n          <div className=\"row\">\n            {tutors.loading && (\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  width: \"100%\",\n                  minHeight: \"500px\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                }}\n                className=\"loader-wrapper\"\n              >\n                <Spin color={theme.primaryColor} />\n              </div>\n            )}\n            {!tutors.loading &&\n              (tutors.list || []).map((tutor: API.UserItem) => (\n                <div key={tutor.id} className=\"col-lg-4 col-sm-6 col-md-6\">\n                  <CourseCard\n                    id={Number(tutor.id)}\n                    title={tutor.name}\n                    image={\n                      <Link to={`/tutors/${tutor.id}`}>\n                        {tutor.path_avatar ? (\n                          <Image\n                            path={tutor.path_avatar}\n                            srcSizes={[380, 380 * 2]}\n                          />\n                        ) : (\n                          <img\n                            className=\"tutor-card__avatar\"\n                            src={`/images/tutorblind.png`}\n                            alt=\"tutor_avatar\"\n                          />\n                        )}\n                      </Link>\n                    }\n                    subtitle={\n                      <Link to={`/tutors/${tutor.id}`}>\n                        <Text size=\"16\">\n                          <strong>\n                            {tutor.first_name} {tutor.last_name}\n                          </strong>\n                        </Text>\n                      </Link>\n                    }\n                  />\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default TutorsPage;\n","import React from \"react\";\nimport { BreadCrumbs } from \"@escolalms/components/lib/components/atoms/BreadCrumbs/BreadCrumbs\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  items: React.ReactNode[];\n};\n\nconst StyledBreadcrumbs = styled.div`\n  margin-bottom: 15px;\n  a {\n    text-decoration: none;\n    color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray5 : theme.gray2}!important;\n  }\n`;\n\nconst Breadcrumbs: React.FC<Props> = ({ items }) => {\n  return (\n    <StyledBreadcrumbs>\n      <BreadCrumbs items={items} />\n    </StyledBreadcrumbs>\n  );\n};\n\nexport default Breadcrumbs;\n"],"sourceRoot":""}