{"version":3,"sources":["config/app.ts","utils/date.ts","components/CourseImgPlaceholder/index.tsx","components/ContentLoader/index.tsx","images/image.svg","components/DateInfo/index.tsx","components/DatePicker/styles.tsx","components/DatePicker/index.tsx","components/BookTermModal/styles.tsx","components/BookTermModal/ProposedTermsContent/index.tsx","components/BookTermModal/UserSelectDatePicker/index.tsx","components/BookTermModal/index.tsx","components/ConsultationCard/Buttons/BookButton/index.tsx","components/ConsultationCard/Buttons/ChangeButton/index.tsx","components/ConsultationCard/Buttons/index.tsx","components/ConsultationCard/Content/index.tsx","components/ConsultationCard/Image/index.tsx","components/ConsultationCard/index.tsx","components/BookTermModal/SuccessContent/index.tsx","components/BookTermSuccessModal/index.tsx","components/Profile/ProfileConsultations/ProfileConsultationsProvider.tsx","components/BookTermModal/SelectedTermContent/index.tsx","components/StyledTitle/ModalTitle/index.tsx","components/ConsultationCard/MeetModal/MeetModalStyles.tsx","components/ConsultationCard/MeetModal/index.tsx","components/ConsultationCard/Buttons/JoinButton/index.tsx","components/InfoBox/index.tsx"],"names":["APP_CONFIG","defaultDateFormat","defaultDateTimeFormat","tutorPlaceholderPath","formatDate","date","dateFormat","arguments","length","undefined","format","Date","isTwoDatesEqual","firstDate","secondDate","createArrayWithDateAndTimes","terms","newTerms","forEach","term","existingTerm","find","t","times","push","removePastDates","dates","filter","isAfter","sortDates","sort","a","b","getTime","extractTimeUnits","input","matches","Array","from","matchAll","extractedUnits","foundMatch","match","value","parseInt","unit","addTimeToDate","time","add","years","year","months","month","weeks","week","days","day","hours","hour","minutes","minute","seconds","second","StyledPlaceholder","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","mode","gray4","gray2","CourseImgPlaceholder","_jsx","children","src","Placeholder","alt","SpinnerWrapper","ContentLoader","width","height","useTheme","style","Spin","color","primaryColor","DateInfoStyles","font","DateInfoTypes","DateInfo","_ref2","type","info","useMemo","ACCEPTED","WAITING","ENDED","_jsxs","className","borderColor","backgroundColor","IconCalendar","Text","StyledDatePicker","textColor","_ref3","gray1","gray3","_ref4","buttonRadius","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","registerLocale","pl","en","DatePicker","selectedDate","onChange","includeDates","includeTimes","minDate","showTimeInput","timeInputLabel","i18n","useTranslation","ReactDatePicker","selected","inline","locale","language","StyledBookTermButtons","ProposedTermsContent","_consultation$propose","_sortedDates$find","consultation","onClose","_useState","useState","_useState2","_slicedToArray","setSelectedDay","_useState3","_useState4","selectedTime","setSelectedTime","_useState5","_useState6","loading","setLoading","_useState7","_useState8","step","setStep","setShowBookTermSuccess","useContext","ProfileConsultationsContext","bookConsultationTerm","EscolaLMSContext","proposed_terms","map","dateString","sortedDates","currentTimes","dateObj","inComing","in_coming","isApproved","executed_status","isAnyTerm","useEffect","close","useCallback","onClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","consultation_term_id","toISOString","sent","success","stop","SelectedTermContent","_Fragment","Button","Tag","block","disabled","UserSelectDatePicker","ModalTitle","concat","BookTermModal","_consultation$product","visible","isSingle","product","Modal","animation","maskAnimation","destroyOnClose","ConsultationCardBookButton","showBookTerm","ConsultationCardChangeButton","ConsultationCardButtons","history","useHistory","isStarted","is_started","isReported","isNotReported","owned","ConsultationCardJoinButton","consultationTermId","id","ConsultationCardContentStyles","ConsultationCardContent","isEnded","is_ended","executed_at","duration","DEFAULT","ConsultationCardImage","Link","to","image_path","ResponsiveImage","path","name","srcSizes","ConsultationCardStyles","ConsultationCard","props","setShowBookTerm","CourseCard","image","title","footer","actions","SuccessContentStyles","SuccessContent","IconSuccess","BookTermSuccessModal","createContext","showBookTermSuccess","ProfileConsultationsProvider","Provider","API_URL","window","REACT_APP_API_URL","process","author","InfoBox","content","Tutor","mobile","isMobile","avatar","first_name","last_name","path_avatar","fullName","rating","ratingValue","description","bio","Title","ConsultationMeetModalStyles","ConsultationMeetModal","meetData","setMeetData","generateConsultationJitsy","getMeetUrl","res","data","apply","bodyStyle","minHeight","roomName","url","showModal","setShowModal","InfoBoxStyles"],"mappings":"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","file":"static/js/1.f70af9af.chunk.js","sourcesContent":["export const APP_CONFIG = {\n  defaultDateFormat: \"dd/MM/yyyy\",\n  defaultDateTimeFormat: \"dd/MM/yyyy, HH:mm\",\n  tutorPlaceholderPath: \"/images/tutorblind.png\",\n};\n","import { add, format, isAfter } from \"date-fns\";\nimport { APP_CONFIG } from \"@/config/app\";\n\nexport const formatDate = (\n  date: string | number | Date | null | undefined,\n  dateFormat: string = APP_CONFIG.defaultDateFormat\n) => {\n  if (!date) return \"\";\n  return format(new Date(date), dateFormat);\n};\n\nexport const isTwoDatesEqual = (\n  firstDate: Date | string | number | null | undefined,\n  secondDate: Date | string | number | null | undefined,\n  format?: string\n) => {\n  if (!firstDate || !secondDate) return false;\n  return formatDate(firstDate, format) === formatDate(secondDate, format);\n};\n\nexport const createArrayWithDateAndTimes = (terms: string[] | Date[]) => {\n  const newTerms: {\n    date: string;\n    times: Date[];\n  }[] = [];\n\n  terms.forEach((term) => {\n    const date = format(new Date(term), \"MM/dd/yyyy\");\n    const existingTerm = newTerms.find(\n      (t) => format(new Date(t.date), \"MM/dd/yyyy\") === date\n    );\n\n    if (existingTerm) {\n      existingTerm.times.push(new Date(term));\n    } else {\n      newTerms.push({\n        date: date,\n        times: [new Date(term)],\n      });\n    }\n  });\n\n  return newTerms;\n};\n\nexport const removePastDates = (dates: Date[]) =>\n  dates.filter((date) => isAfter(date, new Date()));\n\nexport const sortDates = (dates: Date[]): Date[] =>\n  dates.sort((a, b) => a.getTime() - b.getTime());\n\nexport const extractTimeUnits = (input: string): Record<string, number> => {\n  const timeRegex = /(\\d+)\\s+(day|hour|minute|second|week|year)s?/g;\n  const matches = Array.from(input.matchAll(timeRegex));\n\n  const extractedUnits: Record<string, number> = {};\n\n  let foundMatch = false;\n  matches.forEach((match) => {\n    foundMatch = true;\n    const value = parseInt(match[1]);\n    const unit = match[2];\n\n    if (!extractedUnits[unit]) {\n      extractedUnits[unit] = value;\n    } else {\n      extractedUnits[unit] += value;\n    }\n  });\n\n  if (!foundMatch) {\n    const numberRegex = /\\d+/g;\n    const numberMatches = Array.from(input.matchAll(numberRegex));\n\n    numberMatches.forEach((match) => {\n      const value = parseInt(match[0]);\n      extractedUnits[\"hour\"] = value;\n    });\n  }\n\n  return extractedUnits;\n};\n\nexport const addTimeToDate = (\n  date: Date | string | number,\n  time: {\n    day?: number;\n    hour?: number;\n    minute?: number;\n    second?: number;\n    week?: number;\n    year?: number;\n    month?: number;\n  }\n) => {\n  return add(new Date(date), {\n    years: time.year || 0,\n    months: time.month || 0,\n    weeks: time.week || 0,\n    days: time.day || 0,\n    hours: time.hour || 0,\n    minutes: time.minute || 0,\n    seconds: time.second || 0,\n  });\n};\n","import styled from \"styled-components\";\nimport Placeholder from \"../../images/image.svg\";\n\nconst StyledPlaceholder = styled.div`\n  width: 100%;\n  height: 100%;\n  border: 1px solid\n    ${({ theme }) => (theme.mode === \"light\" ? theme.gray4 : theme.gray2)};\n`;\n\nconst CourseImgPlaceholder = () => {\n  return (\n    <StyledPlaceholder>\n      <img src={Placeholder} alt=\"\" />\n    </StyledPlaceholder>\n  );\n};\n\nexport default CourseImgPlaceholder;\n","import { Spin } from \"@escolalms/components\";\nimport styled, { useTheme } from \"styled-components\";\n\ninterface Props {\n  width?: string;\n  height?: string;\n}\n\nconst SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n`;\n\nconst ContentLoader = ({ width, height }: Props) => {\n  const theme = useTheme();\n  return (\n    <SpinnerWrapper\n      style={{\n        width: width || \"100%\",\n        height: height || \"100%\",\n      }}\n    >\n      <Spin color={theme.primaryColor} />\n    </SpinnerWrapper>\n  );\n};\n\nexport default ContentLoader;\n","export default __webpack_public_path__ + \"static/media/image.ece42557.svg\";","import { useMemo } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { formatDate } from \"@/utils/date\";\nimport { APP_CONFIG } from \"@/config/app\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { IconCalendar } from \"../../icons\";\n\nconst DateInfoStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .date-container {\n    display: flex;\n    flex-direction: row;\n    border: 1px solid;\n    border-radius: 2px;\n    align-items: center;\n\n    .icon-container {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n    }\n\n    .date {\n      padding: 0.5rem;\n      margin: 0 auto;\n    }\n  }\n\n  .info {\n    padding: 0.5rem;\n    border-left: 1px solid;\n    border-right: 1px solid;\n    border-bottom: 1px solid;\n    font-family: ${({ theme }) => theme.font};\n    font-size: 12px;\n  }\n`;\n\nexport enum DateInfoTypes {\n  \"ACCEPTED\",\n  \"WAITING\",\n  \"ENDED\",\n  \"DEFAULT\",\n}\n\ninterface DateInfoProps {\n  type: DateInfoTypes;\n  date?: Date | string | number;\n  info?: string | React.ReactElement;\n}\n\nconst DateInfo = ({ type, date, info }: DateInfoProps) => {\n  const theme = useTheme();\n  const color = useMemo(() => {\n    switch (type) {\n      case DateInfoTypes.ACCEPTED:\n        return \"#198754\";\n      case DateInfoTypes.WAITING:\n        return \"#FFC300\";\n      case DateInfoTypes.ENDED:\n        return \"#D22B2B\";\n      default:\n        return theme.primaryColor;\n    }\n  }, [theme.primaryColor, type]);\n\n  return (\n    <DateInfoStyles>\n      <div\n        className=\"date-container\"\n        style={{\n          borderColor: color,\n        }}\n      >\n        <div\n          className=\"icon-container\"\n          style={{\n            backgroundColor: color,\n          }}\n        >\n          <IconCalendar color=\"#ffffff\" />\n        </div>\n        <Text className=\"date\">\n          {date\n            ? formatDate(new Date(date), APP_CONFIG.defaultDateTimeFormat)\n            : \"--\"}\n        </Text>\n      </div>\n      {info && (\n        <div\n          className=\"info\"\n          style={{\n            borderColor: color,\n          }}\n        >\n          {info}\n        </div>\n      )}\n    </DateInfoStyles>\n  );\n};\n\nexport default DateInfo;\n","import styled from \"styled-components\";\n\nexport const StyledDatePicker = styled.div`\n  .react-datepicker {\n    font-family: ${({ theme }) => theme.font};\n    color: ${({ theme }) => theme.textColor};\n    border-color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray1 : theme.gray3};\n    border-radius: ${({ theme }) => theme.buttonRadius || 2}px;\n    width: 100%;\n    margin-top: 0.5rem;\n  }\n\n  .react-datepicker__day--selected {\n    background-color: ${({ theme }) => theme.primaryColor};\n  }\n\n  .react-datepicker__day--selected:hover {\n    background-color: ${({ theme }) => theme.primaryColor};\n    opacity: 0.3;\n  }\n\n  .react-datepicker__month-container {\n    width: 100%;\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header {\n    font-size: 14px;\n  }\n\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    width: 4em;\n    line-height: 4em;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.primaryColor};\n    opacity: 0.3;\n    color: #ffffff;\n  }\n\n  .react-datepicker__header {\n    background-color: transparent;\n    border-color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray1 : theme.gray3};\n    border-top-right-radius: ${({ theme }) => theme.buttonRadius || 2}px;\n    border-top-left-radius: ${({ theme }) => theme.buttonRadius || 2}px;\n  }\n\n  .react-datepicker__input-time-container {\n    text-align: center;\n    margin: 15px 0;\n  }\n\n  .react-datepicker__input-time-container .react-datepicker-time__caption {\n    font-size: 14px;\n  }\n\n  .react-datepicker__input-time-container\n    .react-datepicker-time__input-container\n    .react-datepicker-time__input\n    input {\n    font-size: 14px;\n    padding: 1em;\n    border-radius: ${({ theme }) => theme.buttonRadius || 2}px;\n    border-color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray1 : theme.gray3};\n    border-width: 1px;\n    border-style: solid;\n  }\n\n  .react-datepicker__input-time-container\n    .react-datepicker-time__input-container\n    .react-datepicker-time__input\n    input:focus {\n    outline: none;\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\nimport ReactDatePicker, { registerLocale } from \"react-datepicker\";\nimport { StyledDatePicker } from \"./styles\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport en from \"date-fns/locale/en-GB\";\nimport pl from \"date-fns/locale/pl\";\nregisterLocale(\"pl\", pl);\nregisterLocale(\"en\", en);\n\ninterface Props {\n  selectedDate: Date | null;\n  onChange: (date: Date) => void;\n  includeDates?: Date[];\n  includeTimes?: Date[];\n  minDate?: Date | null;\n  showTimeInput?: boolean;\n  timeInputLabel?: string;\n}\n\nconst DatePicker = ({\n  selectedDate,\n  onChange,\n  includeDates,\n  includeTimes,\n  minDate,\n  showTimeInput,\n  timeInputLabel,\n}: Props) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <StyledDatePicker>\n      <ReactDatePicker\n        selected={selectedDate}\n        onChange={onChange}\n        includeDates={includeDates}\n        includeTimes={includeTimes}\n        inline\n        locale={i18n.language}\n        minDate={minDate}\n        showTimeInput={showTimeInput}\n        timeInputLabel={timeInputLabel}\n      />\n    </StyledDatePicker>\n  );\n};\n\nexport default DatePicker;\n","import styled from \"styled-components\";\n\nexport const StyledBookTermButtons = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.54rem;\n  margin: 0.5rem 0 2rem 0;\n\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  button {\n    animation: fadeIn 0.4s;\n  }\n`;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport DatePicker from \"@/components/DatePicker\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Button } from \"@escolalms/components\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport {\n  sortDates,\n  removePastDates,\n  createArrayWithDateAndTimes,\n  isTwoDatesEqual,\n  formatDate,\n} from \"@/utils/date\";\nimport { Tag } from \"@escolalms/components/lib/components/atoms/Tag/Tag\";\nimport SelectedTermContent from \"../SelectedTermContent\";\nimport { ProfileConsultationsContext } from \"@/components/Profile/ProfileConsultations/ProfileConsultationsProvider\";\nimport { StyledBookTermButtons } from \"../styles\";\n\ninterface Props {\n  consultation: API.Consultation & {\n    proposed_terms: string[];\n  };\n  onClose: () => void;\n}\n\nconst ProposedTermsContent = ({ consultation, onClose }: Props) => {\n  const [selectedDate, setSelectedDay] = useState<Date | null>(null);\n  const [selectedTime, setSelectedTime] = useState<Date | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [step, setStep] = useState(1);\n  const { setShowBookTermSuccess } = useContext(ProfileConsultationsContext);\n  const { t } = useTranslation();\n  const { bookConsultationTerm } = useContext(EscolaLMSContext);\n  const terms = sortDates(\n    removePastDates(\n      consultation?.proposed_terms?.map(\n        (dateString: string) => new Date(dateString)\n      ) || []\n    )\n  );\n  const sortedDates = createArrayWithDateAndTimes(terms);\n  const currentTimes = selectedDate\n    ? sortedDates.find((dateObj) => isTwoDatesEqual(dateObj.date, selectedDate))\n        ?.times || []\n    : [];\n  const inComing = consultation.in_coming;\n  const isApproved = consultation.executed_status === \"approved\";\n  const isAnyTerm = !!terms?.length;\n\n  useEffect(() => {\n    if (terms[0]) {\n      setSelectedDay(terms[0]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onChange = (date: Date) => {\n    setSelectedDay(date);\n    setSelectedTime(null);\n  };\n\n  const close = useCallback(() => {\n    setShowBookTermSuccess(true);\n    onClose();\n    setSelectedDay(null);\n    setSelectedTime(null);\n  }, [onClose, setShowBookTermSuccess]);\n\n  const onClick = useCallback(async () => {\n    if (consultation.consultation_term_id && selectedTime) {\n      setLoading(true);\n      const response = await bookConsultationTerm(\n        consultation.consultation_term_id,\n        selectedTime.toISOString()\n      );\n      if (response.success) {\n        close();\n      }\n      setLoading(false);\n    }\n  }, [\n    consultation.consultation_term_id,\n    selectedTime,\n    bookConsultationTerm,\n    close,\n  ]);\n\n  if (step === 2) {\n    return (\n      <SelectedTermContent\n        selectedDate={selectedDate}\n        consultation={consultation}\n        loading={loading}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <>\n      <DatePicker\n        onChange={onChange}\n        selectedDate={selectedDate}\n        includeDates={terms}\n        includeTimes={currentTimes}\n      />\n      <StyledBookTermButtons>\n        {currentTimes.map((date) => (\n          <Button\n            mode={\n              isTwoDatesEqual(date, selectedTime, \"HH:mm\")\n                ? \"secondary\"\n                : \"outline\"\n            }\n            onClick={() => setSelectedTime(date)}\n          >\n            {formatDate(date, \"HH:mm\")}\n          </Button>\n        ))}\n      </StyledBookTermButtons>\n      {!isAnyTerm && <Tag>{t(\"ConsultationPage.NoTermsAvailable\")}</Tag>}\n      {isAnyTerm && (\n        <Button\n          mode=\"secondary\"\n          onClick={() => setStep(2)}\n          block\n          disabled={!selectedDate || !selectedTime}\n          loading={loading}\n        >\n          {inComing && isApproved\n            ? t(\"ConsultationPage.ChangeTerm\")\n            : t(\"ConsultationPage.Book\")}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default ProposedTermsContent;\n","import { useCallback, useContext, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport DatePicker from \"@/components/DatePicker\";\nimport Button from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport ModalTitle from \"@/components/StyledTitle/ModalTitle\";\nimport SelectedTermContent from \"../SelectedTermContent\";\nimport { ProfileConsultationsContext } from \"@/components/Profile/ProfileConsultations/ProfileConsultationsProvider\";\n\ninterface Props {\n  consultation: API.Consultation & {\n    proposed_terms: string[];\n  };\n  onClose: () => void;\n}\n\nconst UserSelectDatePicker = ({ consultation, onClose }: Props) => {\n  const [selectedDate, setSelectedDay] = useState<Date | null>(null);\n  const { bookConsultationTerm } = useContext(EscolaLMSContext);\n  const [loading, setLoading] = useState(false);\n  const [step, setStep] = useState(1);\n  const { setShowBookTermSuccess } = useContext(ProfileConsultationsContext);\n  const { t } = useTranslation();\n  const inComing = consultation.in_coming;\n  const isApproved = consultation.executed_status === \"approved\";\n\n  const onChange = (date: Date) => {\n    setSelectedDay(date);\n  };\n\n  const close = useCallback(() => {\n    setShowBookTermSuccess(true);\n    onClose();\n    setSelectedDay(null);\n  }, [onClose, setShowBookTermSuccess]);\n\n  const onClick = useCallback(async () => {\n    if (consultation.consultation_term_id && selectedDate) {\n      setLoading(true);\n      const response = await bookConsultationTerm(\n        consultation.consultation_term_id,\n        selectedDate.toISOString()\n      );\n      if (response.success) {\n        close();\n      }\n      setLoading(false);\n    }\n  }, [\n    consultation.consultation_term_id,\n    selectedDate,\n    bookConsultationTerm,\n    close,\n  ]);\n\n  if (step === 2) {\n    return (\n      <SelectedTermContent\n        selectedDate={selectedDate}\n        consultation={consultation}\n        loading={loading}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <>\n      <ModalTitle>{t(\"ConsultationPage.SelectDateAndHour\")}</ModalTitle>\n      <DatePicker\n        onChange={onChange}\n        selectedDate={selectedDate}\n        minDate={new Date()}\n        showTimeInput\n        timeInputLabel={`${t(\"Time\")}: `}\n      />\n      <Button\n        mode=\"secondary\"\n        onClick={() => setStep(2)}\n        block\n        disabled={!selectedDate}\n        loading={loading}\n      >\n        {inComing && isApproved\n          ? t(\"ConsultationPage.ChangeTerm\")\n          : t(\"ConsultationPage.Choose\")}\n      </Button>\n    </>\n  );\n};\n\nexport default UserSelectDatePicker;\n","import Modal from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ProposedTermsContent from \"./ProposedTermsContent\";\nimport UserSelectDatePicker from \"./UserSelectDatePicker\";\n\ninterface Props {\n  onClose: () => void;\n  visible: boolean;\n  consultation: API.Consultation & {\n    proposed_terms: string[];\n  };\n}\n\nconst BookTermModal: React.FC<Props> = ({ onClose, visible, consultation }) => {\n  const isSingle = consultation.product?.type === \"single\";\n\n  return (\n    <Modal\n      onClose={onClose}\n      visible={visible}\n      animation=\"zoom\"\n      maskAnimation=\"fade\"\n      destroyOnClose={true}\n      width={468}\n    >\n      {isSingle ? (\n        <UserSelectDatePicker consultation={consultation} onClose={onClose} />\n      ) : (\n        <ProposedTermsContent consultation={consultation} onClose={onClose} />\n      )}\n    </Modal>\n  );\n};\n\nexport default BookTermModal;\n","import { useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\n\ninterface Props {\n  showBookTerm: (value: boolean) => void;\n}\n\nconst ConsultationCardBookButton = ({ showBookTerm }: Props) => {\n  const { t } = useTranslation();\n\n  const onClick = useCallback(() => {\n    showBookTerm(true);\n  }, [showBookTerm]);\n\n  return (\n    <Button mode=\"secondary\" onClick={onClick}>\n      {t(\"ConsultationPage.Book\")}\n    </Button>\n  );\n};\n\nexport default ConsultationCardBookButton;\n","import { useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\n\ninterface Props {\n  showBookTerm: (value: boolean) => void;\n}\n\nconst ConsultationCardChangeButton = ({ showBookTerm }: Props) => {\n  const { t } = useTranslation();\n\n  const onClick = useCallback(() => {\n    showBookTerm(true);\n  }, [showBookTerm]);\n\n  return (\n    <Button mode=\"secondary\" onClick={onClick}>\n      {t(\"ConsultationPage.ChangeTerm\")}\n    </Button>\n  );\n};\n\nexport default ConsultationCardChangeButton;\n","import { useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ConsultationCardJoinButton from \"./JoinButton\";\nimport ConsultationCardBookButton from \"./BookButton\";\nimport ConsultationCardChangeButton from \"./ChangeButton\";\n\ninterface Props {\n  consultation: API.Consultation;\n  showBookTerm: (value: boolean) => void;\n}\n\nconst ConsultationCardButtons = ({ consultation, showBookTerm }: Props) => {\n  const history = useHistory();\n  const { t } = useTranslation();\n  const isStarted = consultation.is_started;\n  const inComing = consultation.in_coming;\n  const isReported = consultation.executed_status === \"reported\";\n  const isNotReported = consultation.executed_status === \"not_reported\";\n\n  if (isReported) {\n    return null;\n  }\n  if (consultation.product?.owned && isNotReported) {\n    return (\n      <ConsultationCardBookButton\n        showBookTerm={(value) => showBookTerm(value)}\n      />\n    );\n  }\n  if (isStarted && consultation.consultation_term_id) {\n    return (\n      <ConsultationCardJoinButton\n        consultationTermId={consultation.consultation_term_id}\n      />\n    );\n  }\n  if (inComing) {\n    return (\n      <ConsultationCardChangeButton\n        showBookTerm={(value) => showBookTerm(value)}\n      />\n    );\n  }\n  return (\n    <Button\n      mode=\"secondary\"\n      onClick={() => history.push(`/consultations/${consultation.id}`)}\n    >\n      {t(\"ConsultationPage.Show\")}\n    </Button>\n  );\n};\n\nexport default ConsultationCardButtons;\n","import styled from \"styled-components\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { addTimeToDate, extractTimeUnits } from \"@/utils/date\";\nimport DateInfo, { DateInfoTypes } from \"@/components/DateInfo\";\n\nconst ConsultationCardContentStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\ninterface Props {\n  consultation: API.Consultation;\n}\n\nconst ConsultationCardContent = ({ consultation }: Props) => {\n  const isEnded = consultation.is_ended;\n  const isReported = consultation.executed_status === \"reported\";\n  const isApproved = consultation.executed_status === \"approved\";\n  const isNotReported = consultation.executed_status === \"not_reported\";\n\n  return (\n    <ConsultationCardContentStyles>\n      {isEnded && consultation.executed_at && (\n        <DateInfo\n          type={DateInfoTypes.ENDED}\n          date={addTimeToDate(\n            consultation.executed_at,\n            extractTimeUnits(`${consultation.duration}`)\n          )}\n        />\n      )}\n      {isReported && !isEnded && (\n        <DateInfo\n          type={DateInfoTypes.WAITING}\n          date={consultation.executed_at}\n        />\n      )}\n      {isApproved && !isEnded && (\n        <DateInfo\n          type={DateInfoTypes.ACCEPTED}\n          date={consultation.executed_at}\n        />\n      )}\n      {isNotReported && <DateInfo type={DateInfoTypes.DEFAULT} />}\n    </ConsultationCardContentStyles>\n  );\n};\n\nexport default ConsultationCardContent;\n","import { Link } from \"react-router-dom\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ResponsiveImage from \"@escolalms/components/lib/components/organisms/ResponsiveImage/ResponsiveImage\";\nimport CourseImgPlaceholder from \"../../CourseImgPlaceholder\";\n\ninterface Props {\n  consultation: API.Consultation;\n}\n\nconst ConsultationCardImage = ({ consultation }: Props) => {\n  return (\n    <Link to={`/consultations/${consultation.id}`}>\n      {consultation.image_path ? (\n        <ResponsiveImage\n          path={consultation.image_path}\n          alt={consultation.name}\n          srcSizes={[300, 600, 900]}\n        />\n      ) : (\n        <CourseImgPlaceholder />\n      )}\n    </Link>\n  );\n};\n\nexport default ConsultationCardImage;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { CourseCard } from \"@escolalms/components/lib/components/molecules/CourseCard/CourseCard\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport BookTermModal from \"@/components/BookTermModal\";\nimport ConsultationCardButtons from \"./Buttons\";\nimport ConsultationCardContent from \"./Content\";\nimport ConsultationCardImage from \"./Image\";\n\nconst ConsultationCardStyles = styled.div`\n  .course-card-buttons-group {\n    margin: 0;\n    width: 100%;\n\n    button {\n      width: 100%;\n      margin: 0;\n    }\n  }\n`;\n\ninterface ConsultationCardProps {\n  consultation: API.Consultation;\n}\n\nconst ConsultationCard: React.FC<ConsultationCardProps> = (props) => {\n  const { consultation } = props;\n  const [showBookTerm, setShowBookTerm] = useState(false);\n\n  return (\n    <ConsultationCardStyles>\n      <CourseCard\n        id={consultation.id}\n        image={<ConsultationCardImage consultation={consultation} />}\n        title={`${consultation.name}`}\n        footer={<ConsultationCardContent consultation={consultation} />}\n        actions={\n          <ConsultationCardButtons\n            consultation={consultation}\n            showBookTerm={(value) => setShowBookTerm(value)}\n          />\n        }\n      />\n      {/* Book term modal */}\n      <BookTermModal\n        visible={showBookTerm}\n        onClose={() => setShowBookTerm(false)}\n        consultation={consultation as any}\n      />\n    </ConsultationCardStyles>\n  );\n};\n\nexport default ConsultationCard;\n","import styled, { useTheme } from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { IconSuccess } from \"../../../icons\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\n\nconst SuccessContentStyles = styled.div`\n  text-align: center;\n\n  .text {\n    margin: 1.5rem 0 3rem 0;\n  }\n`;\n\ninterface SuccessContentProps {\n  onClick: () => void;\n}\n\nconst SuccessContent = ({ onClick }: SuccessContentProps) => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  return (\n    <SuccessContentStyles>\n      <IconSuccess width=\"50px\" height=\"50px\" color={theme.primaryColor} />\n      <Text className=\"text\">{t(\"ConsultationPage.successTermInfo\")}</Text>\n      <Button mode=\"secondary\" onClick={onClick} block>\n        {t(\"ConsultationPage.Understand\")}\n      </Button>\n    </SuccessContentStyles>\n  );\n};\n\nexport default SuccessContent;\n","import Modal from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport SuccessContent from \"../BookTermModal/SuccessContent\";\n\ninterface Props {\n  onClose: () => void;\n  visible: boolean;\n}\n\nconst BookTermSuccessModal: React.FC<Props> = ({ onClose, visible }) => {\n  return (\n    <Modal\n      onClose={onClose}\n      visible={visible}\n      animation=\"zoom\"\n      maskAnimation=\"fade\"\n      destroyOnClose={true}\n      width={468}\n    >\n      <SuccessContent onClick={onClose} />\n    </Modal>\n  );\n};\n\nexport default BookTermSuccessModal;\n","import { PropsWithChildren, createContext, useState } from \"react\";\nimport BookTermSuccessModal from \"@/components/BookTermSuccessModal\";\n\nexport const ProfileConsultationsContext = createContext({\n  showBookTermSuccess: false,\n  setShowBookTermSuccess: (value: boolean) => {},\n});\n\nconst ProfileConsultationsProvider: React.FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const [showBookTermSuccess, setShowBookTermSuccess] = useState(false);\n\n  return (\n    <ProfileConsultationsContext.Provider\n      value={{\n        showBookTermSuccess,\n        setShowBookTermSuccess,\n      }}\n    >\n      {children}\n      {/* Success modal */}\n      <BookTermSuccessModal\n        visible={showBookTermSuccess}\n        onClose={() => setShowBookTermSuccess(false)}\n      />\n    </ProfileConsultationsContext.Provider>\n  );\n};\n\nexport default ProfileConsultationsProvider;\n","import { useTranslation } from \"react-i18next\";\nimport { isMobile } from \"react-device-detect\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport Button from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { formatDate } from \"@/utils/date\";\nimport { APP_CONFIG } from \"@/config/app\";\nimport ModalTitle from \"@/components/StyledTitle/ModalTitle\";\nimport InfoBox from \"@/components/InfoBox\";\nimport { Tutor } from \"@escolalms/components/lib/components/molecules/Tutor/Tutor\";\n\nconst API_URL =\n  window.REACT_APP_API_URL ||\n  (process && process.env && process.env.REACT_APP_PUBLIC_API_URL);\n\ninterface Props {\n  consultation: API.Consultation;\n  selectedDate: Date | null;\n  onClick: () => void;\n  loading: boolean;\n}\n\nconst SelectedTermContent = ({\n  consultation,\n  selectedDate,\n  onClick,\n  loading,\n}: Props) => {\n  const { t } = useTranslation();\n  const { author } = consultation;\n\n  return (\n    <>\n      <ModalTitle>\n        {t(\"ConsultationPage.SelectedTermOfConsultation\")}\n      </ModalTitle>\n      <InfoBox\n        title={t(\"ConsultationPage.ConsultationTerm\")}\n        content={formatDate(selectedDate, APP_CONFIG.defaultDateTimeFormat)}\n      />\n      <InfoBox\n        title={t(\"ConsultationPage.Expert\")}\n        content={\n          <Tutor\n            mobile={isMobile}\n            avatar={{\n              alt: `${author.first_name} ${author.last_name}`,\n              src: `${API_URL}/api/images/img?path=${author.path_avatar}` || \"\",\n            }}\n            title={<></>}\n            fullName={`${author.first_name} ${author.last_name}`}\n            rating={{\n              ratingValue: 5,\n            }}\n            description={author.bio}\n          />\n        }\n      />\n      <Button\n        mode=\"secondary\"\n        onClick={onClick}\n        block\n        disabled={!selectedDate}\n        loading={loading}\n      >\n        {t(\"ConsultationPage.Book\")}\n      </Button>\n    </>\n  );\n};\n\nexport default SelectedTermContent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\n\ntype BaseTextProps = React.ComponentProps<typeof Title>;\n\nconst ModalTitle = styled(Title)<BaseTextProps>`\n  font-size: 24px;\n  margin-bottom: 24px;\n  border-bottom: 1px solid\n    ${({ theme }) => (theme.mode === \"dark\" ? theme.gray1 : theme.gray3)};\n  padding-bottom: 12px;\n`;\n\nexport default ModalTitle;\n","import styled from \"styled-components\";\n\nexport const ConsultationMeetModalStyles = styled.div`\n  iframe {\n    width: 100% !important;\n    height: calc(100vh - 76px);\n    border: none;\n  }\n`;\n","import { useContext, useEffect, useState } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { Modal } from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport { JitsyData } from \"@escolalms/sdk/lib/types/api\";\nimport ContentLoader from \"@/components/ContentLoader\";\nimport { ConsultationMeetModalStyles } from \"./MeetModalStyles\";\n\ninterface Props {\n  onClose: () => void;\n  visible: boolean;\n  consultationTermId: number;\n}\n\nconst ConsultationMeetModal = ({\n  onClose,\n  visible,\n  consultationTermId,\n}: Props) => {\n  const [meetData, setMeetData] = useState<JitsyData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const { generateConsultationJitsy } = useContext(EscolaLMSContext);\n\n  useEffect(() => {\n    const getMeetUrl = async () => {\n      setLoading(true);\n      const res = await generateConsultationJitsy(consultationTermId);\n      if (res.success) {\n        setMeetData((res as { data: JitsyData }).data);\n      }\n      setLoading(false);\n    };\n\n    getMeetUrl();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Modal\n      onClose={onClose}\n      visible={visible}\n      animation=\"zoom\"\n      maskAnimation=\"fade\"\n      destroyOnClose={true}\n      width=\"100vw\"\n      height=\"100vh\"\n      bodyStyle={{\n        minHeight: \"93vh\",\n      }}\n    >\n      <ConsultationMeetModalStyles>\n        {loading && <ContentLoader />}\n        {!loading && meetData && (\n          <iframe title={meetData.data.roomName} src={meetData.url} />\n        )}\n      </ConsultationMeetModalStyles>\n    </Modal>\n  );\n};\n\nexport default ConsultationMeetModal;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport ConsultationMeetModal from \"@/components/ConsultationCard/MeetModal\";\n\ninterface Props {\n  consultationTermId: number;\n}\n\nconst ConsultationCardJoinButton = ({ consultationTermId }: Props) => {\n  const [showModal, setShowModal] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Button mode=\"secondary\" onClick={() => setShowModal(true)}>\n        {t(\"ConsultationPage.Join\")}\n      </Button>\n      <ConsultationMeetModal\n        visible={showModal}\n        onClose={() => setShowModal(false)}\n        consultationTermId={consultationTermId}\n      />\n    </>\n  );\n};\n\nexport default ConsultationCardJoinButton;\n","import { Text } from \"@escolalms/components\";\nimport styled from \"styled-components\";\n\nconst InfoBoxStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 12px;\n\n  .title {\n    margin: 0.2em 0;\n  }\n\n  .content {\n    margin: 0.2em 0;\n    font-weight: 700;\n    color: ${({ theme: { primaryColor } }) => primaryColor};\n  }\n`;\n\ninterface InfoBoxProps {\n  title: string | React.ReactElement;\n  content: string | React.ReactElement;\n}\n\nconst InfoBox = ({ title, content }: InfoBoxProps) => {\n  return (\n    <InfoBoxStyles>\n      {typeof title === \"string\" ? (\n        <Text className=\"title\">{title}</Text>\n      ) : (\n        title\n      )}\n      {typeof content === \"string\" ? (\n        <Text className=\"content\">{content}</Text>\n      ) : (\n        content\n      )}\n    </InfoBoxStyles>\n  );\n};\n\nexport default InfoBox;\n"],"sourceRoot":""}