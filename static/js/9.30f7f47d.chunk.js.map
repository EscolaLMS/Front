{"version":3,"sources":["pages/courses/course/index.tsx","components/Preloader/index.tsx","components/CourseImgPlaceholder/index.tsx","components/CourseCardWrapper/index.tsx","components/Breadcrumbs/index.tsx","components/CoursesSlider/index.tsx","components/SingleCoursesTwo/CoursesDetailsSidebar/index.tsx","components/Course/CourseProgramPreview/index.tsx"],"names":["resetIdCounter","StyledCoursePage","styled","div","theme","mode","gray1","gray5","cardRadius","isMobile","ModalOverwriteGlobal","createGlobalStyle","CoursePage","useState","undefined","ratings","setRatings","previewTopic","setPreviewTopic","t","useTranslation","id","useParams","useContext","EscolaLMSContext","course","settings","fetchCourse","fetchCourses","courses","fetchCart","user","sliderSettings","arrows","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","centerMode","useEffect","per_page","Number","questionnaireStars","then","res","success","data","value","loading","error","message","metaTitle","title","className","items","to","size","mobile","level","icon","image_path","path","srcSizes","categories","length","variant","name","active_from","format","Date","String","duration","courseLogos","Object","values","map","_","index","summary","fixContentForMarkdown","author","author_id","avatar","alt","first_name","last_name","src","process","path_avatar","rating","ratingValue","fullName","coursesInfo","description","bio","lessons","onTopicClick","topic","count_answers","sumRates","sum_rate","avgRate","avg_rate","rates","header","style","marginTop","list","onClose","visible","animation","maskAnimation","destroyOnClose","width","StyledLoader","backgroundDark","backgroundLight","Preloader","useTheme","document","body","overflow","color","primaryColor","StyledPlaceholder","gray4","gray2","CourseImgPlaceholder","CardWrapper","CourseCardWrapper","children","StyledBreadcrumbs","Breadcrumbs","SliderWrapper","CoursesSlider","dots","history","useHistory","dotsPosition","item","image","tags","white","subtitle","hyphen","category","actions","onClick","push","footer","users_count","text","lessons_count","CoursesDetailsSidebar","cart","addToCart","progress","fetchProgress","courseInCart","useMemo","some","product_id","userOwnThisCourse","findIndex","currentCourse","filter","progressMap","status","as","product","price_old","price","block","isPast","active_to","language","fontSize","marginBottom","marginRight","CourseProgramPreview","apiUrl","topicRender","topicable_type","TopicType","H5P","topicable","OEmbed","url","RichText","onLoad","console","log","Video","Audio","Image","Pdf","Scorm","uuid","Fragment"],"mappings":"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","file":"static/js/9.30f7f47d.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport CoursesDetailsSidebar from \"@/components/SingleCoursesTwo/CoursesDetailsSidebar/index\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport Loader from \"@/components/Preloader\";\nimport { useTranslation } from \"react-i18next\";\nimport Layout from \"@/components/_App/Layout\";\nimport { resetIdCounter } from \"react-tabs\";\nimport { ResponsiveImage } from \"@escolalms/components/lib/components/organisms/ResponsiveImage/ResponsiveImage\";\nimport { format } from \"date-fns\";\nimport { isMobile } from \"react-device-detect\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { LabelListItem } from \"@escolalms/components/lib/components/molecules/LabelListItem/LabelListItem\";\nimport { Ratings } from \"@escolalms/components/lib/components/molecules/Ratings/Ratings\";\nimport { CourseProgram } from \"@escolalms/components/lib/components/organisms/CourseProgram/CourseProgram\";\nimport { MarkdownRenderer } from \"@escolalms/components/lib/components/molecules/MarkdownRenderer/MarkdownRenderer\";\nimport { Tutor } from \"@escolalms/components/lib/components/molecules/Tutor/Tutor\";\nimport CourseProgramPreview from \"@/components/Course/CourseProgramPreview\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { Medal, StarOrange, ThumbUp } from \"../../../icons\";\nimport { questionnaireStars } from \"@escolalms/sdk/lib/services/questionnaire\";\nimport CoursesSlider from \"@/components/CoursesSlider\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Modal } from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\nimport { fixContentForMarkdown } from \"@escolalms/components/lib/utils/components/markdown\";\n\nresetIdCounter();\n\nconst StyledCoursePage = styled.div`\n  section {\n    margin-bottom: 45px;\n    &.with-border {\n      padding-bottom: 45px;\n      border-bottom: 1px solid\n        ${({ theme }) => (theme.mode === \"dark\" ? theme.gray1 : theme.gray5)};\n    }\n    &.padding-right {\n      padding-right: 150px;\n      @media (max-width: 991px) {\n        padding-right: 70px;\n      }\n      @media (max-width: 768px) {\n        padding-right: 0;\n      }\n    }\n  }\n  .sidebar-col {\n    padding-bottom: 45px;\n  }\n  .course-main-info {\n    .image-wrapper {\n      @media (max-width: 991px) {\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        margin-bottom: 35px;\n\n        img {\n          display: block;\n          margin: 0 auto;\n        }\n      }\n    }\n    .labels-row {\n      display: flex;\n      justify-content: flex-start;\n      align-items: flex-start;\n      column-gap: 20px;\n      margin: 35px 0;\n      @media (max-width: 991px) {\n        margin: 35px 0 0;\n      }\n      @media (max-width: 374px) {\n        flex-direction: column;\n        row-gap: 16px;\n      }\n      &--bottom {\n        column-gap: 45px;\n        margin-top: 120px;\n        margin-bottom: 0;\n        flex-wrap: wrap;\n        @media (max-width: 991px) {\n          column-gap: 0;\n          margin-top: 55px;\n        }\n        @media (max-width: 374px) {\n          flex-direction: row;\n        }\n        .single-label {\n          @media (max-width: 991px) {\n            flex: 0 0 50%;\n            max-width: 50%;\n            margin-bottom: 20px;\n          }\n        }\n      }\n    }\n  }\n  .course-tutor {\n    .ranking-row {\n      display: none !important;\n    }\n  }\n  .course-companies {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    @media (max-width: 768px) {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n\n    .companies-row {\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n      column-gap: 90px;\n      .single-company {\n        max-height: 55px;\n        max-width: 45px;\n      }\n      @media (max-width: 768px) {\n        column-gap: 0;\n        justify-content: space-between;\n        width: 100%;\n      }\n    }\n\n    p {\n      max-width: 220px;\n      margin-right: 50px;\n    }\n  }\n  .course-description {\n    padding: 50px 45px;\n    margin: 45px 0;\n    background-color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray1 : theme.gray5};\n    border-radius: ${({ theme }) => theme.cardRadius}px;\n    @media (max-width: 768px) {\n      padding: 20px;\n    }\n  }\n  .course-related-courses {\n    background-color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray1 : theme.gray5};\n    padding: 60px 0 90px;\n    .slick-dots {\n      top: -65px;\n      right: 80px;\n      @media (max-width: 575px) {\n        right: 0;\n      }\n    }\n    .content-container {\n      position: relative;\n      overflow: hidden;\n      &:first-of-type {\n        margin-bottom: 60px;\n        @media (max-width: 768px) {\n          margin-bottom: 40px;\n        }\n      }\n      h4 {\n        @media (max-width: 575px) {\n          padding-right: 50%;\n        }\n      }\n      .slider-wrapper {\n        a {\n          text-decoration: none !important;\n        }\n        @media (max-width: 575px) {\n          margin-left: -50px;\n\n          .image-section,\n          img {\n            max-height: 180px;\n          }\n        }\n      }\n    }\n  }\n  .course-tutor {\n    a {\n      text-decoration: none !important;\n    }\n  }\n  .sidebar-wrapper {\n    width: 100%;\n    left: 0;\n    position: ${isMobile ? \"fixed\" : \"sticky\"};\n    top: ${isMobile ? \"unset\" : \"130px\"};\n    bottom: ${isMobile ? \"0\" : \"unset\"};\n    z-index: 100;\n  }\n`;\n\nconst ModalOverwriteGlobal = createGlobalStyle`\n  .ReactModal__Overlay  {\n    z-index: 1500 !important;\n  }\n`;\n\nconst CoursePage = () => {\n  const [ratings, setRatings] = useState<undefined | API.QuestionnaireStars>(\n    undefined\n  );\n  const [previewTopic, setPreviewTopic] = useState<API.Topic>();\n  const { t } = useTranslation();\n  const { id } = useParams<{ id: string }>();\n  const {\n    course,\n    settings,\n    fetchCourse,\n    fetchCourses,\n    courses,\n    fetchCart,\n    user,\n  } = useContext(EscolaLMSContext);\n  const sliderSettings = {\n    arrows: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    responsive: [\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 2,\n        },\n      },\n      {\n        breakpoint: 576,\n        settings: {\n          slidesToShow: 1,\n          centerMode: true,\n        },\n      },\n    ],\n  };\n\n  useEffect(() => {\n    fetchCourses({ per_page: 6 });\n    if (id) {\n      fetchCourse(Number(id));\n      questionnaireStars(\"Course\", Number(id)).then((res) => {\n        res.success && setRatings(res.data ? res.data : undefined);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n  useEffect(() => {\n    user.value && fetchCart();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n  if (!course.value) {\n    return <Loader />;\n  }\n\n  if (Number(course.value.id) !== Number(id) && course.loading) {\n    return <Loader />;\n  }\n\n  if (course.error) {\n    return <pre>{course.error.message}</pre>;\n  }\n  return (\n    <Layout metaTitle={course.value.title}>\n      <StyledCoursePage>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-9 col-md-12\">\n              <Breadcrumbs\n                items={[\n                  <Link to=\"/\">{t(\"Home\")}</Link>,\n                  <Link to=\"/courses\">{t(\"Courses\")}</Link>,\n                  <Text size=\"12\">{course.value.title}</Text>,\n                ]}\n              />\n              <section className=\"course-main-info with-border\">\n                <div className=\"row flex-lg-row flex-column-reverse\">\n                  <div className=\"col-lg-7\">\n                    <Title mobile={isMobile} level={2}>\n                      {course.value.title}\n                    </Title>\n                    <div className=\"labels-row\">\n                      <div className=\"single-label\">\n                        <LabelListItem\n                          mobile={isMobile}\n                          title=\"90%\"\n                          icon={<ThumbUp />}\n                        >\n                          {t(\"CoursePage.Recommends\")}\n                        </LabelListItem>\n                      </div>\n                      <div className=\"single-label\">\n                        <LabelListItem\n                          mobile={isMobile}\n                          title=\"Gwarancja\"\n                          icon={<Medal />}\n                        >\n                          {t(\"CoursePage.Satisfaction\")}\n                        </LabelListItem>\n                      </div>\n                      <div className=\"single-label\">\n                        <LabelListItem\n                          mobile={isMobile}\n                          title=\"5.0\"\n                          icon={<StarOrange />}\n                        >\n                          {t(\"CoursePage.AvarageRating\")}\n                        </LabelListItem>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-lg-4\">\n                    {course.value.image_path && (\n                      <div className=\"image-wrapper\">\n                        <ResponsiveImage\n                          path={course.value.image_path}\n                          srcSizes={[790 * 0.5, 790, 2 * 790]}\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"labels-row labels-row--bottom\">\n                  {course.value.categories &&\n                    course.value.categories.length > 0 && (\n                      <div className=\"single-label\">\n                        <LabelListItem\n                          title={t(\"CoursePage.CourseCategory\")}\n                          variant={\"label\"}\n                        >\n                          {course.value.categories[0].name}\n                        </LabelListItem>\n                      </div>\n                    )}\n                  {course.value.level && (\n                    <div className=\"single-label\">\n                      <LabelListItem\n                        title={t(\"CoursePage.Level\")}\n                        variant={\"label\"}\n                      >\n                        {course.value.level}\n                      </LabelListItem>\n                    </div>\n                  )}\n                  {course.value.active_from && (\n                    <div className=\"single-label\">\n                      <LabelListItem\n                        title={t(\"CoursePage.StartDate\")}\n                        variant={\"label\"}\n                      >\n                        {course.value.active_from\n                          ? format(\n                              new Date(String(course.value.active_from)),\n                              \"dd/MM/yyyy\"\n                            )\n                          : \"---\"}\n                      </LabelListItem>\n                    </div>\n                  )}\n                  {course.value.duration && (\n                    <div className=\"single-label\">\n                      <LabelListItem\n                        title={t(\"CoursePage.Duration\")}\n                        variant={\"label\"}\n                      >\n                        {course.value.duration}\n                      </LabelListItem>\n                    </div>\n                  )}\n                </div>\n              </section>\n              <section className=\"course-companies\">\n                <Text>\n                  <strong>{t(\"CoursePage.CompaniesTitle\")}</strong>\n                </Text>\n                <div className=\"companies-row\">\n                  {settings &&\n                    settings.courseLogos &&\n                    Object.values(settings.courseLogos).map((_, index) => (\n                      <div className=\"single-company\" key={index}>\n                        <ResponsiveImage\n                          path={settings?.courseLogos[`logo${index + 1}`] || \"\"}\n                          srcSizes={[100, 100, 100]}\n                        />\n                      </div>\n                    ))}\n                </div>\n              </section>\n              {course.value.summary &&\n                fixContentForMarkdown(course.value.summary) !== \"\" && (\n                  <section className=\"course-description\">\n                    <MarkdownRenderer>{course.value.summary}</MarkdownRenderer>\n                  </section>\n                )}\n              {course.value.author && (\n                <section className=\"course-tutor with-border padding-right\">\n                  <Link to={`/tutors/${course.value.author_id}`}>\n                    <Tutor\n                      mobile={isMobile}\n                      avatar={{\n                        alt: `${course.value.author.first_name} ${course.value.author.last_name}`,\n                        src:\n                          `${\n                            process &&\n                            process.env &&\n                            process.env.REACT_APP_PUBLIC_API_URL\n                          }/api/images/img?path=${\n                            course.value.author.path_avatar\n                          }` || \"\",\n                      }}\n                      rating={{\n                        ratingValue: 4.1,\n                      }}\n                      title={\"Teacher\"}\n                      fullName={`${course.value.author.first_name} ${course.value.author.last_name}`}\n                      coursesInfo={\"8 Curses\"}\n                      description={course.value.author.bio}\n                    />\n                  </Link>\n                </section>\n              )}\n              {course.value.description &&\n                fixContentForMarkdown(course.value.description) !== \"\" && (\n                  <section className=\"course-description-short with-border padding-right\">\n                    <Title level={4}>\n                      {t(\"CoursePage.CourseDescriptionTitle\")}\n                    </Title>\n                    <MarkdownRenderer>\n                      {course.value.description}\n                    </MarkdownRenderer>\n                  </section>\n                )}\n              {course.value.lessons && course.value.lessons.length > 0 && (\n                <CourseProgram\n                  lessons={course.value.lessons}\n                  onTopicClick={(topic) => setPreviewTopic(topic)}\n                />\n              )}\n              {\n                <section className=\"course-ratings padding-right\">\n                  {ratings && ratings.count_answers > 0 ? (\n                    <Ratings\n                      mobile={isMobile}\n                      sumRates={ratings.sum_rate}\n                      avgRate={Number(ratings.avg_rate)}\n                      //@ts-ignore TODO: Add rates to type QuestionnaireStars in SDK\n                      rates={ratings.rates}\n                      header={t(\"CoursePage.CourseRatingsTitle\")}\n                    />\n                  ) : (\n                    <>\n                      <Title level={4}>\n                        {t(\"CoursePage.CourseRatingsTitle\")}\n                      </Title>\n                      <Text style={{ marginTop: 20 }}>\n                        Ten kurs nie został jeszcze oceniony\n                      </Text>\n                    </>\n                  )}\n                </section>\n              }\n            </div>\n            <div className=\"col-lg-3 col-md-12 sidebar-col\">\n              <div className=\"sidebar-wrapper\">\n                <CoursesDetailsSidebar course={course.value} />\n              </div>\n            </div>\n          </div>\n        </div>\n        <section className=\"course-related-courses\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-9\">\n                <div className=\"content-container\">\n                  <Title level={4}>{t(\"CoursePage.RelatedCoursesTitle\")}</Title>\n                  {courses && courses.list && (\n                    <CoursesSlider\n                      courses={courses.list.data}\n                      sliderSettings={sliderSettings}\n                    />\n                  )}\n                </div>\n                <div className=\"content-container\">\n                  <Title level={4}>{t(\"CoursePage.InterestTitle\")}</Title>\n                  {courses && courses.list && (\n                    <CoursesSlider\n                      courses={courses.list.data}\n                      sliderSettings={sliderSettings}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </StyledCoursePage>\n\n      <Modal\n        onClose={() => setPreviewTopic(undefined)}\n        visible={previewTopic ? true : false}\n        animation=\"zoom\"\n        maskAnimation=\"fade\"\n        destroyOnClose={true}\n        width={600}\n      >\n        <ModalOverwriteGlobal />\n        {previewTopic && <CourseProgramPreview topic={previewTopic} />}\n      </Modal>\n    </Layout>\n  );\n};\n\nexport default CoursePage;\n","import { useEffect } from \"react\";\nimport { Spin } from \"@escolalms/components/lib/components/atoms/Spin/Spin\";\nimport styled, { useTheme } from \"styled-components\";\n\nconst StyledLoader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  z-index: 999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) =>\n    theme.mode === \"dark\" ? theme.backgroundDark : theme.backgroundLight};\n`;\n\nconst Preloader = () => {\n  const theme = useTheme();\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n\n    return () => {\n      document.body.style.overflow = \"inherit\";\n    };\n  }, []);\n\n  return (\n    <StyledLoader>\n      <Spin color={theme.primaryColor} />\n    </StyledLoader>\n  );\n};\n\nexport default Preloader;\n","import styled from \"styled-components\";\n\nconst StyledPlaceholder = styled.div`\n  width: 100%;\n  height: 100%;\n  border: 1px solid\n    ${({ theme }) => (theme.mode === \"light\" ? theme.gray4 : theme.gray2)};\n`;\n\nconst CourseImgPlaceholder = () => {\n  return <StyledPlaceholder />;\n};\n\nexport default CourseImgPlaceholder;\n","import React, { PropsWithChildren } from \"react\";\nimport styled from \"styled-components\";\n\nconst CardWrapper = styled.div`\n  a {\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst CourseCardWrapper: React.FC<PropsWithChildren> = ({ children }) => {\n  return <CardWrapper>{children}</CardWrapper>;\n};\n\nexport default CourseCardWrapper;\n","import React from \"react\";\nimport { BreadCrumbs } from \"@escolalms/components/lib/components/atoms/BreadCrumbs/BreadCrumbs\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  items: React.ReactNode[];\n};\n\nconst StyledBreadcrumbs = styled.div`\n  margin-bottom: 15px;\n  a {\n    text-decoration: none;\n    color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray5 : theme.gray2}!important;\n  }\n`;\n\nconst Breadcrumbs: React.FC<Props> = ({ items }) => {\n  return (\n    <StyledBreadcrumbs>\n      <BreadCrumbs items={items} />\n    </StyledBreadcrumbs>\n  );\n};\n\nexport default Breadcrumbs;\n","//@ts-nocheck - TODO: remove when Tag type will be fixed in sdk\nimport React, { useState } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { Slider } from \"@escolalms/components/lib/components/atoms/Slider/Slider\";\nimport { CourseCard } from \"@escolalms/components/lib/components/molecules/CourseCard/CourseCard\";\nimport { Badge } from \"@escolalms/components/lib/components/atoms/Badge/Badge\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { IconText } from \"@escolalms/components/lib/components/atoms/IconText/IconText\";\nimport { BreadCrumbs } from \"@escolalms/components/lib/components/atoms/BreadCrumbs/BreadCrumbs\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { isMobile } from \"react-device-detect\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Settings } from \"react-slick\";\nimport { useTranslation } from \"react-i18next\";\nimport { LessonsIcon, UserIcon } from \"../../icons\";\nimport CourseImgPlaceholder from \"../CourseImgPlaceholder\";\nimport { ResponsiveImage } from \"@escolalms/components/lib/components/organisms/ResponsiveImage/ResponsiveImage\";\nimport CourseCardWrapper from \"../CourseCardWrapper\";\n\ntype Props = {\n  courses: API.Course[];\n  sliderSettings: Settings;\n};\n\nconst SliderWrapper = styled.div`\n  @media (max-width: 575px) {\n    margin-left: -50px;\n    .image-section,\n    img {\n      max-height: 180px;\n    }\n  }\n  .slick-slider {\n    @media (max-width: 575px) {\n      width: calc(100% + 15px);\n    }\n  }\n  .single-slide {\n    max-width: calc(100% - 20px);\n    padding-bottom: 20px;\n  }\n  .slick-dots {\n    top: -65px;\n    @media (max-width: 575px) {\n      top: -30px;\n      right: unset;\n      left: 50px;\n    }\n  }\n`;\n\nconst CoursesSlider: React.FC<Props> = ({ courses, sliderSettings }) => {\n  const [dots] = useState(true);\n  const history = useHistory();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  return (\n    <SliderWrapper>\n      <Slider settings={{ ...sliderSettings, dots }} dotsPosition=\"top right\">\n        {courses &&\n          courses.map((item) => (\n            <div key={item.id} className=\"single-slide\">\n              <CourseCardWrapper>\n                <CourseCard\n                  mobile={isMobile}\n                  id={item.id}\n                  image={\n                    <Link to={`/courses/${item.id}`}>\n                      {item.image_path ? (\n                        <ResponsiveImage\n                          path={item.image_path}\n                          alt={item.title}\n                        />\n                      ) : (\n                        <CourseImgPlaceholder />\n                      )}\n                    </Link>\n                  }\n                  tags={\n                    <>\n                      {item.tags?.map((item, index) => (\n                        <Badge key={index} color={theme.primaryColor}>\n                          <Link\n                            style={{ color: theme.white }}\n                            to={`/courses/?tag=${item.title}`}\n                          >\n                            {item.title}\n                          </Link>\n                        </Badge>\n                      ))}\n                    </>\n                  }\n                  subtitle={\n                    item.subtitle ? (\n                      <Text size=\"12\">\n                        <Link\n                          style={{ color: theme.primaryColor }}\n                          to={`/courses/${item.id}`}\n                        >\n                          <strong>{item.subtitle}</strong>\n                        </Link>\n                      </Text>\n                    ) : undefined\n                  }\n                  title={<Link to={`/courses/${item.id}`}>{item.title}</Link>}\n                  categories={\n                    <BreadCrumbs\n                      hyphen=\"/\"\n                      items={item.categories?.map((category) => (\n                        <Link\n                          key={category.id}\n                          to={`/courses/?ids[]=${category.id}`}\n                        >\n                          {category.name}\n                        </Link>\n                      ))}\n                    />\n                  }\n                  actions={\n                    <>\n                      <Button\n                        mode=\"secondary\"\n                        onClick={() => history.push(`/courses/${item.id}`)}\n                      >\n                        {t<string>(\"Start now\")}\n                      </Button>\n                    </>\n                  }\n                  footer={\n                    <>\n                      {item.users_count && item.users_count > 0 ? (\n                        <IconText\n                          icon={<UserIcon />}\n                          text={`${item.users_count} ${t<string>(\"Students\")}`}\n                        />\n                      ) : (\n                        \"\"\n                      )}{\" \"}\n                      {item.lessons_count && item.lessons_count > 0 ? (\n                        <IconText\n                          icon={<LessonsIcon />}\n                          text={`${item.lessons_count} ${t<string>(\"Lessons\")}`}\n                        />\n                      ) : (\n                        \"\"\n                      )}\n                    </>\n                  }\n                />\n              </CourseCardWrapper>\n            </div>\n          ))}\n      </Slider>\n    </SliderWrapper>\n  );\n};\n\nexport default CoursesSlider;\n","import React, { useContext, useEffect, useMemo } from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { IconText, Text, Button, CourseProgress } from \"@escolalms/components\";\nimport isPast from \"date-fns/isPast\";\nimport { PricingCard } from \"@escolalms/components/lib/components/atoms/PricingCard/PricingCard\";\nimport { IconSquares, IconWin, IconCamera } from \"../../../icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { isMobile } from \"react-device-detect\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { useTheme } from \"styled-components\";\n\nconst CoursesDetailsSidebar: React.FC<{ course: API.Course }> = ({\n  course,\n}) => {\n  const theme = useTheme();\n  const { cart, addToCart, progress, user, fetchProgress } =\n    useContext(EscolaLMSContext);\n  const { id } = course;\n  const { t } = useTranslation();\n  const { push } = useHistory();\n  useEffect(() => {\n    user && user.value && fetchProgress();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  const courseInCart = useMemo(() => {\n    return cart?.value?.items.some(\n      (item: any) => Number(item.product_id) === Number(id)\n    );\n  }, [id, cart]);\n\n  const userOwnThisCourse = useMemo(() => {\n    return (\n      progress.value &&\n      progress.value.findIndex(\n        (item: API.CourseProgressItem) => item.course.id === id\n      ) !== -1\n    );\n  }, [progress, id]);\n  // const priceLiteral = useMemo(() => {\n  //   return course.product?.price === 0\n  //     ? t(\"FREE\")\n  //     : `${config?.escolalms_payments?.default_currency} ${(\n  //         (course.product?.price || 0) / 100\n  //       ).toFixed(2)}`;\n  // }, [course, config]);\n  const currentCourse = progress\n    ? progress.value?.filter((item) => item.course.id === id)\n    : [];\n  const progressMap = useMemo(() => {\n    if (user.value && userOwnThisCourse) {\n      const finishedLessons = currentCourse\n        ? currentCourse[0].progress?.filter((item: any) => item.status === 1)\n        : [];\n      return finishedLessons.length;\n    } else {\n      return 0;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [progress]);\n  return !isMobile ? (\n    <PricingCard>\n      <Title level={4} as=\"h4\">\n        {course.title}\n      </Title>\n      <div className=\"pricing-card-price\">\n        <Title level={3} as={\"h3\"}>\n          {course.product?.price || 0} zł\n        </Title>\n        {course.product?.price_old && (\n          <div className=\"pricing-card-discount\">\n            <Title level={5} as={\"h5\"}>\n              {course.product?.price_old} zł\n            </Title>\n          </div>\n        )}\n      </div>\n      {isPast(new Date(course.active_to || \"\")) ? (\n        <Text>{t(\"CoursePage.IsFinished\")}</Text>\n      ) : courseInCart ? (\n        <Button mode=\"secondary\" onClick={() => push(\"/cart\")}>\n          {t(\"CoursePage.GoToCheckout\")}\n        </Button>\n      ) : userOwnThisCourse ? (\n        <>\n          {isPast(new Date(course.active_from || \"\")) ? (\n            <Button\n              onClick={() => push(`/course/${course.id}`)}\n              mode=\"secondary\"\n            >\n              {t(\"Attend to Course\")}\n            </Button>\n          ) : (\n            <Text>{t(\"CoursePage.NotStarted\")}</Text>\n          )}\n        </>\n      ) : user.value && course.product ? (\n        <Button\n          loading={cart.loading}\n          mode=\"secondary\"\n          onClick={() => addToCart(Number(course.id)).then(() => push(\"/cart\"))}\n        >\n          {t(\"Buy Course\")}\n        </Button>\n      ) : !course.product ? (\n        <Text>{t(\"CoursePage.UnavailableCourse\")}</Text>\n      ) : (\n        \"\"\n      )}\n      <Text size={\"12\"}> {t(\"CoursePage.30Days\")}</Text>\n      <div className=\"pricing-card-features\">\n        {course.duration && (\n          <IconText\n            icon={<IconCamera />}\n            text={`Czas trwania: ${course.duration}`}\n          />\n        )}\n        {course.lessons && (\n          <IconText\n            icon={<IconSquares />}\n            text={`Lekcje: ${course.lessons.length}`}\n          />\n        )}\n        {course.language && (\n          <IconText\n            icon={<IconSquares />}\n            text={`Język: ${course.lessons.length}`}\n          />\n        )}\n        {course.level && (\n          <IconText icon={<IconSquares />} text={`Poziom: ${course.level}`} />\n        )}\n        {course.users_count ? (\n          <IconText\n            icon={<IconSquares />}\n            text={`Uczniów: ${course.users_count}`}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n      {!user.value ? (\n        <Text size=\"12\">\n          <Link\n            to={`/login?referrer=/courses/${course.id}`}\n            style={{\n              marginRight: \"4px\",\n              color: theme.primaryColor,\n            }}\n          >\n            {t<string>(\"Zaloguj się\")}\n          </Link>\n          {t(\"CoursePage.ToSeeProgress\")}\n        </Text>\n      ) : (\n        <CourseProgress\n          progress={\n            currentCourse && currentCourse?.length > 0\n              ? (currentCourse[0].progress.length * (progressMap || 0 / 10)) /\n                1000\n              : 0\n          }\n          icon={<IconWin />}\n          title={t(\"CoursePage.MyProgress\")}\n        >\n          <strong style={{ fontSize: 14 }}>\n            {t<string>(\"CoursePage.Finished\")} {progressMap || 0}{\" \"}\n            {t<string>(\"CoursePage.Of\")}{\" \"}\n            {currentCourse && currentCourse?.length > 0\n              ? currentCourse[0].progress.length\n              : 0}{\" \"}\n            {t<string>(\"CoursePage.Lessons\")}\n          </strong>\n          <p style={{ marginTop: 9, marginBottom: 0 }}>\n            {t<string>(\"CoursePage.FinishToGetCertificate\")}\n          </p>\n        </CourseProgress>\n      )}\n    </PricingCard>\n  ) : (\n    <PricingCard mobile>\n      <Title level={5} as={\"h5\"}>\n        {course.title}\n      </Title>\n      <div className=\"pricing-card-footer\">\n        <div>\n          {course.product?.price_old && (\n            <div className=\"pricing-card-discount\">\n              <Title level={5} as={\"h5\"}>\n                {course.product?.price_old} zł\n              </Title>\n            </div>\n          )}\n          <Title level={4} as={\"h4\"}>\n            {course.product?.price} zł\n          </Title>\n        </div>\n        <div>\n          {courseInCart ? (\n            <Button block mode=\"secondary\" onClick={() => push(\"/cart\")}>\n              {t(\"CoursePage.GoToCheckout\")}\n            </Button>\n          ) : userOwnThisCourse ? (\n            <Button block mode=\"secondary\">\n              {t(\"Attend to Course\")}\n            </Button>\n          ) : user.value && course.product ? (\n            <Button\n              block\n              mode=\"secondary\"\n              onClick={() =>\n                addToCart(Number(course.id)).then(() => push(\"/cart\"))\n              }\n            >\n              {t(\"Buy Course\")}\n            </Button>\n          ) : !course.product ? (\n            <Text>{t(\"CoursePage.UnavailableCourse\")}</Text>\n          ) : (\n            <Button\n              onClick={() => push(`/login?referrer=/courses/${course.id}`)}\n              block\n              mode=\"secondary\"\n            >\n              {t(\"Login to buy\")}\n            </Button>\n          )}\n        </div>\n      </div>\n    </PricingCard>\n  );\n};\n\nexport default CoursesDetailsSidebar;\n","import React, { useContext, useMemo } from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { TopicType } from \"@escolalms/sdk/lib/services/courses\";\nimport { OEmbedPlayer } from \"@escolalms/components/lib/components/players/OEmbedPlayer/OEmbedPlayer\";\nimport { AudioVideoPlayer } from \"@escolalms/components/lib/components/players/AudioVideoPlayer/AudioVideoPlayer\";\nimport { PdfPlayer } from \"@escolalms/components/lib/components/players/PdfPlayer/PdfPlayer\";\nimport { MarkdownPlayer } from \"@escolalms/components/lib/components/players/MarkdownPlayer/MarkdownPlayer\";\nimport { ImagePlayer } from \"@escolalms/components/lib/components/players/ImagePlayer/ImagePlayer\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { H5P } from \"@escolalms/components/lib/components/players/H5Player/H5Player\";\n\nexport const CourseProgramPreview: React.FC<{\n  topic: API.Topic;\n}> = ({ topic }) => {\n  const { apiUrl } = useContext(EscolaLMSContext);\n\n  const topicRender = useMemo(() => {\n    if (topic && topic.topicable_type) {\n      switch (topic.topicable_type) {\n        case TopicType.H5P:\n          return <H5P id={topic?.topicable?.value} />;\n        case TopicType.OEmbed:\n          return <OEmbedPlayer url={topic?.topicable?.value} />;\n        case TopicType.RichText:\n          return (\n            <div className=\"container-xl\">\n              <MarkdownPlayer\n                children={topic.topicable.value}\n                onLoad={() => console.log(\"MarkdownPlayer onLoad\")}\n              />\n            </div>\n          );\n        case TopicType.Video:\n        case TopicType.Audio:\n          return <AudioVideoPlayer url={topic.topicable.url} />;\n        case TopicType.Image:\n          return <ImagePlayer topic={topic} onLoad={() => console.log(\"\")} />;\n        case TopicType.Pdf:\n          return <PdfPlayer url={topic.topicable.url} />;\n        case TopicType.Scorm:\n          return (\n            <div className=\"scorm-wrapper\">\n              <iframe\n                title={topic.topicable.value}\n                src={`${apiUrl}/api/scorm/play/${topic.topicable.uuid}`}\n              />\n            </div>\n          );\n        default:\n          return <pre>{topic.topicable_type}</pre>;\n      }\n    }\n    return <React.Fragment />;\n  }, [topic, apiUrl]);\n\n  return (\n    <div className=\"topic-preview-modal\">\n      <div className=\"topic-preview-modal-content\">{topicRender}</div>\n    </div>\n  );\n};\n\nexport default CourseProgramPreview;\n"],"sourceRoot":""}