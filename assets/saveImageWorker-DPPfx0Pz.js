(function(){"use strict";const p=async(c,i,l=3,u=2e3)=>new Promise((d,n)=>{const a=async s=>{try{const e=await fetch(c,i);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);d(e)}catch(e){console.error(`Fetch attempt ${s+1} failed:`,e),s<l-1?setTimeout(()=>a(s+1),u):n(`Retries exhausted. Last error: ${e}`)}};a(0)});self.onmessage=async c=>{const{consultationId:i,consultationTermId:l,userEmail:u,userId:d,screenshots:n,term:a}=c.data;try{const s=n.map(t=>({filename:`${t.timestamp}.webp`})),e=await p("https://demo-stage.api.s.wellms.io/api/consultations/signed-screen-urls",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({consultation_id:i,user_termin_id:l,user_id:d,user_email:u,files:s,executed_at:a})});if(!e.ok)throw new Error(`Failed to sign URLs: ${e.statusText}`);const f=await e.json();for(let t=0;t<f.data.length;t++){const{url:w,filename:o}=f.data[t],m=n.find(r=>`${r.timestamp}.webp`===o);if(!m){console.warn(`Screenshot not found for filename: ${o}`);continue}try{const r=new Blob([m.dataURL]),h=await fetch(w,{method:"PUT",body:r});h.ok?console.log(`File ${o} uploaded successfully.`):console.error(`Failed to upload ${o}: ${h.statusText}`)}catch(r){console.error(`Error uploading ${o}:`,r)}}self.postMessage({success:!0})}catch(s){self.postMessage({success:!1,error:s instanceof Error?s.message:"Unknown error"})}}})();
//# sourceMappingURL=saveImageWorker-DPPfx0Pz.js.map
