{"version":3,"file":"index-BQIe-9Xz.js","sources":["../../src/components/Common/Pagination/index.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledPagination = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  a {\n    text-decoration: none !important;\n  }\n  .arrow {\n    width: 10px;\n    height: 10px;\n    border-left: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ${({ theme }) => theme.primaryColor};\n    margin: 0 10px;\n    &--left {\n      transform: rotate(45deg);\n    }\n    &--right {\n      transform: rotate(-135deg);\n    }\n  }\n  .number {\n    margin: 0 8px;\n    p {\n      opacity: 0.5;\n      &.current {\n        color: ${({ theme }) => theme.black}!important;\n\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from: number, to: number, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nconst Pagination: React.FC<{\n  currentPage: number;\n  total: number;\n  perPage: number;\n  onPage: (page: number) => void;\n  pageNeighbours?: number;\n}> = ({ currentPage, total, perPage, onPage, pageNeighbours = 2 }) => {\n  const lastPage = Math.ceil(total / perPage);\n\n  const fetchPageNumbers = () => {\n    /**\n     * totalNumbers: the total page numbers to show on the control\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n     */\n    const totalNumbers = pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (lastPage > totalBlocks) {\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(lastPage - 1, currentPage + pageNeighbours);\n      let pages: (string | number)[] = range(startPage, endPage);\n\n      /**\n       * hasLeftSpill: has hidden pages to the left\n       * hasRightSpill: has hidden pages to the right\n       * spillOffset: number of hidden pages either to the left or to the right\n       */\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = lastPage - endPage > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case hasLeftSpill && !hasRightSpill: {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (10)\n        case !hasLeftSpill && hasRightSpill: {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n        case hasLeftSpill && hasRightSpill:\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, lastPage];\n    } else if (currentPage < lastPage && currentPage === 1) {\n      return [...range(1, lastPage), RIGHT_PAGE];\n    } else if (currentPage > 1 && currentPage !== lastPage) {\n      return [LEFT_PAGE, ...range(1, lastPage), RIGHT_PAGE];\n    } else if (currentPage > 1 && currentPage === lastPage) {\n      return [LEFT_PAGE, ...range(1, lastPage)];\n    }\n\n    return range(1, lastPage);\n  };\n\n  return (\n    <StyledPagination>\n      {fetchPageNumbers().map((page) => {\n        if (page === LEFT_PAGE) {\n          return (\n            <a\n              href=\"#!prev_page\"\n              className=\"prev page-numbers\"\n              onClick={(e) => {\n                e.preventDefault();\n                onPage(currentPage <= 1 ? 1 : currentPage - 1);\n              }}\n            >\n              <div className=\"arrow arrow--left\" />\n            </a>\n          );\n        }\n        if (page === RIGHT_PAGE) {\n          return (\n            <a\n              href=\"#!next_page\"\n              className=\"next page-numbers\"\n              onClick={(e) => {\n                e.preventDefault();\n                onPage(currentPage === lastPage ? lastPage : currentPage + 1);\n              }}\n            >\n              <div className=\"arrow arrow--right\" />\n            </a>\n          );\n        }\n        return (\n          <Link\n            onClick={(e) => {\n              e.preventDefault();\n              onPage(Number(page));\n            }}\n            to={`#!page-${Number(page)}`}\n            key={`#${Number(page)}`}\n            className=\"number\"\n          >\n            <Text\n              className={Number(page) === currentPage ? \"current\" : \"\"}\n              size=\"16\"\n              aria-current=\"page\"\n            >\n              {Number(page)}\n            </Text>\n          </Link>\n        );\n      })}\n    </StyledPagination>\n  );\n};\n\nexport default Pagination;\n"],"names":["StyledPagination","styled","theme","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","Pagination","currentPage","total","perPage","onPage","pageNeighbours","lastPage","fetchPageNumbers","totalNumbers","totalBlocks","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","page","jsx","e","Link","Text"],"mappings":"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"}