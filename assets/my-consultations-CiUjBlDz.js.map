{"version":3,"file":"my-consultations-CiUjBlDz.js","sources":["../../src/components/Profile/ProfileConsultations/index.tsx","../../src/components/Consultations/ConsultationTutorCard/ConsultationTutorCardStyles.tsx","../../src/components/Consultations/ConsultationTutorCard/Image/index.tsx","../../src/components/Common/Status/index.tsx","../../src/components/Consultations/ConsultationTutorCard/Content/UserInfo/index.tsx","../../src/components/Consultations/ConsultationTutorCard/Content/DateInfo/index.tsx","../../src/components/Common/TimeInfo/index.tsx","../../src/components/Consultations/ConsultationTutorCard/Content/index.tsx","../../src/components/Consultations/ConsultationTutorCard/Actions/index.tsx","../../src/components/Consultations/ConsultationTutorCard/Status/index.tsx","../../src/components/Consultations/ConsultationTutorCard/index.tsx","../../src/components/Profile/ProfileTutorConsultations/index.tsx","../../src/components/Consultations/ConsultationCard/MeetModal/MeetModalStyles.tsx","../../node_modules/@jitsi/react-sdk/lib/constants/index.js","../../node_modules/@jitsi/react-sdk/lib/init.js","../../node_modules/@jitsi/react-sdk/lib/utils/index.js","../../node_modules/@jitsi/react-sdk/lib/components/JitsiMeeting.js","../../node_modules/@jitsi/react-sdk/lib/components/JaaSMeeting.js","../../src/hooks/meeting/useCamera.ts","../../src/utils/meeting.ts","../../src/components/Consultations/ConsultationCard/JitsyMeeting/Message/index.tsx","../../src/components/Consultations/ConsultationCard/JitsyMeeting/index.tsx","../../src/components/Consultations/ConsultationCard/EndMeetingQuestionnaires/index.tsx","../../src/components/Consultations/ConsultationCard/MeetModal/index.tsx","../../src/pages/user/my-consultations.tsx"],"sourcesContent":["import {\n  memo,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n  useCallback,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { isMobile } from \"react-device-detect\";\nimport { Col, Row } from \"react-grid-system\";\nimport { ConsultationStatus } from \"../../../pages/user/my-consultations\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport ConsultationCard from \"@/components/Consultations/ConsultationCard\";\nimport ProfileConsultationsProvider from \"./ProfileConsultationsProvider\";\nimport { CourseCardSkeleton } from \"@/components/Skeletons/CourseCard\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { API_URL } from \"@/config/index\";\ninterface ProfileConsultationsProps {\n  type: ConsultationStatus;\n}\n\nconst ProfileConsultations = ({ type }: ProfileConsultationsProps) => {\n  const { userConsultations, fetchUserConsultations, token } =\n    useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n  const [consultationsData, setConsultationsData] = useState<\n    API.Consultation[]\n  >([]);\n\n  const filterConstulations = useMemo(() => {\n    const filtered =\n      userConsultations.list?.data.filter((consultation) =>\n        type === ConsultationStatus.STARTED ||\n        type === ConsultationStatus.UPCOMING\n          ? consultation.in_coming || consultation.is_started\n          : consultation.is_ended\n      ) || [];\n    const uniqueConsultations = Array.from(\n      new Map(filtered.map((item) => [item.id, item])).values()\n    );\n\n    return uniqueConsultations;\n  }, [type, userConsultations.list?.data]);\n\n  const refreshConsultation = useCallback(\n    async (id: number, termId: number) => {\n      try {\n        const request = await fetch(\n          `${API_URL}/api/consultations/me?ids[]=${id}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        const response = await request.json();\n\n        if (response.success && response.data.length > 0) {\n          const responseIndex = response.data.findIndex(\n            (consultation: API.AppointmentTerm) =>\n              consultation?.consultation_term_id === termId\n          );\n          setConsultationsData((prev) => {\n            const index = prev.findIndex(\n              (consultation) => consultation?.consultation_term_id === termId\n            );\n\n            if (index !== -1 && responseIndex !== -1) {\n              prev[index] = response.data[responseIndex];\n            }\n\n            return [...prev];\n          });\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [token]\n  );\n\n  const handleRefreshIfTimePassed = useCallback(() => {\n    consultationsData.forEach((consultation) => {\n      if (!consultation.is_started && !consultation.is_ended) {\n        // @ts-ignore\n        if (consultation?.consultation_term_id !== undefined) {\n          refreshConsultation(\n            consultation?.id,\n            consultation?.consultation_term_id\n          );\n        }\n      }\n    });\n  }, [consultationsData, refreshConsultation]);\n\n  useEffect(() => {\n    fetchUserConsultations();\n  }, [type, fetchUserConsultations]);\n\n  useEffect(() => {\n    setConsultationsData([]);\n    setConsultationsData(filterConstulations);\n    const interval = setInterval(() => {\n      handleRefreshIfTimePassed();\n    }, 30000);\n\n    return () => {\n      setConsultationsData([]);\n      clearInterval(interval);\n    };\n  }, [type, filterConstulations, handleRefreshIfTimePassed]);\n\n  return (\n    <ProfileConsultationsProvider>\n      <Row\n        style={{\n          gap: \"30px 0\",\n        }}\n      >\n        {userConsultations.loading ? (\n          Array.from({ length: 8 }).map((_, index) => (\n            <Col md={3} key={`skeleton-card-${index}`}>\n              <CourseCardSkeleton />\n            </Col>\n          ))\n        ) : consultationsData.length === 0 ? (\n          <Text style={{ paddingLeft: isMobile ? 20 : 40 }}>\n            {t<string>(\"MyProfilePage.OrdersEmpty\")}\n          </Text>\n        ) : (\n          <>\n            {consultationsData.map((consultation) => (\n              <Col key={consultation.id} xs={12} md={6} lg={3}>\n                <ConsultationCard consultation={consultation} />\n              </Col>\n            ))}\n          </>\n        )}\n      </Row>\n    </ProfileConsultationsProvider>\n  );\n};\n\nexport default memo(ProfileConsultations);\n","import styled from \"styled-components\";\n\nexport const ConsultationTutorCardStyles = styled.div`\n  .course-section {\n    margin-top: 0px;\n  }\n\n  .course-card-buttons-group {\n    margin: 0;\n    width: 100%;\n\n    button {\n      width: 100%;\n      margin: 0;\n    }\n  }\n\n  p {\n    font-family: ${({ theme }) => theme.font};\n  }\n`;\n","import { Link } from \"react-router-dom\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ResponsiveImage from \"@escolalms/components/lib/components/organisms/ResponsiveImage/ResponsiveImage\";\nimport CourseImgPlaceholder from \"../../../Courses/CourseImgPlaceholder\";\n\ninterface Props {\n  product: API.AppointmentTerm | undefined;\n}\n\nconst ConsultationTutorCardImage = ({ product }: Props) => {\n  if (!product) return null;\n\n  return (\n    <Link to={`/consultations/${product?.consultation_term_id}`}>\n      {/* @ts-ignore TODO:add to sdk */}\n      {product?.consultation_media &&\n      // @ts-ignore TODO:add to sdk\n      product?.consultation_media?.image_path ? (\n        <ResponsiveImage\n          //   @ts-ignore TODO:add to sdk\n          path={product.consultation_media.image_path}\n          //   @ts-ignore TODO:add to sdk\n          alt={product.name}\n          srcSizes={[300, 600, 900]}\n        />\n      ) : (\n        <CourseImgPlaceholder />\n      )}\n    </Link>\n  );\n};\n\nexport default ConsultationTutorCardImage;\n","import { useMemo } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nconst StatusStyles = styled.div`\n  display: flex;\n  align-items: center;\n  user-select: none;\n\n  .status {\n    display: block;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n  }\n\n  .name {\n    padding: 0.5rem;\n    font-family: ${({ theme }) => theme.font};\n  }\n`;\n\nexport enum StatusTypes {\n  \"ACCEPTED\",\n  \"WAITING\",\n  \"ENDED\",\n  \"CANCELED\",\n  \"DEFAULT\",\n}\n\ninterface Props {\n  status: StatusTypes;\n  name: string;\n}\n\nconst Status = ({ status, name }: Props) => {\n  const theme = useTheme();\n  const color = useMemo(() => {\n    switch (status) {\n      case StatusTypes.ACCEPTED:\n        return \"#198754\";\n      case StatusTypes.WAITING:\n        return \"#FFC300\";\n      case StatusTypes.ENDED:\n      case StatusTypes.CANCELED:\n        return \"#D22B2B\";\n      default:\n        return theme.primaryColor;\n    }\n  }, [theme.primaryColor, status]);\n\n  return (\n    <StatusStyles>\n      <div\n        className=\"status\"\n        style={{\n          backgroundColor: color,\n        }}\n      />\n      <div className=\"name\">{name}</div>\n    </StatusStyles>\n  );\n};\n\nexport default Status;\n","import styled from \"styled-components\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { IconCircleError, IconSuccess } from \"@/icons/index\";\nimport IconText from \"@escolalms/components/lib/components/atoms/IconText/IconText\";\nimport { useContext } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { useTranslation } from \"react-i18next\";\nimport Status, { StatusTypes } from \"@/components/Common/Status\";\n\nconst ConsultationTutorCardContentUserInfoStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-height: 65px;\n  margin-bottom: 5px;\n  .text {\n    margin: 0;\n    font-size: 14px;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0px;\n  > p {\n    padding: 2px;\n    border-radius: ${({ theme }) => theme.radius};\n    cursor: pointer;\n\n    &:hover {\n      font-weight: bold;\n    }\n  }\n`;\n\ninterface Props {\n  consultation: API.AppointmentTerm;\n}\n\nconst statuses = {\n  reported: {\n    type: StatusTypes.WAITING,\n    info: \"ConsultationStatus.UnconfirmedInfo\",\n  },\n  approved: {\n    type: StatusTypes.ACCEPTED,\n    info: \"ConsultationStatus.ConfirmedInfo\",\n  },\n  reject: {\n    type: StatusTypes.ENDED,\n    info: \"ConsultationStatus.RejectedInfo\",\n  },\n};\ntype StatusKey = keyof typeof statuses;\n\nconst ConsultationTutorCardContentUserInfo = ({ consultation }: Props) => {\n  const { approveConsultationTerm, rejectConsultationTerm } =\n    useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n\n  const renderStatus = (status: StatusKey) => {\n    switch (status) {\n      case \"reported\":\n        return (\n          <Status\n            status={StatusTypes.WAITING}\n            name={t(\"ConsultationStatus.Unconfirmed\")}\n          />\n        );\n      case \"approved\":\n        return (\n          <Status\n            status={StatusTypes.ACCEPTED}\n            name={t(\"ConsultationStatus.Appointment\")}\n          />\n        );\n      case \"reject\":\n        return (\n          <Status\n            status={StatusTypes.ENDED}\n            name={t(\"ConsultationStatus.Canceled\")}\n          />\n        );\n    }\n  };\n\n  return (\n    <ConsultationTutorCardContentUserInfoStyles>\n      {consultation.users.map((user) => (\n        <div key={user.id}>\n          <Text className=\"text\">\n            {user.first_name} {user.last_name}\n          </Text>\n          <Text className=\"text\">{user.email}</Text>\n          {consultation.users.length > 1 && (\n            <>\n              {statuses[user.executed_status as StatusKey] &&\n                renderStatus(user.executed_status as StatusKey)}\n              {\n                <ButtonWrapper>\n                  <IconText\n                    icon={<IconSuccess />}\n                    text={t(\"Confirm\")}\n                    onClick={() =>\n                      approveConsultationTerm(\n                        consultation?.consultation_term_id,\n                        consultation.date,\n                        user.id\n                      )\n                    }\n                  />\n                  <IconText\n                    icon={<IconCircleError />}\n                    text={t(\"Cancel\")}\n                    onClick={() =>\n                      rejectConsultationTerm(\n                        consultation?.consultation_term_id,\n                        consultation.date,\n                        user.id\n                      )\n                    }\n                  />\n                </ButtonWrapper>\n              }\n            </>\n          )}\n\n          <hr />\n        </div>\n      ))}\n    </ConsultationTutorCardContentUserInfoStyles>\n  );\n};\n\nexport default ConsultationTutorCardContentUserInfo;\n","import { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { addTimeToDate, extractTimeUnits, formatDate } from \"@/utils/date\";\nimport DateInfo, { DateInfoTypes } from \"@/components/Common/DateInfo\";\nimport ConsultationCardJoinButton from \"@/components/Consultations/ConsultationCard/Buttons/JoinButton\";\n\nconst ConsultationTutorCardContentDateInfoButtonsStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 100%;\n  gap: 12px;\n`;\n\ninterface Props {\n  consultation: API.AppointmentTerm;\n}\n\nconst ConsultationTutorCardContentDateInfo = ({ consultation }: Props) => {\n  const { t } = useTranslation();\n  const isEnded = consultation.is_ended;\n  const isStarted = consultation.is_started;\n  const isReported = consultation.status === \"reported\";\n  const isApproved = consultation.status === \"approved\";\n  const isNotReported = consultation.status === \"not_reported\";\n  const isRejected = consultation.status === \"reject\";\n\n  return (\n    <>\n      {isEnded && consultation.date && (\n        <DateInfo\n          type={DateInfoTypes.ENDED}\n          date={addTimeToDate(\n            consultation.date,\n            extractTimeUnits(`${consultation.duration}`)\n          )}\n        />\n      )}\n      {isRejected && (\n        <DateInfo\n          type={DateInfoTypes.ENDED}\n          date={addTimeToDate(\n            consultation.date,\n            extractTimeUnits(`${consultation.duration}`)\n          )}\n        />\n      )}\n      {isReported && !isEnded && (\n        <DateInfo\n          type={DateInfoTypes.WAITING}\n          date={consultation.date}\n          info={t(\"ConsultationStatus.UnconfirmedInfo\")}\n        />\n      )}\n      {isApproved && !isEnded && (\n        <DateInfo\n          type={DateInfoTypes.ACCEPTED}\n          date={consultation.date}\n          info={\n            isStarted && consultation?.consultation_term_id ? (\n              <ConsultationTutorCardContentDateInfoButtonsStyles>\n                <ConsultationCardJoinButton\n                  consultationTermId={consultation?.consultation_term_id}\n                  // @ts-ignore\n                  consultationId={consultation?.consultation_id}\n                  term={consultation.date}\n                />\n              </ConsultationTutorCardContentDateInfoButtonsStyles>\n            ) : (\n              t(\"ConsultationStatus.AppointmentInfo\", {\n                date: formatDate(\n                  consultation.date,\n                  \"EEEE, dd LLLL yyyy, HH:mm\"\n                ),\n              })\n            )\n          }\n        />\n      )}\n      {isNotReported && <DateInfo type={DateInfoTypes.DEFAULT} />}\n    </>\n  );\n};\n\nexport default ConsultationTutorCardContentDateInfo;\n","import styled from \"styled-components\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { IconTime } from \"../../../icons\";\n\nconst TimeInfoStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  border: 1px solid ${({ theme }) => theme.primaryColor};\n  border-radius: 2px;\n  align-items: center;\n  border-radius: ${({ theme }) => theme.cardRadius}px;\n  .icon-container {\n    display: flex;\n    align-items: center;\n    padding: 0.6rem;\n    background-color: ${({ theme }) => theme.primaryColor};\n    border-top-left-radius: ${({ theme }) => (theme.cardRadius ?? 2) - 2}px;\n    border-bottom-left-radius: ${({ theme }) => (theme.cardRadius ?? 2) - 2}px;\n  }\n\n  .time {\n    padding: 0.5rem;\n    margin: 0 auto;\n  }\n`;\n\ninterface TimeInfoProps {\n  time: string;\n}\n\nconst TimeInfo = ({ time }: TimeInfoProps) => {\n  return (\n    <TimeInfoStyles>\n      <div className=\"icon-container\">\n        <IconTime color=\"#ffffff\" width=\"22px\" height=\"22px\" />\n      </div>\n      <Text className=\"time\">{time}</Text>\n    </TimeInfoStyles>\n  );\n};\n\nexport default TimeInfo;\n","import styled from \"styled-components\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ConsultationTutorCardContentUserInfo from \"./UserInfo\";\nimport ConsultationTutorCardContentDateInfo from \"./DateInfo\";\nimport TimeInfo from \"@/components/Common/TimeInfo\";\n\nconst ConsultationTutorCardContentStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 12px;\n`;\n\ninterface Props {\n  consultation: API.AppointmentTerm;\n}\n\nconst ConsultationTutorCardContent = ({ consultation }: Props) => {\n  return (\n    <ConsultationTutorCardContentStyles>\n      <ConsultationTutorCardContentUserInfo consultation={consultation} />\n      <TimeInfo time={consultation.duration} />\n      <ConsultationTutorCardContentDateInfo consultation={consultation} />\n    </ConsultationTutorCardContentStyles>\n  );\n};\n\nexport default ConsultationTutorCardContent;\n","import { useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport IconText from \"@escolalms/components/lib/components/atoms/IconText/IconText\";\nimport { IconCircleError, IconMenuVertical, IconSuccess } from \"@/icons/index\";\nimport DropdownMenu from \"@escolalms/components/lib/components/molecules/DropdownMenu/DropdownMenu\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\n\ninterface Props {\n  consultation: API.AppointmentTerm;\n}\n\nconst ConsultationTutorCardButtons = ({ consultation }: Props) => {\n  const { approveConsultationTerm, rejectConsultationTerm } =\n    useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n\n  const menuItems = useMemo(\n    () => [\n      {\n        id: 1,\n        content: (\n          <IconText\n            icon={<IconSuccess />}\n            text={t(\"Confirm\")}\n            onClick={() =>\n              approveConsultationTerm(\n                consultation?.consultation_term_id,\n                consultation.date\n              )\n            }\n          />\n        ),\n      },\n      {\n        id: 2,\n        content: (\n          <IconText\n            icon={<IconCircleError />}\n            text={t(\"Cancel\")}\n            onClick={() =>\n              rejectConsultationTerm(\n                consultation?.consultation_term_id,\n                consultation.date\n              )\n            }\n          />\n        ),\n      },\n    ],\n    [\n      approveConsultationTerm,\n      consultation?.consultation_term_id,\n      rejectConsultationTerm,\n      t,\n      consultation.date,\n    ]\n  );\n\n  return (\n    <DropdownMenu\n      menuItems={menuItems}\n      child={\n        <Button mode=\"icon\">\n          <IconMenuVertical />\n        </Button>\n      }\n    />\n  );\n};\n\nexport default ConsultationTutorCardButtons;\n","import { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport Status, { StatusTypes } from \"@/components/Common/Status\";\nimport ConsultationTutorCardButtons from \"../Actions\";\n\nconst ConsultationTutorCardStatusStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  button > svg {\n    width: 24px;\n    height: 25px;\n  }\n`;\n\ninterface Props {\n  consultation: API.AppointmentTerm;\n}\n\nconst ConsultationTutorCardStatus = ({ consultation }: Props) => {\n  const { status, is_ended } = consultation;\n  const { t } = useTranslation();\n  const isReported = status === \"reported\";\n  const isApproved = status === \"approved\";\n  const isRejected = status === \"reject\";\n\n  if (isRejected) {\n    return (\n      <Status\n        status={StatusTypes.CANCELED}\n        name={t(\"ConsultationStatus.Canceled\")}\n      />\n    );\n  }\n  if (is_ended) {\n    return (\n      <Status status={StatusTypes.ENDED} name={t(\"ConsultationStatus.Ended\")} />\n    );\n  }\n  if (isReported) {\n    return (\n      <ConsultationTutorCardStatusStyles>\n        <Status\n          status={StatusTypes.WAITING}\n          name={t(\"ConsultationStatus.Unconfirmed\")}\n        />\n\n        <ConsultationTutorCardButtons consultation={consultation} />\n      </ConsultationTutorCardStatusStyles>\n    );\n  }\n  if (isApproved) {\n    return (\n      <Status\n        status={StatusTypes.ACCEPTED}\n        name={t(\"ConsultationStatus.Appointment\")}\n      />\n    );\n  }\n  return <Status status={StatusTypes.DEFAULT} name={status} />;\n};\n\nexport default ConsultationTutorCardStatus;\n\n// ConsultationStatus: {\n//   Unconfirmed: \"Unconfirmed\",\n//   Bought: \"Bought\",\n//   Canceled: \"Canceled\",\n//   Appointment: \"Appointment\",\n// }\n","import React from \"react\";\nimport { CourseCard } from \"@escolalms/components/lib/components/molecules/CourseCard/CourseCard\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { ConsultationTutorCardStyles } from \"./ConsultationTutorCardStyles\";\nimport ConsultationTutorCardImage from \"./Image\";\nimport ConsultationTutorCardContent from \"./Content\";\nimport ConsultationTutorCardStatus from \"./Status\";\n\ninterface ConsultationTutorCardProps {\n  consultation: API.AppointmentTerm;\n}\n\nconst ConsultationTutorCard: React.FC<ConsultationTutorCardProps> = (props) => {\n  const { consultation } = props;\n\n  return (\n    <ConsultationTutorCardStyles>\n      <CourseCard\n        id={consultation?.consultation_term_id}\n        image={<ConsultationTutorCardImage product={consultation} />}\n        title={<ConsultationTutorCardStatus consultation={consultation} />}\n        subtitle={<p>{consultation?.related_product?.name}</p>}\n        footer={<ConsultationTutorCardContent consultation={consultation} />}\n      />\n    </ConsultationTutorCardStyles>\n  );\n};\n\nexport default ConsultationTutorCard;\n","import {\n  memo,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n  useCallback,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { isMobile } from \"react-device-detect\";\nimport { Col, Row } from \"react-grid-system\";\nimport { ConsultationStatus } from \"../../../pages/user/my-consultations\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport ConsultationTutorCard from \"@/components/Consultations/ConsultationTutorCard\";\nimport { CourseCardSkeleton } from \"@/components/Skeletons/CourseCard\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { API_URL } from \"@/config/index\";\ninterface ProfileTutorConsultationsProps {\n  type: ConsultationStatus;\n}\n\nconst ProfileTutorConsultations = ({\n  type,\n}: ProfileTutorConsultationsProps) => {\n  const { tutorConsultations, fetchTutorConsultations, token } =\n    useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n  const [consultationsData, setConsultationsData] = useState<\n    API.AppointmentTerm[]\n  >([]);\n\n  const filterConstulations = useMemo(\n    () =>\n      tutorConsultations.list?.data.filter((consultation) =>\n        type === ConsultationStatus.STARTED ||\n        type === ConsultationStatus.UPCOMING\n          ? consultation.in_coming || consultation.is_started\n          : consultation.is_ended\n      ) || [],\n    [type, tutorConsultations.list?.data]\n  );\n\n  const refreshConsultation = useCallback(\n    async (id: number, termId: number) => {\n      try {\n        const request = await fetch(\n          `${API_URL}/api/consultations/my-schedule?ids[]=${id}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        const response = await request.json();\n\n        if (response.success && response.data.length > 0) {\n          const responseIndex = response.data.findIndex(\n            (consultation: API.AppointmentTerm) =>\n              consultation?.consultation_term_id === termId\n          );\n          setConsultationsData((prev) => {\n            const index = prev.findIndex(\n              (consultation: API.AppointmentTerm) =>\n                consultation?.consultation_term_id === termId\n            );\n\n            if (index !== -1 && responseIndex !== -1) {\n              prev[index] = response.data[responseIndex];\n            }\n\n            return [...prev];\n          });\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [token]\n  );\n\n  const handleRefreshIfTimePassed = useCallback(() => {\n    consultationsData.forEach((consultation) => {\n      if (!consultation.is_started && !consultation.is_ended) {\n        refreshConsultation(\n          // @ts-ignore\n          consultation?.consultation_id,\n          consultation.consultation_term_id\n        );\n      }\n    });\n  }, [consultationsData, refreshConsultation]);\n\n  useEffect(() => {\n    fetchTutorConsultations();\n  }, [fetchTutorConsultations]);\n\n  useEffect(() => {\n    setConsultationsData([]);\n    setConsultationsData(filterConstulations);\n    const interval = setInterval(() => {\n      handleRefreshIfTimePassed();\n    }, 30000);\n    return () => {\n      setConsultationsData([]);\n      clearInterval(interval);\n    };\n  }, [type, filterConstulations, handleRefreshIfTimePassed]);\n\n  return (\n    <>\n      <Row\n        style={{\n          gap: \"30px 0\",\n        }}\n      >\n        {tutorConsultations.loading ? (\n          Array.from({ length: 8 }).map((_, index) => (\n            <Col md={3} key={`skeleton-card-${index}`}>\n              <CourseCardSkeleton />\n            </Col>\n          ))\n        ) : consultationsData.length === 0 ? (\n          <Text style={{ paddingLeft: isMobile ? 20 : 40 }}>\n            {t<string>(\"MyProfilePage.OrdersEmpty\")}\n          </Text>\n        ) : (\n          <>\n            {\" \"}\n            {consultationsData.map((consultation) => (\n              <Col\n                key={consultation.consultation_term_id}\n                xs={12}\n                md={6}\n                lg={3}\n              >\n                <ConsultationTutorCard consultation={consultation} />\n              </Col>\n            ))}\n          </>\n        )}\n      </Row>\n    </>\n  );\n};\n\nexport default memo(ProfileTutorConsultations);\n","import styled from \"styled-components\";\n\nexport const ConsultationMeetModalStyles = styled.div`\n  iframe {\n    width: 100% !important;\n    height: calc(100vh - 76px);\n    border: none;\n  }\n`;\n","export const DEFAULT_DOMAIN = 'meet.jit.si';\nexport const JAAS_STAGING_DOMAIN = 'stage.8x8.vc';\nexport const JAAS_PROD_DOMAIN = '8x8.vc';\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_DOMAIN } from './constants';\nconst loadExternalApi = (domain, release, appId) => __awaiter(void 0, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n        if (window.JitsiMeetExternalAPI) {\n            return resolve(window.JitsiMeetExternalAPI);\n        }\n        const script = document.createElement('script');\n        const releaseParam = release ? `?release=${release}` : '';\n        const appIdPath = appId ? `${appId}/` : '';\n        script.async = true;\n        script.src = `https://${domain}/${appIdPath}external_api.js${releaseParam}`;\n        script.onload = () => resolve(window.JitsiMeetExternalAPI);\n        script.onerror = () => reject(new Error(`Script load error: ${script.src}`));\n        document.head.appendChild(script);\n    });\n});\nlet scriptPromise;\n/**\n * Injects the external_api.js script for the corresponding domain in DOM\n * and resolves with either the `JitsiMeetExternalApi` class definition or an error.\n *\n * Only the first script will be injected, therefore avoid using multiple instances\n * with mixed domains and release version at the same time.\n *\n * @param {string} domain - The domain of the external API\n * @param {string} release - The Jitsi Meet release. Expected format: 'release-1234'\n * @param {string} appId - The tenant for JaaS Meetings\n * @returns {Promise<JitsiMeetExternalApi>} - The JitsiMeetExternalAPI or an error\n */\nexport const fetchExternalApi = (domain = DEFAULT_DOMAIN, release, appId) => {\n    if (scriptPromise) {\n        return scriptPromise;\n    }\n    scriptPromise = loadExternalApi(domain, release, appId);\n    return scriptPromise;\n};\n","import { JAAS_PROD_DOMAIN, JAAS_STAGING_DOMAIN } from '../constants';\n/**\n * Returns the complete room name\n *\n * @param {string} roomName\n * @param {string} tenant\n * @returns {string} the complete room name\n */\nexport const getRoomName = (roomName, tenant) => {\n    if (tenant) {\n        return `${tenant}/${roomName}`;\n    }\n    return roomName;\n};\n/**\n * Returns the appId or tenant value\n *\n * @param {string} roomName\n * @returns {string|undefined}\n */\nexport const getAppId = (roomName) => {\n    const roomParts = roomName.split('/');\n    if (roomParts.length <= 1) {\n        return;\n    }\n    return roomParts[0];\n};\n/**\n * Returns the JaaS domain\n *\n * @param {boolean|undefined} useStaging\n * @returns {string} the JaaS domain\n */\nexport const getJaaSDomain = (useStaging) => {\n    if (useStaging) {\n        return JAAS_STAGING_DOMAIN;\n    }\n    return JAAS_PROD_DOMAIN;\n};\nlet instancesCounter = 0;\n/**\n * Generates an unique id\n * @param {string} prefix\n * @returns {string} the component id\n */\nexport const generateComponentId = (prefix) => `${prefix}-${instancesCounter++}`;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { DEFAULT_DOMAIN } from '../constants';\nimport { fetchExternalApi } from '../init';\nimport { generateComponentId, getAppId } from '../utils';\n/**\n * Returns the JitsiMeeting Component with access to a custom External API\n * to be used as-it-is in React projects\n *\n * @param {IJitsiMeetingProps} props the component's props\n * @returns {ReactElement} the `JitsiMeeting` Component\n * @example\n  ```js\n    <JitsiMeeting\n        domain='meet.jit.si'\n        roomName: 'TestingJitsiMeetingComponent'\n        spinner={CustomSpinner}\n        onApiReady={(externalApi) => console.log(externalApi)}\n    />\n  ```\n */\nconst JitsiMeeting = ({ domain = DEFAULT_DOMAIN, roomName, configOverwrite, interfaceConfigOverwrite, jwt, invitees, devices, userInfo, release, lang, spinner: Spinner, onApiReady, onReadyToClose, getIFrameRef }) => {\n    const [loading, setLoading] = useState(true);\n    const [apiLoaded, setApiLoaded] = useState(false);\n    const externalApi = useRef();\n    const apiRef = useRef();\n    const meetingRef = useRef(null);\n    const componentId = useMemo(() => generateComponentId('jitsiMeeting'), [generateComponentId]);\n    useEffect(() => {\n        fetchExternalApi(domain, release, getAppId(roomName))\n            .then((api) => {\n            externalApi.current = api;\n            setApiLoaded(true);\n        })\n            .catch((e) => console.error(e.message));\n    }, []);\n    const loadIFrame = useCallback((JitsiMeetExternalAPI) => {\n        apiRef.current = new JitsiMeetExternalAPI(domain, {\n            roomName,\n            configOverwrite,\n            interfaceConfigOverwrite,\n            jwt,\n            invitees,\n            devices,\n            userInfo,\n            release,\n            lang,\n            parentNode: meetingRef.current\n        });\n        setLoading(false);\n        if (apiRef.current) {\n            typeof onApiReady === 'function' && onApiReady(apiRef.current);\n            apiRef.current.on('readyToClose', () => {\n                typeof onReadyToClose === 'function' && onReadyToClose();\n            });\n            if (meetingRef.current && typeof getIFrameRef === 'function') {\n                getIFrameRef(meetingRef.current);\n            }\n        }\n    }, [\n        apiRef,\n        meetingRef,\n        onApiReady,\n        onReadyToClose,\n        getIFrameRef,\n        domain,\n        roomName,\n        configOverwrite,\n        interfaceConfigOverwrite,\n        jwt,\n        invitees,\n        devices,\n        userInfo,\n        release,\n        lang\n    ]);\n    useEffect(() => {\n        if (apiLoaded && !apiRef.current) {\n            if (externalApi.current) {\n                loadIFrame(externalApi.current);\n            }\n        }\n    }, [apiLoaded, loadIFrame]);\n    const renderLoadingSpinner = useCallback(() => {\n        if (!Spinner) {\n            return null;\n        }\n        if (!loading || apiRef.current) {\n            return null;\n        }\n        return _jsx(Spinner, {}, void 0);\n    }, [Spinner, apiRef.current]);\n    return (_jsxs(_Fragment, { children: [renderLoadingSpinner(), _jsx(\"div\", { id: componentId, ref: meetingRef }, componentId)] }, void 0));\n};\nexport default JitsiMeeting;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { getJaaSDomain, getRoomName } from '../utils';\nimport { JitsiMeeting } from '.';\n/**\n * Returns the JaaSMeeting Component with access to the 8x8.vc External API\n * to be used as-it-is in React projects\n *\n * @param {IJaaSMeetingProps} props the component's props\n * @returns {ReactElement} the `JaaSMeeting` Component\n * @example\n  ```js\n      <JaaSMeeting\n        roomName: 'TestingJaaSMeetingComponent'\n        appId='exampleAppId'\n        spinner={CustomSpinner}\n        onApiReady={(externalApi) => console.log(externalApi)}\n      />\n  ```\n */\nconst JaaSMeeting = (_a) => {\n    var { appId, roomName, useStaging, release } = _a, rest = __rest(_a, [\"appId\", \"roomName\", \"useStaging\", \"release\"]);\n    return (_jsx(JitsiMeeting, Object.assign({ domain: getJaaSDomain(useStaging), roomName: getRoomName(roomName, appId), release: release }, rest), void 0));\n};\nexport default JaaSMeeting;\n","import { Blob } from \"buffer\";\nimport { useState, useRef, useEffect, useCallback } from \"react\";\nimport { WorkerResponse } from \"src/workers/dataUrlWorker\";\n\n// Enums\nenum cameraPermissions {\n  GRANTED = \"granted\",\n}\n\nconst useCamera = () => {\n  const [hasCameraAccess, setHasCameraAccess] = useState(false);\n  const streamRef = useRef<MediaStream | null>(null);\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n  const workerRef = useRef<Worker | null>(null); // Web Worker ref\n\n  const getCameraStream = useCallback(async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n        },\n        audio: false,\n      });\n      setHasCameraAccess(true);\n      streamRef.current = stream;\n\n      // Create and configure video element\n      if (!videoRef.current) {\n        videoRef.current = document.createElement(\"video\");\n        videoRef.current.muted = true;\n        videoRef.current.playsInline = true;\n      }\n\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n\n      return videoRef.current; // Return the video element if needed\n    } catch (err) {\n      console.error(\"Camera access denied or not available:\", err);\n      setHasCameraAccess(false); // Camera access denied\n      return null;\n    }\n  }, []);\n\n  const restartVideoTrack = useCallback(async () => {\n    if (streamRef.current) {\n      // Stop all existing tracks in the stream\n      streamRef.current.getTracks().forEach((track) => track.stop());\n    }\n\n    // Re-attempt to get the camera stream\n    return await getCameraStream();\n  }, [getCameraStream]);\n\n  const camera = async () => {\n    return await getCameraStream();\n  };\n\n  const getDataUrl = async (): Promise<Blob | null> => {\n    if (videoRef.current && streamRef.current) {\n      const canvasElement = document.createElement(\"canvas\");\n      const ctx = canvasElement.getContext(\"2d\");\n\n      const track = streamRef.current.getVideoTracks()[0];\n      const settings = track.getSettings();\n\n      canvasElement.height = settings.height || 720;\n      canvasElement.width = settings.width || 1280;\n\n      ctx?.drawImage(\n        videoRef.current,\n        0,\n        0,\n        canvasElement.width,\n        canvasElement.height\n      );\n\n      const imageBitmap = await createImageBitmap(canvasElement);\n\n      if (!workerRef.current) {\n        workerRef.current = new Worker(\n          new URL(\"../../workers/dataUrlWorker.ts\", import.meta.url),\n          {\n            type: \"module\",\n          }\n        );\n      }\n\n      return new Promise((resolve, reject) => {\n        workerRef.current!.onmessage = (\n          event: MessageEvent<WorkerResponse>\n        ) => {\n          const { success, blob, error } = event.data;\n\n          if (success && blob) {\n            resolve(blob);\n          } else {\n            reject(error || \"Unknown error occurred in Web Worker.\");\n          }\n        };\n\n        workerRef.current!.onerror = (err) => {\n          console.error(\"Worker error:\", err);\n          reject(\"Web Worker encountered an error.\");\n        };\n\n        workerRef.current!.postMessage({\n          canvasData: imageBitmap,\n          width: canvasElement.width,\n          height: canvasElement.height,\n        });\n      });\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    const handlePermissionChange = async () => {\n      const permissionStatus = await navigator.permissions.query({\n        name: \"camera\" as PermissionName,\n      });\n\n      // If permission is granted, restart the video track\n      if (permissionStatus.state === cameraPermissions.GRANTED) {\n        await restartVideoTrack();\n      }\n\n      // Listen for permission changes\n      permissionStatus.onchange = async () => {\n        if (permissionStatus.state === cameraPermissions.GRANTED) {\n          await restartVideoTrack();\n        } else {\n          setHasCameraAccess(false);\n        }\n      };\n    };\n\n    handlePermissionChange();\n\n    return () => {\n      // Clean up Workera\n      if (workerRef.current) {\n        workerRef.current.terminate();\n      }\n    };\n  }, [restartVideoTrack]);\n\n  return { camera, hasCameraAccess, restartVideoTrack, getDataUrl };\n};\n\nexport default useCamera;\n","import { API_URL } from \"@/config/index\";\nimport { IJitsiMeetExternalApi } from \"@jitsi/react-sdk/lib/types\";\n\ntype Room = {\n  isMainRoom: boolean;\n  participants: { email: string; displayName: string; id: string }[];\n  roomName: string;\n};\n\n// const formatDate = (date: Date) => {\n//   const year = date.getFullYear();\n//   const month = String(date.getMonth() + 1).padStart(2, \"0\");\n//   const day = String(date.getDate()).padStart(2, \"0\");\n//   const hours = String(date.getHours()).padStart(2, \"0\");\n//   const minutes = String(date.getMinutes()).padStart(2, \"0\");\n//   const seconds = String(date.getSeconds()).padStart(2, \"0\");\n\n//   return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n// };\n\nexport const saveImages = async (\n  consultationId: number,\n  consultationTermId: number,\n  userEmail: string,\n  userId: number,\n  screenshots: { dataURL: Blob; timestamp: number }[],\n  term: string\n) => {\n  const filenames = screenshots.map((screenshot) => ({\n    filename: `${screenshot.timestamp}.webp`,\n  }));\n\n  try {\n    const signUrls = await fetch(\n      `${API_URL}/api/consultations/signed-screen-urls`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          consultation_id: consultationId,\n          user_termin_id: consultationTermId,\n          user_id: userId,\n          user_email: userEmail,\n          files: filenames,\n          executed_at: term,\n        }),\n      }\n    );\n\n    if (!signUrls.ok) {\n      throw new Error(`Failed to sign URLs: ${signUrls.statusText}`);\n    }\n\n    const responseData = await signUrls.json();\n\n    for (let i = 0; i < responseData.data.length; i++) {\n      const { url, filename } = responseData.data[i];\n      const screenshot = screenshots.find(\n        (s) => `${s.timestamp}.webp` === filename\n      );\n\n      if (!screenshot) {\n        console.warn(`Screenshot not found for filename: ${filename}`);\n        continue;\n      }\n\n      try {\n        const blob = new Blob([screenshot.dataURL]);\n        const response = await fetch(url, {\n          method: \"PUT\",\n          body: blob,\n        });\n\n        if (response.ok) {\n          console.log(`File ${filename} uploaded successfully.`);\n        } else {\n          console.error(`Failed to upload ${filename}: ${response.statusText}`);\n        }\n      } catch (error) {\n        console.error(`Error uploading ${filename}:`, error);\n      }\n    }\n  } catch (error) {\n    console.error(\"Error saving screenshots and timestamps:\", error);\n  }\n};\n\nexport const getCurrentUser = async (api: IJitsiMeetExternalApi) => {\n  //@ts-ignore\n  const rooms: { rooms: Room[] } = await api.getRoomsInfo();\n\n  const mainRoom = rooms.rooms.find((room) => room.isMainRoom);\n\n  return mainRoom?.participants.find(\n    //@ts-ignore\n    (participant) => participant.id === api._myUserID\n  );\n};\n","import { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  message: string;\n  closeToast: () => void;\n  userConsentedRef: React.MutableRefObject<boolean | null>;\n};\n\nconst Container = styled.div`\n  padding: 30px 23px 0 23px;\n  text-align: center;\n  h1 {\n    font-size: 20px;\n    margin-bottom: 10px;\n  }\n  p {\n    max-width: 80%;\n    margin: 20px auto;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n  width: 100%;\n  justify-content: space-between;\n  button {\n    min-width: 130px;\n  }\n`;\n\nconst JitsyMeetingMessage: React.FC<Props> = ({\n  message,\n  closeToast,\n  userConsentedRef,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Container className=\"jitsy-message\">\n      <Title className=\"jitsy-message__title\">\n        {t(\"ConsultationPage.EmotionConsent\")}\n      </Title>\n      <Text size=\"16\">{message}</Text>\n      <ButtonWrapper>\n        <Button\n          onClick={() => [(userConsentedRef.current = true), closeToast()]}\n        >\n          {t(\"ConsultationPage.Yes\")}\n        </Button>\n        <Button\n          mode=\"secondary\"\n          onClick={() => [(userConsentedRef.current = false), closeToast()]}\n        >\n          {t(\"ConsultationPage.No\")}\n        </Button>\n      </ButtonWrapper>\n    </Container>\n  );\n};\n\nexport default JitsyMeetingMessage;\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { JaaSMeeting } from \"@jitsi/react-sdk\";\nimport { IJitsiMeetExternalApi } from \"@jitsi/react-sdk/lib/types\";\n\nimport * as API from \"@escolalms/sdk/lib/types/api\";\nimport useCamera from \"@/hooks/meeting/useCamera\";\nimport { getCurrentUser } from \"@/utils/meeting\";\nimport JitsyMeetingMessage from \"@/components/Consultations/ConsultationCard/JitsyMeeting/Message\";\nimport { useRoles } from \"@/hooks/useRoles\";\nimport { useTranslation } from \"react-i18next\";\nimport { Modal } from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport styled from \"styled-components\";\n\nexport const StyledModal = styled(Modal)`\n  .rc-dialog-content {\n    border-radius: 15px;\n  }\n  .rc-dialog-body {\n    padding: 14px 0;\n  }\n`;\n\nconst FRAME_RATE = 3;\nconst SEND_INTERVAL = 3000;\n\ndeclare global {\n  interface Window {\n    api: IJitsiMeetExternalApi;\n  }\n}\n\ntype Props = {\n  jitsyData: Omit<API.JitsyData, \"yt_url\" | \"yt_stream_url\" | \"yt_stream_key\">; // or API.JitsyData but yt_stream in this type should be optional\n  term: string;\n  consultationTermId: number;\n  consultationId?: number;\n  close?: () => void;\n};\n\nconst JitsyMeeting: React.FC<Props> = ({\n  jitsyData,\n  term,\n  consultationTermId,\n  consultationId,\n  close,\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const { camera, getDataUrl, hasCameraAccess } = useCamera();\n  const userConsentedRef = useRef(false);\n  const isMeetingActive = useRef(false);\n  const intervalIdRef = useRef<NodeJS.Timeout | null>(null);\n  const workerRef = useRef<Worker | null>(null);\n\n  const { isStudent } = useRoles();\n  const { t } = useTranslation();\n\n  const handleConferenceJoined = useCallback(() => {\n    console.log(\"Video conference joined\");\n    isMeetingActive.current = true;\n  }, []);\n\n  const handleConferenceLeft = useCallback(() => {\n    console.log(\"Video conference left\");\n    isMeetingActive.current = false;\n  }, []);\n\n  const saveImagesInWorker = useCallback(\n    (\n      consultationId: number,\n      consultationTermId: number,\n      userEmail: string,\n      userId: number,\n      screenshots: { dataURL: Blob; timestamp: number }[],\n      term: string\n    ) => {\n      if (!workerRef.current) {\n        workerRef.current = new Worker(\n          new URL(\"../../../../workers/saveImageWorker.ts\", import.meta.url),\n          { type: \"module\" }\n        );\n      }\n\n      workerRef.current.onmessage = (event: MessageEvent) => {\n        const { success, error } = event.data;\n\n        if (success) {\n          console.log(\"Images saved successfully via Worker.\");\n        } else {\n          console.error(\"Error saving images in Worker:\", error);\n        }\n      };\n\n      workerRef.current.onerror = (err) => {\n        console.error(\"Worker encountered an error:\", err);\n      };\n\n      workerRef.current.postMessage({\n        consultationId,\n        consultationTermId,\n        userEmail,\n        userId,\n        screenshots,\n        term,\n      });\n    },\n    []\n  );\n\n  const handleRecordingStatusChanged = useCallback(\n    async (\n      api: IJitsiMeetExternalApi,\n      getDataUrl: () => Promise<Blob | null>,\n      status: {\n        on: boolean;\n        mode: string;\n        error?: string;\n        transcription: boolean;\n      }\n    ) => {\n      if (status.on) {\n        console.log(\"Recording has started in mode:\", status.mode);\n\n        let screenshots: { dataURL: Blob; timestamp: number }[] = [];\n\n        if (!intervalIdRef.current) {\n          intervalIdRef.current = setInterval(async () => {\n            const dataUrl = await getDataUrl();\n            if (dataUrl) {\n              screenshots.push({\n                dataURL: dataUrl,\n                timestamp: new Date().getTime(),\n              });\n\n              if (screenshots.length === FRAME_RATE * (SEND_INTERVAL / 1000)) {\n                const currentUser = await getCurrentUser(api);\n\n                if (currentUser) {\n                  console.log(\"Saving images...\");\n\n                  saveImagesInWorker(\n                    consultationId ?? 0,\n                    consultationTermId,\n                    jitsyData.data.userInfo.email,\n                    // @ts-ignore\n                    jitsyData.data.userInfo.id,\n                    screenshots,\n                    term\n                  );\n                  screenshots = [];\n                } else {\n                  console.error(\n                    \"Failed to get current user for saving images.\"\n                  );\n                }\n              }\n            } else {\n              console.error(\"Failed to get data URL for screenshot.\");\n            }\n          }, 1000 / FRAME_RATE);\n        }\n      } else {\n        console.log(\"Recording has stopped.\");\n        if (intervalIdRef.current) {\n          clearInterval(intervalIdRef.current);\n          intervalIdRef.current = null;\n        }\n\n        if (status.error) {\n          console.error(\"Recording error:\", status.error);\n        }\n      }\n    },\n    [\n      consultationId,\n      consultationTermId,\n      jitsyData.data.userInfo.email, // @ts-ignore\n      jitsyData.data.userInfo.id,\n      term,\n      saveImagesInWorker,\n    ]\n  );\n\n  const onApiReady = useCallback(\n    async (api: IJitsiMeetExternalApi) => {\n      window.api = api;\n      await camera();\n\n      api.addListener(\"videoConferenceJoined\", () => handleConferenceJoined());\n      api.addListener(\"videoConferenceLeft\", () => handleConferenceLeft());\n\n      api.on(\"recordingStatusChanged\", (status) => {\n        if (userConsentedRef.current)\n          handleRecordingStatusChanged(\n            api,\n            async () => (await getDataUrl()) as Blob,\n            status\n          );\n      });\n    },\n    [\n      camera,\n      handleConferenceJoined,\n      handleConferenceLeft,\n      getDataUrl,\n      handleRecordingStatusChanged,\n      userConsentedRef,\n    ]\n  );\n\n  const handleReadyToClose = () => {\n    if (close) {\n      close();\n    }\n    window.api?.dispose();\n  };\n\n  const getProperRoomName = useCallback(() => {\n    const regex = /\\/([^/?]+)\\?/;\n    const match = jitsyData.url.match(regex);\n\n    // If there's a match, return the captured group, otherwise return null\n    return match ? match[1] : jitsyData.data.roomName;\n  }, [jitsyData]);\n\n  useEffect(() => {\n    return () => {\n      if (workerRef.current) {\n        workerRef.current.terminate();\n      }\n      if (intervalIdRef.current) {\n        clearInterval(intervalIdRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (hasCameraAccess && isMeetingActive && isStudent) {\n      setShowModal(true);\n    }\n\n    return () => {};\n  }, [hasCameraAccess, isMeetingActive, isStudent, t]);\n\n  return (\n    <>\n      {jitsyData && !showModal && (\n        <JaaSMeeting\n          jwt={jitsyData.data.jwt}\n          appId={jitsyData.data.app_id}\n          roomName={getProperRoomName()}\n          getIFrameRef={(iframeRef) => {\n            iframeRef.style.height = \"calc(100vh - 76px)\";\n            iframeRef.style.width = \"100%\";\n          }}\n          onApiReady={onApiReady}\n          onReadyToClose={handleReadyToClose}\n          interfaceConfigOverwrite={{\n            ...jitsyData.data.interfaceConfigOverwrite,\n          }}\n          configOverwrite={{\n            ...jitsyData.data.configOverwrite,\n            prejoinConfig: {\n              enabled: false,\n            },\n          }}\n        />\n      )}\n      <StyledModal\n        onClose={() => setShowModal(false)}\n        visible={showModal}\n        animation=\"zoom\"\n        maskAnimation=\"fade\"\n        destroyOnClose={true}\n        width={468}\n      >\n        <JitsyMeetingMessage\n          message={t(\"ConsultationPage.AdditionalRecording\")}\n          closeToast={() => setShowModal(false)}\n          userConsentedRef={userConsentedRef}\n        />\n      </StyledModal>\n    </>\n  );\n};\n\nexport default JitsyMeeting;\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport RateCourse from \"@/components/Courses/RateCourse\";\nimport { QuestionnaireModelType } from \"@/types/questionnaire\";\n\nimport { useQuestionnaires } from \"@/hooks/questionnaires\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { useRoles } from \"@/hooks/useRoles\";\n\ninterface Props {\n  entityModel: QuestionnaireModelType;\n  entityId: number;\n  showModal?: boolean;\n  onClose?: () => void;\n  onFinish?: () => void;\n  onSuccesGetQuestionnaires?: (isAnyQuestionnaires: boolean) => void;\n  setIsEnded?: (isEnded: boolean) => void;\n}\n\nexport const EndMeetingQuestionnairesModal = ({\n  entityId,\n  entityModel,\n  onSuccesGetQuestionnaires,\n  setIsEnded,\n}: Props) => {\n  const {\n    questionnaires: questionnairesList,\n    loading,\n    // error,\n    getQuestionnaires,\n  } = useQuestionnaires({\n    entityId: entityId || 0,\n    entityModel: entityModel,\n  });\n\n  interface StateType {\n    show: boolean;\n    step: number;\n    loading: boolean;\n\n    endMeetingQuestionnaires: API.Questionnaire[];\n  }\n\n  const [state, setState] = useState<StateType>({\n    show: false,\n    step: 0,\n    loading: true,\n    endMeetingQuestionnaires: [],\n  });\n\n  const { isStudent, isTutor } = useRoles();\n\n  const questionnaires = useMemo(() => {\n    return questionnairesList.filter((questionnaire) =>\n      questionnaire.models.some((model) => {\n        if (model.model_type_title === entityModel) {\n          if (model.model_type_title === QuestionnaireModelType.CONSULTATION) {\n            // Additional filters for \"consultation\"\n            return (\n              // @ts-ignore add to sdk\n              (isStudent && model.target_group === \"user\") || // @ts-ignore add to sdk\n              (isTutor && model.target_group === \"author\")\n            );\n          }\n\n          return true;\n        }\n        return false;\n      })\n    );\n  }, [questionnairesList, isStudent, isTutor, entityModel]);\n\n  const categorizedQuestionnaires = useCallback(() => {\n    if (!questionnaires) return;\n\n    const categorized = questionnaires.reduce(\n      (\n        acc: {\n          endMeetingQuestionnaires: API.Questionnaire[];\n        },\n        questionnaire\n      ) => {\n        const frequency = questionnaire.models.find(\n          (model) =>\n            model.model_type_title === entityModel &&\n            model.model_id === entityId\n          // @ts-ignore add to sdk\n        )?.display_frequency_minutes;\n\n        if (frequency !== null && frequency !== undefined && frequency === 0) {\n          acc.endMeetingQuestionnaires.push(questionnaire);\n        }\n        return acc;\n      },\n      { endMeetingQuestionnaires: [] }\n    );\n\n    setState((prevState) => ({\n      ...prevState,\n      ...categorized,\n    }));\n  }, [questionnaires, entityModel, entityId]);\n\n  const moveToNextQuestionnaire = useCallback(() => {\n    setState((prevState) => ({\n      ...prevState,\n      step: prevState.step + 1,\n    }));\n    const timer = setTimeout(() => {\n      setState((prevState) => ({\n        ...prevState,\n        show: true,\n      }));\n    }, 500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setState((prevState) => ({\n      ...prevState,\n      show: false,\n    }));\n\n    if (state.step < state.endMeetingQuestionnaires.length - 1) {\n      moveToNextQuestionnaire();\n    } else {\n      setState((prevState) => ({\n        ...prevState,\n        show: false,\n      }));\n      setIsEnded && setIsEnded(false);\n    }\n  }, [state, moveToNextQuestionnaire, setIsEnded]);\n\n  useEffect(() => {\n    getQuestionnaires();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [entityId]);\n\n  useEffect(() => {\n    categorizedQuestionnaires();\n  }, [questionnaires, categorizedQuestionnaires, onSuccesGetQuestionnaires]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (state.endMeetingQuestionnaires.length) {\n      setState((prevState) => ({\n        ...prevState,\n        show: true,\n      }));\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [questionnaires, state.endMeetingQuestionnaires]);\n\n  return (\n    <>\n      {state.show && entityId && !!questionnaires.length && !loading && (\n        <RateCourse\n          entityModel={entityModel}\n          entityId={Number(entityId)}\n          visible={state.show}\n          onClose={handleClose}\n          questionnaire={state.endMeetingQuestionnaires[state.step]}\n        />\n      )}\n    </>\n  );\n};\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { Modal } from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport { JitsyData } from \"@escolalms/sdk/lib/types/api\";\nimport ContentLoader from \"@/components/_App/ContentLoader\";\nimport { ConsultationMeetModalStyles } from \"./MeetModalStyles\";\nimport JitsyMeeting from \"@/components/Consultations/ConsultationCard/JitsyMeeting\";\nimport { QuestionnaireModelType } from \"@/types/questionnaire\";\nimport { QuestionnairesModal } from \"@/components/Courses/Course/CoursePanelLayout/FinishPage/Rate\";\nimport { ConsultationModalContext } from \"@/components/Consultations/ConsultationCard/Buttons/context\";\nimport { EndMeetingQuestionnairesModal } from \"@/components/Consultations/ConsultationCard/EndMeetingQuestionnaires\";\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst ConsultationMeetModal = ({ onClose }: Props) => {\n  const [meetData, setMeetData] = useState<JitsyData | null>(null);\n  const [isEnded, setIsEnded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { generateConsultationJitsy } = useContext(EscolaLMSContext);\n  const consultationModalContext = useContext(ConsultationModalContext);\n\n  useEffect(() => {\n    const getMeetUrl = async () => {\n      setLoading(true);\n      if (consultationModalContext?.consultationData) {\n        const res = await generateConsultationJitsy(\n          consultationModalContext?.consultationData?.consultationTermId,\n          consultationModalContext?.consultationData?.term\n        );\n        if (res.success) {\n          setMeetData((res as { data: JitsyData }).data);\n        }\n        setLoading(false);\n      }\n    };\n\n    getMeetUrl();\n    return () => {\n      Object.keys(localStorage).forEach((key) => {\n        if (key.startsWith(\"questionnaire_\")) {\n          localStorage.removeItem(key);\n        }\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [consultationModalContext?.consultationData]);\n\n  useEffect(() => {\n    setIsEnded(false);\n  }, [consultationModalContext?.consultationData]);\n\n  const handleOnClose = useCallback(() => {\n    setIsEnded(true);\n    consultationModalContext?.setModalOpen?.(false);\n    onClose();\n  }, [setIsEnded, onClose, consultationModalContext]);\n\n  return (\n    <>\n      <Modal\n        onClose={handleOnClose}\n        visible={consultationModalContext?.isModalOpen}\n        animation=\"zoom\"\n        maskAnimation=\"fade\"\n        destroyOnClose={true}\n        width=\"100vw\"\n        height=\"100vh\"\n        bodyStyle={{\n          minHeight: \"93vh\",\n        }}\n      >\n        <ConsultationMeetModalStyles>\n          {loading && <ContentLoader />}\n\n          {!loading && meetData && (\n            <JitsyMeeting\n              jitsyData={meetData}\n              close={handleOnClose}\n              consultationId={\n                consultationModalContext?.consultationData?.consultationId\n              }\n              consultationTermId={\n                consultationModalContext?.consultationData\n                  ?.consultationTermId ?? 0\n              }\n              term={consultationModalContext?.consultationData?.term ?? \"\"}\n            />\n          )}\n        </ConsultationMeetModalStyles>\n        <QuestionnairesModal\n          entityId={Number(\n            consultationModalContext?.consultationData?.consultationId\n          )}\n          entityModel={QuestionnaireModelType.CONSULTATION}\n        />\n      </Modal>\n      {isEnded && (\n        <EndMeetingQuestionnairesModal\n          entityId={Number(\n            consultationModalContext?.consultationData?.consultationId\n          )}\n          entityModel={QuestionnaireModelType.CONSULTATION}\n          setIsEnded={setIsEnded}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ConsultationMeetModal;\n","import { useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Tabs } from \"@escolalms/components/lib/components/atoms/Tabs/Tabs\";\nimport ProfileConsultations from \"@/components/Profile/ProfileConsultations\";\nimport ProfileTutorConsultations from \"@/components/Profile/ProfileTutorConsultations\";\nimport { useRoles } from \"@/hooks/useRoles\";\nimport Layout from \"@/components/_App/Layout\";\nimport { Content } from \"@/pages/user/MyProfile\";\nimport Container from \"@/components/Common/Container\";\nimport { ConsultationModalContext } from \"@/components/Consultations/ConsultationCard/Buttons/context\";\nimport ConsultationMeetModal from \"@/components/Consultations/ConsultationCard/MeetModal\";\n\nexport enum ConsultationStatus {\n  UPCOMING = \"in_coming\",\n  PAST = \"is_ended\",\n  STARTED = \"is_started\",\n}\n\nconst MyConsultationsPage = () => {\n  const { t } = useTranslation();\n  const { isTutor } = useRoles();\n\n  const consultationModalContext = useContext(ConsultationModalContext);\n\n  const myConsultationsTabs = useMemo(\n    () => ({\n      tabs: isTutor\n        ? [\n            {\n              label: t(\"MyProfilePage.Upcoming\"),\n              key: 1,\n              component: (\n                <ProfileTutorConsultations type={ConsultationStatus.UPCOMING} />\n              ),\n            },\n            {\n              label: t(\"MyProfilePage.Archived\"),\n              key: 2,\n              component: (\n                <ProfileTutorConsultations type={ConsultationStatus.PAST} />\n              ),\n            },\n            {\n              label: t(\"MyProfilePage.BoughtUpcoming\"),\n              key: 3,\n              component: (\n                <ProfileConsultations type={ConsultationStatus.UPCOMING} />\n              ),\n            },\n            {\n              label: t(\"MyProfilePage.BoughtArchived\"),\n              key: 4,\n              component: (\n                <ProfileConsultations type={ConsultationStatus.PAST} />\n              ),\n            },\n          ]\n        : [\n            {\n              label: t(\"MyProfilePage.Upcoming\"),\n              key: 1,\n              component: (\n                <ProfileConsultations type={ConsultationStatus.UPCOMING} />\n              ),\n            },\n            {\n              label: t(\"MyProfilePage.Archived\"),\n              key: 2,\n              component: (\n                <ProfileConsultations type={ConsultationStatus.PAST} />\n              ),\n            },\n          ],\n      defaultActiveKey: 1,\n    }),\n    [isTutor, t]\n  );\n\n  return (\n    <Layout>\n      <Content>\n        <Container>\n          <div className=\"courses-wrapper\">\n            <Tabs\n              tabs={myConsultationsTabs.tabs}\n              defaultActiveKey={myConsultationsTabs.defaultActiveKey}\n            />\n          </div>\n\n          <ConsultationMeetModal\n            onClose={() => [consultationModalContext?.setModalOpen(false)]}\n          />\n        </Container>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default MyConsultationsPage;\n"],"names":["ProfileConsultations","type","userConsultations","fetchUserConsultations","token","useContext","EscolaLMSContext","t","useTranslation","consultationsData","setConsultationsData","useState","filterConstulations","useMemo","filtered","_a","consultation","ConsultationStatus","item","refreshConsultation","useCallback","id","termId","response","API_URL","responseIndex","prev","index","error","handleRefreshIfTimePassed","useEffect","interval","ProfileConsultationsProvider","jsx","Row","_","Col","CourseCardSkeleton","Text","isMobile","Fragment","ConsultationCard","memo","ConsultationTutorCardStyles","styled","theme","ConsultationTutorCardImage","product","Link","ResponsiveImage","CourseImgPlaceholder","StatusStyles","StatusTypes","StatusTypes2","Status","status","name","useTheme","color","ConsultationTutorCardContentUserInfoStyles","ButtonWrapper","statuses","ConsultationTutorCardContentUserInfo","approveConsultationTerm","rejectConsultationTerm","renderStatus","user","jsxs","IconText","IconSuccess","IconCircleError","ConsultationTutorCardContentDateInfoButtonsStyles","ConsultationTutorCardContentDateInfo","isEnded","isStarted","isReported","isApproved","isNotReported","isRejected","DateInfo","DateInfoTypes","addTimeToDate","extractTimeUnits","ConsultationCardJoinButton","formatDate","TimeInfoStyles","TimeInfo","time","IconTime","ConsultationTutorCardContentStyles","ConsultationTutorCardContent","ConsultationTutorCardButtons","menuItems","DropdownMenu","Button","IconMenuVertical","ConsultationTutorCardStatusStyles","ConsultationTutorCardStatus","is_ended","ConsultationTutorCard","props","CourseCard","ProfileTutorConsultations","tutorConsultations","fetchTutorConsultations","ConsultationMeetModalStyles","DEFAULT_DOMAIN","JAAS_STAGING_DOMAIN","JAAS_PROD_DOMAIN","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","reject","fulfilled","step","e","rejected","result","loadExternalApi","domain","release","appId","script","releaseParam","appIdPath","scriptPromise","fetchExternalApi","getRoomName","roomName","tenant","getAppId","roomParts","getJaaSDomain","useStaging","instancesCounter","generateComponentId","prefix","JitsiMeeting","configOverwrite","interfaceConfigOverwrite","jwt","invitees","devices","userInfo","lang","Spinner","onApiReady","onReadyToClose","getIFrameRef","loading","setLoading","apiLoaded","setApiLoaded","externalApi","useRef","apiRef","meetingRef","componentId","api","loadIFrame","JitsiMeetExternalAPI","renderLoadingSpinner","_jsx","_jsxs","_Fragment","__rest","s","p","i","JaaSMeeting","rest","useCamera","hasCameraAccess","setHasCameraAccess","streamRef","videoRef","workerRef","getCameraStream","stream","err","restartVideoTrack","track","camera","getDataUrl","canvasElement","ctx","settings","imageBitmap","event","success","blob","permissionStatus","getCurrentUser","mainRoom","room","participant","Container","JitsyMeetingMessage","message","closeToast","userConsentedRef","Title","StyledModal","Modal","FRAME_RATE","SEND_INTERVAL","JitsyMeeting","jitsyData","term","consultationTermId","consultationId","close","showModal","setShowModal","isMeetingActive","intervalIdRef","isStudent","useRoles","handleConferenceJoined","handleConferenceLeft","saveImagesInWorker","userEmail","userId","screenshots","handleRecordingStatusChanged","dataUrl","handleReadyToClose","getProperRoomName","regex","match","iframeRef","EndMeetingQuestionnairesModal","entityId","entityModel","onSuccesGetQuestionnaires","setIsEnded","questionnairesList","getQuestionnaires","useQuestionnaires","state","setState","isTutor","questionnaires","questionnaire","model","QuestionnaireModelType","categorizedQuestionnaires","categorized","acc","frequency","prevState","moveToNextQuestionnaire","timer","handleClose","RateCourse","ConsultationMeetModal","onClose","meetData","setMeetData","generateConsultationJitsy","consultationModalContext","ConsultationModalContext","res","_b","key","handleOnClose","ContentLoader","_c","QuestionnairesModal","_d","_e","MyConsultationsPage","myConsultationsTabs","Layout","Content","Tabs"],"mappings":"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","x_google_ignoreList":[13,14,15,16,17]}