(function(){"use strict";self.onmessage=async l=>{const{consultationId:d,consultationTermId:u,userEmail:f,userId:m,screenshots:r,term:p}=l.data;try{const t=r.map(e=>({filename:`${e.timestamp}.webp`})),n=await fetch("https://demo-stage.api.s.wellms.io/api/consultations/signed-screen-urls",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({consultation_id:d,user_termin_id:u,user_id:m,user_email:f,files:t,executed_at:p})});if(!n.ok)throw new Error(`Failed to sign URLs: ${n.statusText}`);const a=await n.json();for(let e=0;e<a.data.length;e++){const{url:h,filename:s}=a.data[e],i=r.find(o=>`${o.timestamp}.webp`===s);if(!i){console.warn(`Screenshot not found for filename: ${s}`);continue}try{const o=new Blob([i.dataURL]),c=await fetch(h,{method:"PUT",body:o});c.ok?console.log(`File ${s} uploaded successfully.`):console.error(`Failed to upload ${s}: ${c.statusText}`)}catch(o){console.error(`Error uploading ${s}:`,o)}}self.postMessage({success:!0})}catch(t){self.postMessage({success:!1,error:t instanceof Error?t.message:"Unknown error"})}}})();
//# sourceMappingURL=saveImageWorker-zy29nYvB.js.map
