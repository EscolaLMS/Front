{"version":3,"file":"CourseCard-EettxkIO.js","sources":["../../src/images/no-picture.png","../../src/components/Courses/CourseImgPlaceholder/index.tsx","../../src/components/Categories/CategoriesBreadCrumbs/index.tsx","../../src/components/Skeletons/CourseCard.tsx"],"sourcesContent":["export default \"__VITE_ASSET__C4KVbMQP__\"","import styled from \"styled-components\";\nimport Placeholder from \"../../../images/no-picture.png\";\n\nconst StyledPlaceholder = styled.div`\n  width: 100%;\n  height: 100%;\n  border: 1px solid\n    ${({ theme }) => (theme.mode === \"light\" ? theme.gray4 : theme.gray2)};\n  img {\n    &:hover {\n      transform: none !important;\n    }\n  }\n`;\n\nconst CourseImgPlaceholder = () => {\n  return (\n    <StyledPlaceholder>\n      <img src={Placeholder} alt=\"\" />\n    </StyledPlaceholder>\n  );\n};\n\nexport default CourseImgPlaceholder;\n","import { useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { BreadCrumbs } from \"@escolalms/components/lib/components/atoms/BreadCrumbs/BreadCrumbs\";\n\nconst StyledDiv = styled(\"div\")<{ isOpen?: boolean }>`\n  .more-icon {\n    border: 1px solid;\n    border-radius: 50%;\n    padding: 4px;\n    margin-left: 12px;\n    font-size: 0.75em;\n  }\n\n  .category-name {\n    cursor: pointer;\n    padding: 2px 4px;\n    background-color: ${({ theme }) => theme.secondaryColor};\n    color: ${({ theme }) => theme.black};\n    border-radius: 3px;\n    font-size: 11px;\n    text-transform: uppercase;\n    font-weight: 700;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .categories-menu-container {\n    position: relative;\n\n    .categories-menu {\n      position: absolute;\n      top: 0;\n      right: 0;\n      list-style: none;\n      background-color: #f2f2f2;\n      margin: 4px 0;\n\n      li {\n        margin: 4px 0;\n      }\n    }\n  }\n`;\n\nexport interface CategoriesProps {\n  categories: EscolaLms.Categories.Models.Category[] | undefined;\n  onCategoryClick?: (id: number) => void;\n}\n\nconst CategoriesBreadCrumbs = (props: CategoriesProps) => {\n  const { categories, onCategoryClick } = props;\n  // const [open, setOpen] = useState(false);\n  const parentRef = useRef<HTMLDivElement | null>(null);\n  const firstCategories = categories || [];\n  // const otherCategories = categories ? [...categories].splice(2) : [];\n\n  const categoryClick = useCallback(\n    (id: number) => {\n      if (onCategoryClick) {\n        onCategoryClick(id);\n      }\n    },\n    [onCategoryClick]\n  );\n\n  return (\n    <StyledDiv ref={parentRef}>\n      <BreadCrumbs\n        hyphen=\"\"\n        items={firstCategories?.map((category, index) => (\n          <>\n            <span\n              className=\"category-name\"\n              key={category.name + index}\n              onClick={() => categoryClick(category.id)}\n              aria-hidden=\"true\"\n            >\n              {category.name}\n            </span>\n            {/* {index === firstCategories.length - 1 &&\n              otherCategories.length > 0 && (\n                <span\n                  className=\"more-icon\"\n                  onMouseOver={() => setOpen(true)}\n                  onFocus={() => setOpen(true)}\n                  aria-hidden={true}\n                >{`+${otherCategories.length}`}</span>\n              )} */}\n          </>\n        ))}\n      />\n\n      {/* {otherCategories.length > 0 && (\n        <div\n          className=\"categories-menu-container\"\n          onMouseLeave={() => setOpen(false)}\n        >\n          {open && (\n            <ul\n              className=\"categories-menu\"\n              style={{\n                width:\n                  parentRef.current?.getBoundingClientRect().width || \"auto\",\n              }}\n            >\n              <BreadCrumbs\n                hyphen=\"\"\n                items={otherCategories?.map((category) => (\n                  <li\n                    className=\"category-name\"\n                    onClick={() => categoryClick(category.id)}\n                    aria-hidden={true}\n                  >\n                    {category.name}\n                  </li>\n                ))}\n              />\n            </ul>\n          )}\n        </div>\n      )} */}\n    </StyledDiv>\n  );\n};\n\nexport default CategoriesBreadCrumbs;\n","import Skeleton from \"react-loading-skeleton\";\nimport styled from \"styled-components\";\nimport { useId } from \"react\";\nimport { Col, ScreenClass } from \"react-grid-system\";\n\nconst CardSkeleton = styled.div`\n  max-width: 278px;\n  min-height: 414px;\n\n  @media (max-width: 768px) {\n    max-width: 100%;\n    min-height: auto;\n  }\n`;\n\ntype ColProps = React.ComponentProps<typeof Col>;\n\ntype Props = {\n  count?: number;\n  colProps?: Partial<Record<ScreenClass, ColProps | number | \"content\">>;\n};\n\nexport const CourseCardSkeleton: React.FC<Props> = ({\n  count = 1,\n  colProps,\n}) => {\n  const id = useId();\n  return (\n    <>\n      {Array.from({ length: count }).map(() =>\n        colProps ? (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <Col key={`card-skeleton-${id}`} {...colProps}>\n            <CardSkeleton>\n              <Skeleton\n                height=\"264px\"\n                borderRadius={14}\n                style={{ marginBottom: \"10px\" }}\n              />\n              <Skeleton width={146} style={{ marginBottom: \"10px\" }} />\n              <Skeleton count={2} />\n            </CardSkeleton>\n          </Col>\n        ) : (\n          <CardSkeleton key={`card-skeleton-${id}`}>\n            <Skeleton\n              height=\"264px\"\n              borderRadius={14}\n              style={{ marginBottom: \"10px\" }}\n            />\n            <Skeleton width={146} style={{ marginBottom: \"10px\" }} />\n            <Skeleton count={2} />\n          </CardSkeleton>\n        )\n      )}\n    </>\n  );\n};\n"],"names":["Placeholder","StyledPlaceholder","styled","theme","CourseImgPlaceholder","jsx","StyledDiv","CategoriesBreadCrumbs","props","categories","onCategoryClick","parentRef","useRef","firstCategories","categoryClick","useCallback","id","BreadCrumbs","category","index","Fragment","CardSkeleton","CourseCardSkeleton","count","colProps","useId","Col","Skeleton"],"mappings":"6GAAA,MAAeA,EAAA,kCCGTC,EAAoBC,EAAO;AAAA;AAAA;AAAA;AAAA,MAI3B,CAAC,CAAE,MAAAC,CAAa,IAAAA,EAAM,OAAS,QAAUA,EAAM,MAAQA,EAAM,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQnEC,EAAuB,IAEzBC,MAACJ,GACC,SAACI,EAAAA,IAAA,MAAA,CAAI,IAAKL,EAAa,IAAI,GAAG,CAChC,CAAA,ECfEM,EAAYJ,EAAO,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAYN,CAAC,CAAE,MAAAC,KAAYA,EAAM,cAAc;AAAA,aAC9C,CAAC,CAAE,MAAAA,KAAYA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiCjCI,EAAyBC,GAA2B,CAClD,KAAA,CAAE,WAAAC,EAAY,gBAAAC,CAAA,EAAoBF,EAElCG,EAAYC,SAA8B,IAAI,EAC9CC,EAAkBJ,GAAc,CAAC,EAGjCK,EAAgBC,EAAA,YACnBC,GAAe,CACVN,GACFA,EAAgBM,CAAE,CAEtB,EACA,CAACN,CAAe,CAClB,EAGE,OAAAL,EAAAA,IAACC,EAAU,CAAA,IAAKK,EACd,SAAAN,EAAA,IAACY,EAAA,YAAA,CACC,OAAO,GACP,MAAOJ,GAAA,YAAAA,EAAiB,IAAI,CAACK,EAAUC,IAEnCd,MAAAe,EAAAA,SAAA,CAAA,SAAAf,EAAA,IAAC,OAAA,CACC,UAAU,gBAEV,QAAS,IAAMS,EAAcI,EAAS,EAAE,EACxC,cAAY,OAEX,SAASA,EAAA,IAAA,EAJLA,EAAS,KAAOC,CAAA,EAezB,EACD,CAAA,EAgCL,CAEJ,ECvHME,EAAenB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBfoB,EAAsC,CAAC,CAClD,MAAAC,EAAQ,EACR,SAAAC,CACF,IAAM,CACJ,MAAMR,EAAKS,EAAAA,MAAM,EACjB,yBAEK,SAAM,MAAA,KAAK,CAAE,OAAQF,CAAO,CAAA,EAAE,IAAI,IACjCC,EAGGnB,MAAAqB,EAAAA,IAAA,CAAiC,GAAGF,EACnC,gBAACH,EACC,CAAA,SAAA,CAAAhB,EAAA,IAACsB,EAAA,CACC,OAAO,QACP,aAAc,GACd,MAAO,CAAE,aAAc,MAAO,CAAA,CAChC,EACAtB,MAACsB,GAAS,MAAO,IAAK,MAAO,CAAE,aAAc,QAAU,EACvDtB,EAAAA,IAACsB,EAAS,CAAA,MAAO,CAAG,CAAA,CACtB,CAAA,CAAA,CAAA,EATQ,iBAAiBX,CAAE,EAU7B,SAECK,EACC,CAAA,SAAA,CAAAhB,EAAA,IAACsB,EAAA,CACC,OAAO,QACP,aAAc,GACd,MAAO,CAAE,aAAc,MAAO,CAAA,CAChC,EACAtB,MAACsB,GAAS,MAAO,IAAK,MAAO,CAAE,aAAc,QAAU,EACvDtB,EAAAA,IAACsB,EAAS,CAAA,MAAO,CAAG,CAAA,CAAA,GAPH,iBAAiBX,CAAE,EAQtC,CAAA,EAGN,CAEJ"}