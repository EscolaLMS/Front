{"version":3,"file":"useRoles-BllCEDEd.js","sources":["../../src/components/QuestionBox/styles.ts","../../src/components/QuestionBox/index.tsx","../../src/components/Courses/RateCourse/styles.ts","../../src/components/Courses/RateCourse/index.tsx","../../src/hooks/useRoles.ts"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const QuestionBoxWrapper = styled.form`\n  .question-box {\n    &__title {\n      font-size: 24px;\n      text-align: center;\n      border-bottom: 1px solid #eaeaea;\n      padding-bottom: 13px;\n    }\n\n    &__content {\n      padding: 30px 23px 0 23px;\n      text-align: center;\n\n      &--title {\n        font-size: 16px;\n      }\n      &--description {\n        font-size: 16px;\n        margin: 11px 0;\n      }\n      &--textarea-title {\n        font-size: 16px;\n        margin: 11px 0;\n        font-weight: bold;\n      }\n      &--textarea {\n        background: #f8f8f8;\n        border: 1px solid #eaeaea;\n        border-radius: 10px;\n      }\n      &--buttons {\n        margin-top: 37px;\n      }\n    }\n  }\n`;\n","import { FC, useState } from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Button } from \"@escolalms/components/lib/components/atoms/Button/Button\";\nimport { Rate } from \"@escolalms/components/lib/components/molecules/Rate/Rate\";\nimport { Stack } from \"@escolalms/components/lib/components/atoms/Stack/index\";\nimport { TextArea } from \"@escolalms/components/lib/components/atoms/TextArea/TextArea\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { QuestionBoxWrapper } from \"@/components/QuestionBox/styles\";\nimport { Row } from \"@escolalms/components/lib/components/atoms/Row\";\nimport { QuestionnaireModelType } from \"@/types/questionnaire\";\n\ninterface QuestionBoxProps {\n  entityModel: QuestionnaireModelType;\n  questionnaireTitle?: string;\n  withStarsRating?: boolean;\n  data: API.QuestionnaireQuestion;\n  textareaPlaceholder?: string;\n  handleSubmit: (rate: number, note?: string) => void;\n  onClose: () => void;\n}\n\nexport const QuestionBox: FC<QuestionBoxProps> = ({\n  entityModel,\n  data,\n  textareaPlaceholder,\n  questionnaireTitle,\n  withStarsRating,\n  handleSubmit,\n  onClose,\n}) => {\n  const { t } = useTranslation();\n\n  const [answer, setAnswer] = useState({ rate: 0, note: \"\" });\n\n  const submit = (rate?: number) => {\n    handleSubmit(rate ? rate : answer.rate, answer.note);\n    setAnswer({ rate: 0, note: \"\" });\n  };\n\n  return (\n    <QuestionBoxWrapper>\n      <Title className=\"question-box__title\">\n        {t(\n          entityModel === QuestionnaireModelType.COURSE\n            ? \"RateCourse.Title\"\n            : questionnaireTitle || \"Ankieta\"\n        )}\n      </Title>\n      <div className=\"question-box__content\">\n        {!!withStarsRating ? (\n          <Rate\n            // @ts-ignore TODO: add to sdk\n            score={data.max_score}\n            onSubmit={(rate) => submit(rate)}\n            header={data.title}\n            onCancel={onClose}\n          >\n            <Text className=\"question-box__content--textarea-title\">\n              {t(\"RateCourse.WriteComment\")}\n            </Text>\n            <TextArea\n              className=\"question-box__content--textarea\"\n              placeholder={textareaPlaceholder}\n              value={answer.note}\n              onChange={({ target: { value } }) =>\n                setAnswer((prev) => ({ ...prev, note: value }))\n              }\n              rows={5}\n            />\n          </Rate>\n        ) : (\n          <Stack>\n            <Title className=\"question-box__content--title\">\n              {data?.title}\n            </Title>\n            <Text className=\"question-box__content--description\">\n              {data?.description}\n            </Text>\n            <Text className=\"question-box__content--textarea-title\">\n              {t(\n                entityModel === QuestionnaireModelType.COURSE\n                  ? \"RateCourse.WriteComment\"\n                  : \"RateCourse.WriteAnswer\"\n              )}\n            </Text>\n            <TextArea\n              className=\"question-box__content--textarea\"\n              placeholder={textareaPlaceholder}\n              value={answer.note}\n              onChange={({ target: { value } }) =>\n                setAnswer((prev) => ({ ...prev, note: value }))\n              }\n              rows={5}\n            />\n            <Row\n              className=\"question-box__content--buttons\"\n              $alignItems=\"center\"\n              $justifyContent=\"center\"\n              $gap={12}\n            >\n              <Button type=\"button\" mode=\"white\" onClick={onClose}>\n                {t(\"RateCourse.NoAnswer\")}\n              </Button>\n              <Button\n                onClick={() => submit()}\n                type=\"button\"\n                mode=\"primary\"\n                disabled={!answer.note.length}\n              >\n                {t(\"RateCourse.SendAnswer\")}\n              </Button>\n            </Row>\n          </Stack>\n        )}\n      </div>\n    </QuestionBoxWrapper>\n  );\n};\n","import { Modal } from \"@escolalms/components/lib/components/atoms/Modal/Modal\";\nimport styled from \"styled-components\";\n\nexport const StyledModal = styled(Modal)`\n  .rc-dialog-content {\n    border-radius: 15px;\n  }\n  .rc-dialog-body {\n    padding: 14px 0;\n  }\n`;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { QuestionBox } from \"../../QuestionBox\";\nimport { QuestionnaireModelType, QuestionType } from \"@/types/questionnaire\";\nimport { StyledModal } from \"@/components/Courses/RateCourse/styles\";\nimport { toast } from \"@/utils/toast\";\n\ntype Props = {\n  entityModel: QuestionnaireModelType;\n  entityId: number;\n  visible: boolean;\n  questionnaire: API.Questionnaire;\n  onClose: () => void;\n};\n\nconst initialState = {\n  loading: false,\n  step: 0,\n};\n\nconst RateCourse: React.FC<Props> = ({\n  entityModel,\n  entityId,\n  visible,\n  questionnaire,\n  onClose,\n}) => {\n  const { sendQuestionnaireAnswer } = useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n\n  const [state, setState] = useState(initialState);\n\n  const handleSendAnswer = useCallback(\n    async (rate: number, note?: string) => {\n      if (questionnaire.questions) {\n        setState((prevState) => ({\n          ...prevState,\n          loading: true,\n        }));\n        try {\n          const request = await sendQuestionnaireAnswer(\n            entityModel,\n            entityId,\n            questionnaire?.id,\n            {\n              question_id: questionnaire.questions[state.step].id,\n              rate,\n              note,\n              visible_on_front:\n                questionnaire.questions[state.step].public_answers,\n            }\n          );\n          if (request.success) {\n            toast(`${t(\"RateCourse.AnswerSended\")}`, \"success\");\n          }\n        } catch (error: any) {\n          toast(\"Error\", error.message);\n          console.error(error);\n        } finally {\n          setState((prevState) => ({\n            ...prevState,\n            loading: false,\n            step: prevState.step + 1,\n            note: \"\",\n            rating: null,\n          }));\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [entityModel, entityId, questionnaire, state]\n  );\n\n  const handleSave = useCallback(\n    (rate: number, note?: string) => {\n      handleSendAnswer(rate, note);\n      if (\n        questionnaire.questions &&\n        state.step === questionnaire.questions.length - 1\n      ) {\n        onClose();\n      }\n    },\n    [handleSendAnswer, questionnaire, state.step, onClose]\n  );\n\n  return (\n    <StyledModal\n      onClose={onClose}\n      visible={visible}\n      animation=\"zoom\"\n      maskAnimation=\"fade\"\n      destroyOnClose={true}\n      width={468}\n      closable={false}\n    >\n      {questionnaire.questions && (\n        <QuestionBox\n          questionnaireTitle={questionnaire.title}\n          entityModel={entityModel}\n          data={questionnaire.questions[state.step]}\n          handleSubmit={(rate, note) => handleSave(rate, note)}\n          withStarsRating={\n            questionnaire.questions[state.step]?.type === QuestionType.REVIEW\n          }\n          onClose={onClose}\n        />\n      )}\n    </StyledModal>\n  );\n};\n\nexport default RateCourse;\n","import { useMemo, useContext } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react/context\";\n\nexport const useRoles = () => {\n  const { user } = useContext(EscolaLMSContext);\n\n  const isTutor = useMemo(() => !!user.value?.roles?.includes(\"tutor\"), [user]);\n  const isStudent = useMemo(\n    () => !!user.value?.roles?.includes(\"student\"),\n    [user]\n  );\n\n  return {\n    isTutor,\n    isStudent,\n  };\n};\n"],"names":["QuestionBoxWrapper","styled","QuestionBox","entityModel","data","textareaPlaceholder","questionnaireTitle","withStarsRating","handleSubmit","onClose","t","useTranslation","answer","setAnswer","useState","submit","rate","jsx","Title","QuestionnaireModelType","jsxs","Rate","Text","TextArea","value","prev","Stack","Row","Button","StyledModal","Modal","initialState","RateCourse","entityId","visible","questionnaire","sendQuestionnaireAnswer","useContext","EscolaLMSContext","state","setState","handleSendAnswer","useCallback","note","prevState","toast","error","handleSave","_a","QuestionType","useRoles","user","isTutor","useMemo","_b","isStudent"],"mappings":"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"}