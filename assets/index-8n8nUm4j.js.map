{"version":3,"file":"index-8n8nUm4j.js","sources":["../../src/components/Skeletons/EntityList/index.tsx","../../src/components/Courses/CoursesCollection/list.tsx","../../src/components/Courses/CoursesCollection/coursesDrawer.tsx","../../src/components/Courses/CoursesCollection/filters.tsx","../../src/components/Courses/CoursesContext.ts","../../src/components/Consultations/List/ConsultationsContext.ts","../../src/hooks/courses/useFilter.ts","../../src/components/Filters/SelectedCategories/index.tsx","../../src/components/Courses/CoursesCollection/index.tsx","../../src/config/courses.ts","../../src/components/Layouts/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Row } from \"react-grid-system\";\n\nimport { isMobile } from \"react-device-detect\";\n\nimport styled from \"styled-components\";\n\nimport { CourseCardSkeleton } from \"@/components/Skeletons/CourseCard\";\n\nconst CoursesListWrapper = styled.section`\n  margin-bottom: ${isMobile ? \"50px\" : \"75px\"};\n`;\n\nconst EntitySkeletonList = () => {\n  return (\n    <CoursesListWrapper>\n      <Row\n        style={{\n          gap: \"30px 0\",\n        }}\n      >\n        {Array.from({ length: 12 }).map((_, index) => (\n          <CourseCardSkeleton\n            key={`index-${index}-skeleton`}\n            colProps={{\n              xl: 3,\n              lg: 4,\n              md: 6,\n            }}\n          />\n        ))}\n      </Row>\n    </CoursesListWrapper>\n  );\n};\n\nexport default EntitySkeletonList;\n","import React from \"react\";\nimport { Row, Col } from \"react-grid-system\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { isMobile } from \"react-device-detect\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { ResponsiveImage } from \"@escolalms/components/lib/components/organisms/ResponsiveImage/ResponsiveImage\";\nimport { NewCourseCard } from \"@escolalms/components/lib/index\";\nimport CategoriesBreadCrumbs from \"@/components/Categories/CategoriesBreadCrumbs\";\nimport CourseImgPlaceholder from \"@/components/Courses/CourseImgPlaceholder\";\nimport { Course } from \"@escolalms/sdk/lib/types/api\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport ProductPrices from \"@/components/ProductPrices\";\n\nimport EntitySkeletonList from \"@/components/Skeletons/EntityList\";\n\nconst CoursesListWrapper = styled.section`\n  margin-bottom: ${isMobile ? \"50px\" : \"75px\"};\n`;\n\ntype Props = {\n  courses: Course[];\n  loading?: boolean;\n};\n\nconst CoursesList: React.FC<Props> = ({ courses, loading }) => {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  if (courses && !loading && courses.length === 0) {\n    return (\n      <Row justify=\"center\">\n        <Text size=\"18\">{t(\"NoCourses\")}</Text>\n      </Row>\n    );\n  }\n\n  if (loading) {\n    return <EntitySkeletonList />;\n  }\n\n  return (\n    <CoursesListWrapper>\n      <Row\n        style={{\n          gap: \"30px 0\",\n        }}\n      >\n        {courses?.map((item) => (\n          <Col md={6} lg={4} xl={3} key={item.id}>\n            <NewCourseCard\n              mobile={isMobile}\n              id={item.id}\n              image={\n                <Link to={`/courses/${item.id}`}>\n                  {item.image_path ? (\n                    <ResponsiveImage\n                      path={item.image_path}\n                      alt={item.title}\n                      srcSizes={[300, 600, 900]}\n                    />\n                  ) : (\n                    <CourseImgPlaceholder />\n                  )}\n                </Link>\n              }\n              price={\n                // @ts-ignore TODO: missed in sdk\n                item.public ? (\n                  <div className=\"course-price\">{t(\"FREE\")}</div>\n                ) : (\n                  <ProductPrices\n                    price={item.product?.price}\n                    oldPrice={item.product?.price_old}\n                    taxRate={item.product?.tax_rate}\n                  />\n                )\n              }\n              title={\n                <Link to={`/courses/${item.id}`}>\n                  <Title level={3} as=\"h3\" className=\"title\">\n                    {item.title}\n                  </Title>\n                </Link>\n              }\n              categories={\n                <CategoriesBreadCrumbs\n                  categories={item.categories}\n                  onCategoryClick={(id) => {\n                    history.push(`/courses?categories[]=${id}`);\n                  }}\n                />\n              }\n            />\n          </Col>\n        ))}\n      </Row>\n    </CoursesListWrapper>\n  );\n};\n\nexport default CoursesList;\n","import React from \"react\";\nimport { Button, DropdownCategories } from \"@escolalms/components/lib/index\";\nimport { Category } from \"@escolalms/sdk/lib/types/api\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  MobileDrawerTypes,\n  SortOrder,\n} from \"@/components/Courses/CoursesCollection\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n  button {\n    border: none;\n  }\n`;\n\ntype Props = {\n  showDrawer: boolean;\n  type: string;\n  prevCategories: Category[];\n  onClearCategories: () => void;\n  handleCategoryChange: (category: Category) => void;\n  categories: Category[];\n  handleSortChange: (type: SortOrder) => void;\n  setMobileDrawerState: (state: {\n    showDrawer: boolean;\n    type: keyof typeof MobileDrawerTypes;\n  }) => void;\n};\n\nconst MobileDrawerContent: React.FC<Props> = ({\n  showDrawer,\n  type,\n  prevCategories,\n  onClearCategories,\n  handleCategoryChange,\n  categories,\n  handleSortChange,\n  setMobileDrawerState,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {showDrawer && type === MobileDrawerTypes.categories && (\n        <DropdownCategories\n          checkedCategories={prevCategories}\n          onClear={() => [\n            onClearCategories(),\n            setMobileDrawerState({\n              showDrawer: false,\n              type: MobileDrawerTypes.categories,\n            }),\n          ]}\n          onChange={handleCategoryChange}\n          categories={categories || []}\n          isInitiallyOpen\n          forMobile\n        />\n      )}\n\n      {showDrawer && type === MobileDrawerTypes.sort && (\n        <Wrapper>\n          <Button\n            mode={\"secondary outline\"}\n            onClick={() => {\n              handleSortChange(\"DESC\");\n              setMobileDrawerState({\n                showDrawer: false,\n                type: MobileDrawerTypes.sort,\n              });\n            }}\n          >\n            {t(\"CoursesPage.newOnes\")}\n          </Button>\n          <Button\n            mode={\"secondary outline\"}\n            onClick={() => {\n              handleSortChange(\"ASC\");\n              setMobileDrawerState({\n                showDrawer: false,\n                type: MobileDrawerTypes.sort,\n              });\n            }}\n          >\n            {t(\"CoursesPage.oldOnes\")}\n          </Button>\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default MobileDrawerContent;\n","import React from \"react\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport {\n  DropdownCategories,\n  DropdownMenu,\n} from \"@escolalms/components/lib/index\";\nimport { isMobile } from \"react-device-detect\";\nimport styled from \"styled-components\";\nimport { ArrowDown, IconSquares } from \"@/icons/index\";\nimport { Category, CourseParams } from \"@escolalms/sdk/lib/types/api\";\nimport {\n  MobileDrawerTypes,\n  SortOrder,\n} from \"@/components/Courses/CoursesCollection\";\nimport { DropdownMenuItem } from \"@escolalms/components/lib/components/molecules/DropdownMenu/DropdownMenu\";\nimport { useTranslation } from \"react-i18next\";\n\nconst FiltersHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  p {\n    margin: 0px;\n  }\n\n  @media (max-width: 335px) {\n    flex-direction: column;\n    gap: 20px;\n  }\n`;\n\nconst SortWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  p {\n    margin: unset;\n  }\n  svg {\n    margin-left: 5px;\n    margin-top: -2px;\n  }\n`;\n\nconst DropdownCategoriesButton = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  .icon-squares {\n    width: 11px;\n    height: 11px;\n    path {\n      fill: ${({ theme }) => theme.primaryColor};\n    }\n  }\n`;\n\ntype Props = {\n  prevCategories: Category[];\n  onClearCategories: () => void;\n  handleCategoryChange: (category: Category) => void;\n  categories: Category[];\n  handleSortChange: (type: SortOrder) => void;\n  params: CourseParams | undefined;\n  setMobileDrawerState: (state: {\n    showDrawer: boolean;\n    type: keyof typeof MobileDrawerTypes;\n  }) => void;\n  parentState: {\n    showDrawer: boolean;\n    type: keyof typeof MobileDrawerTypes;\n  };\n};\n\nconst CoursesFilters: React.FC<Props> = ({\n  prevCategories,\n  onClearCategories,\n  handleCategoryChange,\n  categories,\n  handleSortChange,\n  params,\n  setMobileDrawerState,\n  parentState,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <FiltersHeader>\n      {isMobile ? (\n        <DropdownCategoriesButton\n          onClick={() =>\n            setMobileDrawerState({\n              showDrawer: !parentState.showDrawer,\n              type: MobileDrawerTypes.categories,\n            })\n          }\n        >\n          <IconSquares />\n          <Text size=\"16\">{t(\"CoursesPage.showByCategory\")}</Text>\n          <ArrowDown />\n        </DropdownCategoriesButton>\n      ) : (\n        <DropdownCategories\n          checkedCategories={prevCategories}\n          onClear={onClearCategories}\n          onChange={handleCategoryChange}\n          categories={categories || []}\n          child={\n            <DropdownCategoriesButton>\n              <IconSquares />\n              <Text size=\"16\">{t(\"CoursesPage.showByCategory\")}</Text>\n              <ArrowDown />\n            </DropdownCategoriesButton>\n          }\n        />\n      )}\n\n      <SortWrapper>\n        <Text\n          onClick={() =>\n            isMobile &&\n            setMobileDrawerState({\n              showDrawer: !parentState.showDrawer,\n              type: MobileDrawerTypes.sort,\n            })\n          }\n        >\n          {t(\"CoursesPage.sort\")} {isMobile && <ArrowDown />}\n        </Text>\n        {!isMobile && (\n          <DropdownMenu\n            top={10}\n            menuItems={[\n              {\n                id: \"DESC\",\n                content: t(\"CoursesPage.newOnes\"),\n              },\n              {\n                id: \"ASC\",\n                content: t(\"CoursesPage.oldOnes\"),\n              },\n            ]}\n            onChange={(e: DropdownMenuItem) =>\n              handleSortChange(String(e.id) as SortOrder)\n            }\n            child={\n              <Text>\n                {params && params.order === \"DESC\"\n                  ? t(\"CoursesPage.newOnes\")\n                  : t(\"CoursesPage.oldOnes\")}\n                <ArrowDown />\n              </Text>\n            }\n          />\n        )}\n      </SortWrapper>\n    </FiltersHeader>\n  );\n};\n\nexport default CoursesFilters;\n","import React from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\n\nexport const CoursesContext: React.Context<{\n  courses?: API.PaginatedMetaList<API.Course>;\n  loading?: boolean;\n  params?: API.CourseParams;\n  setParams?: (params: API.CourseParams) => void;\n  onlyFree?: boolean;\n}> = React.createContext({});\n","import React from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\n\nexport const ConsultationsContext: React.Context<{\n  consultations?: API.PaginatedMetaList<API.Consultation>;\n  loading?: boolean;\n  params?: API.ConsultationParams;\n  setParams?: (params: API.ConsultationParams) => void;\n}> = React.createContext({});\n","import { useContext, useEffect, useState, useCallback, useMemo } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { Category } from \"@escolalms/sdk/lib/types/api\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { CoursesContext } from \"@/components/Courses/CoursesContext\";\nimport { ConsultationsContext } from \"@/components/Consultations/List/ConsultationsContext\";\n\ntype Order = \"ASC\" | \"DESC\";\ntype EntityType = \"courses\" | \"consultations\";\n\nconst useFilter = (entityType: EntityType = \"courses\") => {\n  const coursesContext = useContext(CoursesContext);\n  const consultationsContext = useContext(ConsultationsContext);\n  const { fetchCategories, categoryTree } = useContext(EscolaLMSContext);\n\n  const { search, pathname } = useLocation();\n  const history = useHistory();\n  const [prevCategories, setPrevCategories] = useState<Category[]>([]);\n\n  // Determine entity-specific context based on the entityType\n  const { entities, params, setParams, loading } = useMemo(() => {\n    if (entityType === \"courses\") {\n      return {\n        entities: coursesContext.courses,\n        params: coursesContext.params,\n        setParams: coursesContext.setParams,\n        loading: coursesContext.loading,\n      };\n    } else {\n      return {\n        entities: consultationsContext.consultations,\n        params: consultationsContext.params,\n        setParams: consultationsContext.setParams,\n        loading: consultationsContext.loading,\n      };\n    }\n  }, [entityType, coursesContext, consultationsContext]);\n\n  // Category handlers\n  const handleCategoryChange = useCallback(\n    (category: Category) => {\n      const newCategories = prevCategories.some(\n        (item) => item.id === category.id\n      )\n        ? prevCategories.filter((item) => item.id !== category.id)\n        : [...prevCategories, category];\n\n      setPrevCategories(newCategories);\n      setParams &&\n        setParams({\n          ...params,\n          page: 1,\n          \"categories[]\": newCategories.map((item) => item.id),\n        });\n    },\n    [params, prevCategories, setParams]\n  );\n\n  const handleRemoveCategory = useCallback(\n    (id: number) => {\n      const removedCategories = prevCategories.filter((item) => item.id !== id);\n      setPrevCategories(removedCategories);\n      setParams &&\n        setParams({\n          ...params,\n          page: 1,\n          \"categories[]\": removedCategories.map((item) => item.id),\n        });\n    },\n    [params, prevCategories, setParams]\n  );\n  const onClearCategories = useCallback(() => {\n    setPrevCategories([]);\n    setParams &&\n      setParams({\n        ...params,\n        page: 1,\n        order: undefined,\n        \"categories[]\": undefined,\n      });\n  }, [params, setParams]);\n\n  // Sorting and pagination\n  const handleSortChange = useCallback(\n    (order: Order) => {\n      setParams && setParams({ ...params, order });\n    },\n    [params, setParams]\n  );\n\n  const handlePageChange = useCallback(\n    (page: number) => {\n      setParams && setParams({ ...params, page });\n    },\n    [params, setParams]\n  );\n\n  // Category mapping\n  const mapCategories = useCallback((categories: Category[]): Category[] => {\n    return categories.flatMap((category) => [\n      category,\n      ...mapCategories(category.subcategories || []),\n    ]);\n  }, []);\n\n  useEffect(() => {\n    const searchParams = queryString.parse(search);\n    const paramsCategories = searchParams[\"categories[]\"];\n\n    if (paramsCategories) {\n      const mappedCategories = mapCategories(categoryTree.list || []);\n      const selectedCategories = mappedCategories.filter((category) =>\n        (Array.isArray(paramsCategories)\n          ? paramsCategories\n          : [paramsCategories]\n        ).includes(String(category.id))\n      );\n      setPrevCategories(selectedCategories);\n    }\n  }, [search, categoryTree, mapCategories]);\n\n  useEffect(() => {\n    fetchCategories();\n  }, [fetchCategories]);\n\n  useEffect(() => {\n    params && history.push(`${pathname}?${queryString.stringify(params)}`);\n  }, [params, pathname, history]);\n\n  return {\n    entities,\n    loading,\n    prevCategories,\n    handleSortChange,\n    handlePageChange,\n    handleCategoryChange,\n    onClearCategories,\n    handleRemoveCategory,\n    params,\n    categoryTree,\n  };\n};\n\nexport default useFilter;\n","import React from \"react\";\nimport { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\nimport { useTranslation } from \"react-i18next\";\nimport styled, { useTheme } from \"styled-components\";\n\nimport { CloseIcon } from \"@/icons/index\";\n\nconst SelectedCategoriesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 30px;\n  margin-top: 17px;\n  gap: 5px;\n  .clear-categories {\n    all: unset;\n    cursor: pointer;\n    margin-left: 14px;\n    p {\n      margin: 0;\n      color: ${({ theme }) => theme.gray2};\n    }\n  }\n`;\n\nconst SelectedCategory = styled.button`\n  all: unset;\n  border-radius: 19px;\n  border: 1px solid #eaeaea;\n  padding: 8px 13px;\n  margin-right: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  p {\n    margin: 0;\n    margin-right: 17px;\n  }\n`;\n\ntype Props = {\n  onClearCategories: () => void;\n  prevCategories: { id: number; name: string }[];\n  handleRemoveCategory: (id: number) => void;\n};\n\nconst SelectedCategories: React.FC<Props> = ({\n  onClearCategories,\n  prevCategories,\n  handleRemoveCategory,\n}) => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  return (\n    <SelectedCategoriesWrapper>\n      {prevCategories.map((category) => (\n        <SelectedCategory onClick={() => handleRemoveCategory(category.id)}>\n          <Text size={\"13\"}>{category.name}</Text>\n          <CloseIcon color={theme.gray2} />\n        </SelectedCategory>\n      ))}\n      <button className=\"clear-categories\" onClick={onClearCategories}>\n        <Text size=\"13\">{t(\"CoursesPage.clearAll\")}</Text>\n      </button>\n    </SelectedCategoriesWrapper>\n  );\n};\n\nexport default SelectedCategories;\n","import React from \"react\";\nimport Pagination from \"@/components/Common/Pagination\";\nimport MobileDrawer from \"@/components/_App/MobileDrawer\";\nimport CoursesList from \"@/components/Courses/CoursesCollection/list\";\nimport MobileDrawerContent from \"@/components/Courses/CoursesCollection/coursesDrawer\";\nimport CoursesFilters from \"@/components/Courses/CoursesCollection/filters\";\nimport useFilter from \"@/hooks/courses/useFilter\";\nimport SelectedCategories from \"@/components/Filters/SelectedCategories\";\nimport { API } from \"@escolalms/sdk/lib\";\n\nexport type SortOrder = \"ASC\" | \"DESC\";\n\nexport enum MobileDrawerTypes {\n  categories = \"categories\",\n  sort = \"sort\",\n}\n\nconst CoursesCollection: React.FC = () => {\n  const [mobileDrawerState, setMobileDrawerState] = React.useState<{\n    showDrawer: boolean;\n    type: keyof typeof MobileDrawerTypes;\n  }>({\n    showDrawer: false,\n    type: MobileDrawerTypes.categories,\n  });\n\n  const {\n    entities,\n    loading,\n    prevCategories,\n    handleSortChange,\n    handlePageChange,\n    handleRemoveCategory,\n    handleCategoryChange,\n    onClearCategories,\n    params,\n    categoryTree,\n  } = useFilter(\"courses\");\n\n  return (\n    <>\n      <CoursesFilters\n        prevCategories={prevCategories}\n        onClearCategories={onClearCategories}\n        handleCategoryChange={handleCategoryChange}\n        categories={categoryTree.list || []}\n        handleSortChange={handleSortChange}\n        params={params}\n        setMobileDrawerState={setMobileDrawerState}\n        parentState={mobileDrawerState}\n      />\n\n      {prevCategories.length > 0 && (\n        <SelectedCategories\n          onClearCategories={onClearCategories}\n          prevCategories={prevCategories}\n          handleRemoveCategory={handleRemoveCategory}\n        />\n      )}\n\n      <MobileDrawer\n        isOpen={mobileDrawerState.showDrawer}\n        onClose={() =>\n          setMobileDrawerState({\n            showDrawer: false,\n            type: MobileDrawerTypes.categories,\n          })\n        }\n        height={\n          mobileDrawerState.type === MobileDrawerTypes.categories\n            ? \"40vh\"\n            : \"12vh\"\n        }\n      >\n        <MobileDrawerContent\n          showDrawer={mobileDrawerState.showDrawer}\n          type={mobileDrawerState.type}\n          prevCategories={prevCategories}\n          onClearCategories={onClearCategories}\n          handleCategoryChange={handleCategoryChange}\n          categories={categoryTree.list || []}\n          handleSortChange={handleSortChange}\n          setMobileDrawerState={setMobileDrawerState}\n        />\n      </MobileDrawer>\n\n      <CoursesList\n        courses={(entities?.data as API.Course[]) || []}\n        loading={loading}\n      />\n\n      {Number(entities?.meta?.total) > Number(entities?.meta?.per_page) && (\n        <Pagination\n          total={Number(entities?.meta?.total)}\n          perPage={Number(entities?.meta?.per_page)}\n          currentPage={Number(entities?.meta?.current_page)}\n          onPage={handlePageChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CoursesCollection;\n","export const COURSES_ON_PAGE = 12;\n","import Container from \"@/components/Common/Container\";\nimport styled from \"styled-components\";\nimport { Title } from \"@escolalms/components/lib/index\";\n\nconst Wrapper = styled.section`\n  padding-top: 31px;\n`;\n\nconst StyledHeader = styled.div`\n  background: ${({ theme }) => theme.gray4};\n  padding: 25px 0px 10px;\n  position: relative;\n  margin-bottom: 16px;\n`;\n\ntype Props = {\n  children: React.ReactNode;\n  title: string;\n};\n\nconst EntityPageWrapper: React.FC<Props> = ({ children, title }) => {\n  return (\n    <Wrapper className=\"consultations-page\">\n      <StyledHeader>\n        <Container>\n          <Title level={1}> {title}</Title>\n        </Container>\n      </StyledHeader>\n      <Container>{children}</Container>\n    </Wrapper>\n  );\n};\n\nexport default EntityPageWrapper;\n"],"names":["CoursesListWrapper","styled","isMobile","EntitySkeletonList","jsx","Row","_","index","CourseCardSkeleton","CoursesList","courses","loading","history","useHistory","t","useTranslation","Text","item","Col","NewCourseCard","Link","ResponsiveImage","CourseImgPlaceholder","ProductPrices","_a","_b","_c","Title","CategoriesBreadCrumbs","id","Wrapper","MobileDrawerContent","showDrawer","type","prevCategories","onClearCategories","handleCategoryChange","categories","handleSortChange","setMobileDrawerState","jsxs","Fragment","MobileDrawerTypes","DropdownCategories","Button","FiltersHeader","SortWrapper","DropdownCategoriesButton","theme","CoursesFilters","params","parentState","IconSquares","ArrowDown","DropdownMenu","e","CoursesContext","React","ConsultationsContext","useFilter","entityType","coursesContext","useContext","consultationsContext","fetchCategories","categoryTree","EscolaLMSContext","search","pathname","useLocation","setPrevCategories","useState","entities","setParams","useMemo","useCallback","category","newCategories","handleRemoveCategory","removedCategories","order","handlePageChange","page","mapCategories","useEffect","paramsCategories","queryString","selectedCategories","SelectedCategoriesWrapper","SelectedCategory","SelectedCategories","useTheme","CloseIcon","CoursesCollection","mobileDrawerState","MobileDrawer","Pagination","_d","_e","COURSES_ON_PAGE","StyledHeader","EntityPageWrapper","children","title","Container"],"mappings":"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"}