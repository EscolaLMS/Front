{"version":3,"file":"sidebar-DQT3ovxU.js","sources":["../../src/hooks/useEntityPrice.ts","../../src/pages/courses/course/styles.ts","../../src/pages/courses/course/Components/CourseAuthor/index.tsx","../../src/types/index.ts","../../src/pages/courses/course/Components/CourseMainInfo/index.tsx","../../src/hooks/courses/useCourseAnswers.ts","../../src/pages/courses/course/Components/CourseRatings/AnswerComponent/styles.ts","../../src/pages/courses/course/Components/CourseRatings/AnswerComponent/index.tsx","../../src/pages/courses/course/Components/CourseRatings/styles.ts","../../src/pages/courses/course/Components/CourseRatings/Reviews/Content/index.tsx","../../src/pages/courses/course/Components/CourseRatings/Provider/index.tsx","../../src/pages/courses/course/Components/CourseRatings/Reviews/index.tsx","../../src/pages/courses/course/Components/CourseRatings/index.tsx","../../src/pages/courses/course/Components/CourseRelated/index.tsx","../../src/components/Skeletons/CoursePage/sidebar.tsx"],"sourcesContent":["import { useMemo } from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\n\nexport enum EntityRedirectBuyType {\n  BUYABLE = \"buyable\",\n  FREE = \"free\",\n  OFFER = \"offer\",\n  OWNED = \"owned\",\n}\n\nexport const useEntityBuyableType = (\n  entity?: API.Course | API.Consultation,\n  userCourses?: number[]\n): EntityRedirectBuyType => {\n  return useMemo(() => {\n    if (\n      entity?.product?.owned ||\n      (Array.isArray(userCourses) && entity && userCourses.includes(entity.id))\n    ) {\n      return EntityRedirectBuyType.OWNED;\n    }\n\n    if (!entity?.product?.purchasable) {\n      return EntityRedirectBuyType.OFFER;\n    }\n\n    if (!entity?.product?.gross_price) {\n      return EntityRedirectBuyType.FREE;\n    }\n\n    return EntityRedirectBuyType.BUYABLE;\n  }, [entity, userCourses]);\n};\n","import styled, { createGlobalStyle } from \"styled-components\";\n\nexport const StyledCoursePage = styled.div`\n  padding-top: 40px;\n  section {\n    margin-bottom: 40px;\n    @media (max-width: 991px) {\n      margin-bottom: 20px;\n    }\n    &.with-border {\n      padding-bottom: 45px;\n      border-bottom: 1px solid\n        ${({ theme }) => (theme.mode === \"dark\" ? theme.gray1 : theme.gray5)};\n    }\n    &.padding-right {\n      padding-right: 150px;\n      @media (max-width: 991px) {\n        padding-right: 70px;\n      }\n      @media (max-width: 768px) {\n        padding-right: 0;\n      }\n    }\n  }\n  .sidebar-col {\n    padding-bottom: 45px;\n  }\n  .course-main-info {\n    h1 {\n      margin-top: 5px;\n      margin-bottom: 10px;\n      @media (max-width: 991px) {\n        font-size: 30px;\n      }\n    }\n    .image-wrapper {\n      margin-top: 13px;\n\n      img {\n        border-radius: ${({ theme }) => theme.cardRadius}px;\n      }\n      @media (max-width: 991px) {\n        display: flex;\n        justify-content: center;\n        width: 100%;\n\n        img {\n          display: block;\n          margin: 0 auto;\n        }\n      }\n    }\n    .labels-row {\n      display: flex;\n      justify-content: flex-start;\n      align-items: flex-start;\n      column-gap: 20px;\n      margin: 35px 0;\n      @media (max-width: 991px) {\n        margin: 35px 0 0;\n      }\n      @media (max-width: 374px) {\n        flex-direction: column;\n        row-gap: 16px;\n      }\n      &--bottom {\n        column-gap: 45px;\n        margin-top: 120px;\n        margin-bottom: 0;\n        flex-wrap: wrap;\n        @media (max-width: 991px) {\n          column-gap: 0;\n          margin-top: 55px;\n        }\n        @media (max-width: 374px) {\n          flex-direction: row;\n        }\n        .single-label {\n          @media (max-width: 991px) {\n            flex: 0 0 50%;\n            max-width: 50%;\n            margin-bottom: 20px;\n          }\n        }\n      }\n    }\n  }\n  .course-tutor {\n    .ranking-row {\n      display: none !important;\n    }\n  }\n  .course-ratings {\n    @media (max-width: 991px) {\n      margin-top: 40px;\n    }\n  }\n  .course-description,\n  .course-description-short {\n    p {\n      font-size: 16px;\n    }\n  }\n  .course-companies {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    @media (max-width: 768px) {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n\n    .companies-row {\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n      column-gap: 70px;\n      .single-company {\n        max-height: 85px;\n        max-width: 65px;\n      }\n      @media (max-width: 768px) {\n        column-gap: 0;\n        justify-content: space-between;\n        width: 100%;\n      }\n    }\n\n    p {\n      max-width: 220px;\n      margin-right: 50px;\n    }\n  }\n  .course-description {\n    /* padding: 50px 45px;\n    margin: 45px 0; */\n    /* background-color: ${({ theme }) =>\n      theme.mode === \"dark\" ? theme.gray1 : theme.gray5};\n    border-radius: ${({ theme }) => theme.cardRadius}px; */\n  }\n\n  .course-tutor {\n    a {\n      text-decoration: none !important;\n    }\n  }\n\n  .single-content {\n    box-sizing: border-box;\n  }\n`;\n\nexport const ModalOverwriteGlobal = createGlobalStyle`\n  .ReactModal__Overlay  {\n    z-index: 1500 !important;\n  }\n`;\n","import { FC } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { isMobile } from \"react-device-detect\";\nimport { Tutor } from \"@escolalms/components/lib/components/molecules/Tutor/Tutor\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { APP_CONFIG } from \"@/config/app\";\nimport { API_URL } from \"@/config/index\";\nimport { Col } from \"react-grid-system\";\n\ninterface CourseAuthorProps {\n  author: API.UserItem;\n}\n\nexport const CourseAuthor: FC<CourseAuthorProps> = ({ author }) => {\n  return (\n    <Col lg={6}>\n      {/* <Link to={`/tutors/${author.id}`}> */}\n      <Tutor\n        mobile={isMobile}\n        avatar={{\n          alt: `${author.first_name} ${author.last_name}`,\n          src: author.path_avatar\n            ? `${API_URL}/api/images/img?path=${author.path_avatar}`\n            : APP_CONFIG.tutorPlaceholderPath,\n        }}\n        fullName={`${author.first_name} ${author.last_name}`}\n        description={author.bio}\n      />\n      {/* </Link> */}\n    </Col>\n  );\n};\n","import {\n  PURCHASES_ERROR_CODE,\n  PurchasesError,\n} from \"@revenuecat/purchases-capacitor\";\n\nexport enum StateTypes {\n  INIT = \"INIT\",\n  LOADED = \"LOADED\",\n  LOADING = \"LOADING\",\n  ERROR = \"ERROR\",\n}\n\nexport type CapacitorPaymentError = {\n  code: PURCHASES_ERROR_CODE;\n  data: PurchasesError;\n};\n","import { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ResponsiveImage } from \"@escolalms/components/lib/components/organisms/ResponsiveImage/ResponsiveImage\";\nimport { isMobile } from \"react-device-detect\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { Col, Row } from \"react-grid-system\";\nimport CategoriesBreadCrumbs from \"@/components/Categories/CategoriesBreadCrumbs\";\nimport { Rating, Text } from \"@escolalms/components/lib/index\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { StateTypes } from \"@/types/index\";\nimport { QuestionnaireStarsModel } from \"@escolalms/sdk/lib/types/api\";\nimport ContentLoader from \"@/components/_App/ContentLoader\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RatingWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  p {\n    margin: 0;\n  }\n`;\n\ntype State =\n  | { type: StateTypes.INIT }\n  | { type: StateTypes.LOADING }\n  | { type: StateTypes.LOADED; rating: QuestionnaireStarsModel }\n  | { type: StateTypes.ERROR; error: string };\n\ninterface CourseMainInfoProps {\n  courseData: API.Course;\n}\n\nexport const CourseMainInfo: FC<CourseMainInfoProps> = ({ courseData }) => {\n  const { fetchQuestionnaireStarsByModel } = useContext(EscolaLMSContext);\n  const [state, setState] = useState<State>({ type: StateTypes.INIT });\n  const history = useHistory();\n\n  const fetchRating = useCallback(async () => {\n    if (courseData.id) {\n      try {\n        setState({ type: StateTypes.LOADING });\n        const req = await fetchQuestionnaireStarsByModel(\n          \"course\",\n          Number(courseData.id)\n        );\n        if (req.success) {\n          setState({ type: StateTypes.LOADED, rating: req.data });\n        }\n      } catch (error) {\n        setState({\n          type: StateTypes.ERROR,\n          error: error instanceof Error ? error.message : \"Unknown error\",\n        });\n      }\n    }\n  }, [courseData.id, fetchQuestionnaireStarsByModel]);\n\n  useEffect(() => {\n    fetchRating();\n  }, [courseData.id, fetchRating]);\n\n  return (\n    <section className=\"course-main-info\">\n      <Row>\n        <Col lg={12}>\n          <CategoriesBreadCrumbs\n            categories={courseData.categories}\n            onCategoryClick={(id) => {\n              history.push(`/courses/?categories[]=${id}`);\n            }}\n          />\n\n          <Title mobile={isMobile} level={1}>\n            {courseData.title}\n          </Title>\n\n          {state.type === StateTypes.LOADED ? (\n            <RatingWrapper>\n              <Rating\n                ratingValue={state.rating.avg_rate}\n                label={`${state.rating.avg_rate}`}\n              />\n              <Text size=\"13\">Śr. ocena kursu</Text>・\n              <div>\n                <Text size=\"13\">\n                  Dodane opinie <strong>{state.rating.count_answers}</strong>\n                </Text>\n              </div>\n            </RatingWrapper>\n          ) : state.type === StateTypes.LOADING ? (\n            <ContentLoader width={\"20px\"} height=\"20px\" />\n          ) : state.type === StateTypes.ERROR ? (\n            state.error\n          ) : null}\n        </Col>\n        <Col lg={12}>\n          {courseData.image_path && (\n            <div className=\"image-wrapper\">\n              <ResponsiveImage\n                path={courseData.image_path}\n                srcSizes={[790 * 0.5, 790, 2 * 790]}\n              />\n            </div>\n          )}\n        </Col>\n      </Row>\n    </section>\n  );\n};\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport { QuestionnaireModelType } from \"../../types/questionnaire\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"@/utils/toast\";\n\nconst initialState = {\n  total: 0,\n  per_page: 3,\n  page: 1,\n  current_page: 1,\n};\n\ninterface Props {\n  questionId: number | null;\n  courseId: number | undefined;\n}\n\nexport const useCourseAnswers = ({ questionId, courseId }: Props) => {\n  const [questionnaireAnswers, setQuestionnaireAnswers] = useState<\n    API.QuestionAnswer[] | undefined\n  >(undefined);\n  const [answersMeta, setAnswersMeta] = useState(initialState);\n  const [loading, setLoading] = useState(true);\n  const { fetchQuestionnairesAnswers } = useContext(EscolaLMSContext);\n  const { t } = useTranslation();\n\n  const handleFetchQuestionnairesAnswers = useCallback(\n    (page: number) => {\n      if (questionId && courseId) {\n        setLoading(true);\n        fetchQuestionnairesAnswers(\n          QuestionnaireModelType.COURSE,\n          Number(courseId),\n          questionId,\n          {\n            per_page: answersMeta.per_page,\n            page: page,\n            order_by: \"updated_at\",\n            order: \"DESC\",\n          }\n        )\n          .then((res) => {\n            if (res.success) {\n              setQuestionnaireAnswers(res.data);\n              setAnswersMeta((prev) => ({\n                ...prev,\n                total: res.meta.total,\n                current_page: res.meta.current_page,\n                page: res.meta.current_page,\n              }));\n            }\n          })\n          .catch((error) => {\n            toast(t<string>(\"UnexpectedError\"), error);\n            console.log(error);\n          })\n          .finally(() => setLoading(false));\n      }\n    },\n    [answersMeta, fetchQuestionnairesAnswers, courseId, questionId, t]\n  );\n\n  const onPageChange = useCallback((page: number) => {\n    setAnswersMeta((prev) => ({\n      ...prev,\n      current_page: page,\n    }));\n  }, []);\n\n  useEffect(() => {\n    if (answersMeta.page !== answersMeta.current_page) {\n      handleFetchQuestionnairesAnswers(answersMeta.current_page);\n    }\n  }, [\n    answersMeta.current_page,\n    answersMeta.page,\n    handleFetchQuestionnairesAnswers,\n  ]);\n\n  useEffect(() => {\n    setAnswersMeta(initialState);\n    handleFetchQuestionnairesAnswers(initialState.page);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questionId]);\n\n  return {\n    answersMeta,\n    questionnaireAnswers,\n    loading,\n    onPageChange,\n  };\n};\n","import { Row } from \"@escolalms/components/lib/components/atoms/Row/index\";\nimport styled from \"styled-components\";\n\nexport const Container = styled(Row)`\n  justify-content: space-between;\n\n  background: ${({ theme }) => theme.white};\n`;\n","import { Text } from \"@escolalms/components/lib/components/atoms/Typography/Text\";\n\nimport { API } from \"@escolalms/sdk/lib\";\nimport { FC } from \"react\";\nimport { Container } from \"./styles\";\n\nimport { Avatar } from \"@escolalms/components/lib/components/atoms/Avatar/Avatar\";\nimport { Row } from \"@escolalms/components/lib/components/atoms/Row/index\";\nimport { Stack } from \"@escolalms/components/lib/components/atoms/Stack/index\";\nimport { APP_CONFIG } from \"@/config/app\";\nimport { formatDate } from \"@/utils/date\";\n\nimport styled, { useTheme } from \"styled-components\";\n\nconst AnswerWrapper = styled.div`\n  .date {\n    color: ${({ theme }) => theme.gray2};\n    margin-bottom: 5px;\n  }\n`;\n\nconst RandomAvatar = styled.div`\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  object-fit: cover;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  p {\n    color: white;\n    text-transform: uppercase;\n  }\n`;\n\ninterface AnswerComponentProps {\n  question: API.QuestionAnswer;\n}\n\nconst AvatarWithInitial: FC<{ name: string }> = ({ name }) => {\n  const randomColor = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n  };\n\n  const initials = name.charAt(0).toUpperCase();\n\n  return (\n    <RandomAvatar style={{ backgroundColor: randomColor() }}>\n      <Text size={\"18\"}>{initials}</Text>\n    </RandomAvatar>\n  );\n};\n\nexport const AnswerComponent: FC<AnswerComponentProps> = ({ question }) => {\n  const { user, note, updated_at } = question;\n  const theme = useTheme();\n\n  if (!note) {\n    return null;\n  }\n\n  return (\n    <AnswerWrapper>\n      <Container>\n        <Row $gap={19}>\n          {user.avatar ? (\n            <Avatar src={user.avatar} alt={`user-avatar-${user.name}`} />\n          ) : (\n            <AvatarWithInitial name={user.name} />\n          )}\n\n          <Stack $justifyContent=\"flex-start\" $alignItems=\"flex-start\">\n            <Text noMargin color={theme.gray2} className=\"date\" size=\"13\">\n              {formatDate(updated_at, APP_CONFIG.defaultDateFormat)}\n            </Text>\n\n            <Text className=\"note\" size=\"13\">\n              {note}\n            </Text>\n          </Stack>\n        </Row>\n      </Container>\n    </AnswerWrapper>\n  );\n};\n","import { Stack } from \"@escolalms/components/lib/components/atoms/Stack/index\";\nimport { Title } from \"@escolalms/components/lib/components/atoms/Typography/Title\";\nimport styled from \"styled-components\";\n\nexport const StyledStack = styled(Stack)`\n  gap: 22px;\n  margin: 16px auto;\n`;\n\nexport const StyledTitle = styled(Title)`\n  margin-bottom: 16px;\n`;\n\nexport const PaginationContainerStyled = styled.div`\n  margin: 0 auto;\n`;\n","import { useCourseAnswers } from \"@/hooks/courses/useCourseAnswers\";\nimport { Spin } from \"@escolalms/components/lib/components/atoms/Spin/Spin\";\nimport Pagination from \"@/components/Common/Pagination\";\nimport { AnswerComponent } from \"../../AnswerComponent\";\nimport {\n  StyledStack,\n  PaginationContainerStyled,\n  StyledTitle,\n} from \"../../styles\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Props {\n  courseId: number;\n  questionId: number;\n}\n\nexport const CourseRatingsReviewsContent = ({\n  courseId,\n  questionId,\n}: Props) => {\n  const { answersMeta, loading, onPageChange, questionnaireAnswers } =\n    useCourseAnswers({\n      questionId,\n      courseId,\n    });\n  const { t } = useTranslation();\n\n  return (\n    <StyledStack>\n      {loading ? (\n        <Spin />\n      ) : (questionnaireAnswers || [])?.length > 0 ? (\n        <>\n          <StyledTitle level={4}>\n            {t(\"CoursePage.CourseRatingsTitle\")}\n          </StyledTitle>\n          {(questionnaireAnswers || []).map((question) => (\n            <AnswerComponent question={question} />\n          ))}\n          {answersMeta.total > answersMeta.per_page && (\n            <PaginationContainerStyled>\n              <Pagination\n                total={answersMeta.total}\n                perPage={answersMeta.per_page}\n                currentPage={answersMeta.current_page}\n                onPage={onPageChange}\n              />\n            </PaginationContainerStyled>\n          )}\n        </>\n      ) : null}\n    </StyledStack>\n  );\n};\n","import { API } from \"@escolalms/sdk/lib\";\nimport {\n  PropsWithChildren,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCourseQuestionnaireReviewQuestion } from \"@/utils/questionnaires\";\nimport { QuestionType } from \"@/types/questionnaire\";\n\nconst initialFunction = () => console.warn(\"INITIAL STATE\");\n\ntype CourseRatingsContextProps = {\n  questionnaires: API.Questionnaire[];\n  questionnaireId: number | null;\n  setQuestionnaireId: (state: number | null) => void;\n  questionId: number | null;\n  setQuestionId: (state: number | null) => void;\n  reviewId: number | undefined;\n  courseId: number | undefined;\n};\n\nexport const CourseRatingsContext = createContext<CourseRatingsContextProps>({\n  questionnaires: [],\n  questionnaireId: null,\n  setQuestionnaireId: initialFunction,\n  questionId: null,\n  setQuestionId: initialFunction,\n  reviewId: undefined,\n  courseId: undefined,\n});\n\ntype ProviderProps = PropsWithChildren & {\n  questionnaires: API.Questionnaire[];\n};\n\nexport const CourseRatingProvider = ({\n  children,\n  questionnaires,\n}: ProviderProps) => {\n  const [questionnaireId, setQuestionnaireId] =\n    useState<CourseRatingsContextProps[\"questionnaireId\"]>(null);\n  const [questionId, setQuestionId] =\n    useState<CourseRatingsContextProps[\"questionId\"]>(null);\n  const { id } = useParams<{ id: string }>();\n  const firstQuestionnaire = questionnaires?.at(0);\n  const firstQuestion = firstQuestionnaire?.questions?.find(\n    ({ type }) => type === QuestionType.RATE\n  );\n  const reviewId = getCourseQuestionnaireReviewQuestion({\n    questionnaires,\n    questionnaireId,\n    questionType: QuestionType.REVIEW,\n  });\n\n  // Set first questionnaire on init\n  useEffect(() => {\n    if (firstQuestionnaire?.id && !questionnaireId) {\n      setQuestionnaireId(firstQuestionnaire.id);\n    }\n  }, [firstQuestionnaire?.id, questionnaireId]);\n  // Set first question on init\n  useEffect(() => {\n    if (firstQuestion?.id && !questionId) {\n      setQuestionId(firstQuestion.id);\n    }\n  }, [firstQuestion?.id, questionId]);\n\n  return (\n    <CourseRatingsContext.Provider\n      value={{\n        questionnaires,\n        questionnaireId,\n        setQuestionnaireId,\n        questionId,\n        setQuestionId,\n        reviewId,\n        courseId: Number(id),\n      }}\n    >\n      {children}\n    </CourseRatingsContext.Provider>\n  );\n};\n\nexport const useCourseRatingContext = () => {\n  const context = useContext(CourseRatingsContext);\n\n  if (!CourseRatingsContext) {\n    throw new Error(\n      \"useCourseRatingContext must be used inside the CourseRatingProvider\"\n    );\n  }\n\n  return context;\n};\n","import { memo } from \"react\";\nimport { CourseRatingsReviewsContent } from \"./Content\";\nimport { useCourseRatingContext } from \"../Provider\";\n\nexport const CourseRatingsReviews = memo(() => {\n  const { courseId, reviewId } = useCourseRatingContext();\n\n  return (\n    <>\n      {courseId && reviewId && (\n        <CourseRatingsReviewsContent\n          courseId={courseId}\n          questionId={reviewId}\n        />\n      )}\n    </>\n  );\n});\n","import { FC, memo } from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport { CourseRatingsReviews } from \"./Reviews\";\nimport { CourseRatingProvider } from \"./Provider\";\n\ninterface CourseRatingsProps {\n  questionnaires: API.Questionnaire[];\n}\n\nexport const CourseRatings: FC<CourseRatingsProps> = memo(\n  ({ questionnaires }) => {\n    return (\n      <CourseRatingProvider questionnaires={questionnaires}>\n        <section className=\"course-ratings\">\n          <CourseRatingsReviews />\n        </section>\n      </CourseRatingProvider>\n    );\n  }\n);\n","import { useTranslation } from \"react-i18next\";\nimport { Col, Row } from \"react-grid-system\";\nimport Container from \"@/components/Common/Container\";\nimport DisplayCourses from \"@/components/Courses/DisplayCoursesSlider\";\nimport { Product } from \"@escolalms/sdk/lib/types/api\";\nimport SwiperSlider from \"@/components/Courses/CoursesSlider/swiper\";\nimport { SwiperSlide } from \"swiper/react\";\nimport { NewCourseCard, Title } from \"@escolalms/components/lib/index\";\nimport { isMobile } from \"react-device-detect\";\nimport CourseImgPlaceholder from \"@/components/Courses/CourseImgPlaceholder\";\nimport ResponsiveImage from \"@escolalms/components/lib/components/organisms/ResponsiveImage/ResponsiveImage\";\nimport { Link } from \"react-router-dom\";\nimport ProductPrices from \"@/components/ProductPrices\";\nimport styled from \"styled-components\";\n\nconst SectionWrapper = styled.section`\n  position: relative;\n  margin-top: 100px;\n  @media (max-width: 991px) {\n    margin-top: 40px;\n  }\n  .content-container {\n    h2 {\n      margin-bottom: 20px;\n    }\n    .swiper {\n      padding: 7px 10px;\n      margin: 0px -15px;\n    }\n  }\n`;\n\ntype Props = {\n  relatedProducts?: Product[];\n};\n\nexport const CourseRelated: React.FC<Props> = ({ relatedProducts }) => {\n  const { t } = useTranslation();\n\n  return (\n    <SectionWrapper className=\"course-related-courses\">\n      <Container>\n        <Row>\n          <Col lg={12}>\n            {relatedProducts && relatedProducts?.length > 0 && (\n              <div className=\"content-container\">\n                <Title level={1} as=\"h2\">\n                  {t(\"CoursePage.RelatedCoursesTitle\")}\n                </Title>\n                <SwiperSlider slidesPerView={4}>\n                  {relatedProducts?.map((product) => (\n                    <SwiperSlide key={product?.id}>\n                      <NewCourseCard\n                        mobile={isMobile}\n                        id={product?.id}\n                        image={\n                          // @ts-ignore TODO: missed in sdk\n                          <Link to={`/courses/${product?.productables[0]?.id}`}>\n                            {product?.poster_path ? (\n                              <ResponsiveImage\n                                path={product?.poster_path}\n                                alt={product?.name}\n                                srcSizes={[300, 600, 900]}\n                              />\n                            ) : (\n                              <CourseImgPlaceholder />\n                            )}\n                          </Link>\n                        }\n                        price={\n                          // @ts-ignore TODO: missed in sdk\n                          item?.public ? (\n                            <div className=\"course-price\">{t(\"FREE\")}</div>\n                          ) : (\n                            <ProductPrices\n                              price={product?.price}\n                              oldPrice={product?.price_old}\n                              taxRate={product?.tax_rate}\n                            />\n                          )\n                        }\n                        title={\n                          <Link to={`/courses/${product.id}`}>\n                            <Title level={3} as=\"h3\" className=\"title\">\n                              {product?.name}\n                            </Title>\n                          </Link>\n                        }\n                      />\n                    </SwiperSlide>\n                  ))}\n                </SwiperSlider>\n              </div>\n            )}\n\n            <div className=\"content-container\">\n              <DisplayCourses\n                titleText={t(\"CoursePage.InterestTitle\")}\n                params={{\n                  per_page: 8,\n                  order_by: \"created_at\",\n                  order: \"ASC\",\n                }}\n                slidesPerView={4}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </SectionWrapper>\n  );\n};\n","import Skeleton from \"react-loading-skeleton\";\nimport styled from \"styled-components\";\n\nconst SkeletonWrapper = styled.div`\n  .react-loading-skeleton {\n    border-radius: 10px;\n  }\n`;\n\nconst SidebarSkeleton = () => {\n  return (\n    <SkeletonWrapper>\n      <Skeleton width={\"100%\"} height={350} />\n    </SkeletonWrapper>\n  );\n};\n\nexport default SidebarSkeleton;\n"],"names":["EntityRedirectBuyType","useEntityBuyableType","entity","userCourses","useMemo","_a","_b","_c","StyledCoursePage","styled","theme","ModalOverwriteGlobal","createGlobalStyle","CourseAuthor","author","jsx","Col","Tutor","isMobile","API_URL","APP_CONFIG","StateTypes","RatingWrapper","CourseMainInfo","courseData","fetchQuestionnaireStarsByModel","useContext","EscolaLMSContext","state","setState","useState","history","useHistory","fetchRating","useCallback","req","error","useEffect","Row","jsxs","CategoriesBreadCrumbs","id","Title","Rating","Text","ContentLoader","ResponsiveImage","initialState","useCourseAnswers","questionId","courseId","questionnaireAnswers","setQuestionnaireAnswers","answersMeta","setAnswersMeta","loading","setLoading","fetchQuestionnairesAnswers","t","useTranslation","handleFetchQuestionnairesAnswers","page","QuestionnaireModelType","res","prev","toast","onPageChange","Container","AnswerWrapper","RandomAvatar","AvatarWithInitial","name","randomColor","initials","AnswerComponent","question","user","note","updated_at","useTheme","Avatar","Stack","formatDate","StyledStack","StyledTitle","PaginationContainerStyled","CourseRatingsReviewsContent","Spin","Fragment","Pagination","initialFunction","CourseRatingsContext","createContext","CourseRatingProvider","children","questionnaires","questionnaireId","setQuestionnaireId","setQuestionId","useParams","firstQuestionnaire","firstQuestion","type","QuestionType","reviewId","getCourseQuestionnaireReviewQuestion","useCourseRatingContext","context","CourseRatingsReviews","memo","CourseRatings","SectionWrapper","CourseRelated","relatedProducts","SwiperSlider","product","SwiperSlide","NewCourseCard","Link","CourseImgPlaceholder","ProductPrices","DisplayCourses","SkeletonWrapper","SidebarSkeleton","Skeleton"],"mappings":"uoBAGY,IAAAA,IAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,KAAO,OACPA,EAAA,MAAQ,QACRA,EAAA,MAAQ,QAJEA,IAAAA,IAAA,CAAA,CAAA,EAOC,MAAAC,GAAuB,CAClCC,EACAC,IAEOC,UAAQ,IAAM,WACnB,OACEC,EAAAH,GAAA,YAAAA,EAAQ,UAAR,MAAAG,EAAiB,OAChB,MAAM,QAAQF,CAAW,GAAKD,GAAUC,EAAY,SAASD,EAAO,EAAE,EAEhE,SAGJI,EAAAJ,GAAA,YAAAA,EAAQ,UAAR,MAAAI,EAAiB,aAIjBC,EAAAL,GAAA,YAAAA,EAAQ,UAAR,MAAAK,EAAiB,YAIf,UAHE,OAJA,OAOF,EACN,CAACL,EAAQC,CAAW,CAAC,EC7BbK,GAAmBC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAU7B,CAAC,CAAE,MAAAC,CAAa,IAAAA,EAAM,OAAS,OAASA,EAAM,MAAQA,EAAM,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA2BniG7B,CAAC,CAAE,MAAAA,CACxB,IAAAA,EAAM,OAAS,OAASA,EAAM,MAAQA,EAAM,KAAK;AAAA,qBAClC,CAAC,CAAE,MAAAA,KAAYA,EAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcvCC,GAAuBC;AAAAA;AAAAA;AAAAA;AAAAA,EC3IvBC,GAAsC,CAAC,CAAE,OAAAC,KAElDC,EAAAA,IAACC,EAAAA,IAAI,CAAA,GAAI,EAEP,SAAAD,EAAA,IAACE,EAAA,CACC,OAAQC,EACR,OAAQ,CACN,IAAK,GAAGJ,EAAO,UAAU,IAAIA,EAAO,SAAS,GAC7C,IAAKA,EAAO,YACR,GAAGK,CAAO,wBAAwBL,EAAO,WAAW,GACpDM,EAAW,oBACjB,EACA,SAAU,GAAGN,EAAO,UAAU,IAAIA,EAAO,SAAS,GAClD,YAAaA,EAAO,GAAA,CAAA,EAGxB,ECxBQ,IAAAO,GAAAA,IACVA,EAAA,KAAO,OACPA,EAAA,OAAS,SACTA,EAAA,QAAU,UACVA,EAAA,MAAQ,QAJEA,IAAAA,GAAA,CAAA,CAAA,ECUZ,MAAMC,GAAgBb,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBhBc,GAA0C,CAAC,CAAE,WAAAC,KAAiB,CACzE,KAAM,CAAE,+BAAAC,CAAA,EAAmCC,EAAA,WAAWC,kBAAgB,EAChE,CAACC,EAAOC,CAAQ,EAAIC,EAAAA,SAAgB,CAAE,KAAMT,EAAW,KAAM,EAC7DU,EAAUC,EAAW,EAErBC,EAAcC,EAAAA,YAAY,SAAY,CAC1C,GAAIV,EAAW,GACT,GAAA,CACFK,EAAS,CAAE,KAAMR,EAAW,OAAA,CAAS,EACrC,MAAMc,EAAM,MAAMV,EAChB,SACA,OAAOD,EAAW,EAAE,CACtB,EACIW,EAAI,SACNN,EAAS,CAAE,KAAMR,EAAW,OAAQ,OAAQc,EAAI,KAAM,QAEjDC,EAAO,CACLP,EAAA,CACP,KAAMR,EAAW,MACjB,MAAOe,aAAiB,MAAQA,EAAM,QAAU,eAAA,CACjD,CAAA,CAGJ,EAAA,CAACZ,EAAW,GAAIC,CAA8B,CAAC,EAElDY,OAAAA,EAAAA,UAAU,IAAM,CACFJ,EAAA,CACX,EAAA,CAACT,EAAW,GAAIS,CAAW,CAAC,EAG5BlB,EAAA,IAAA,UAAA,CAAQ,UAAU,mBACjB,gBAACuB,MACC,CAAA,SAAA,CAACC,EAAAA,KAAAvB,EAAAA,IAAA,CAAI,GAAI,GACP,SAAA,CAAAD,EAAA,IAACyB,EAAA,CACC,WAAYhB,EAAW,WACvB,gBAAkBiB,GAAO,CACfV,EAAA,KAAK,0BAA0BU,CAAE,EAAE,CAAA,CAC7C,CACF,QAECC,EAAAA,MAAM,CAAA,OAAQxB,EAAU,MAAO,EAC7B,WAAW,MACd,EAECU,EAAM,OAASP,EAAW,cACxBC,GACC,CAAA,SAAA,CAAAP,EAAA,IAAC4B,EAAA,OAAA,CACC,YAAaf,EAAM,OAAO,SAC1B,MAAO,GAAGA,EAAM,OAAO,QAAQ,EAAA,CACjC,EACCb,EAAA,IAAA6B,EAAA,KAAA,CAAK,KAAK,KAAK,SAAe,kBAAA,EAAO,IACrC7B,MAAA,MAAA,CACC,SAACwB,EAAAA,KAAAK,EAAAA,KAAA,CAAK,KAAK,KAAK,SAAA,CAAA,iBACC7B,EAAA,IAAA,SAAA,CAAQ,SAAMa,EAAA,OAAO,aAAc,CAAA,CAAA,CAAA,CACpD,CACF,CAAA,CAAA,EACF,EACEA,EAAM,OAASP,EAAW,cAC3BwB,EAAc,CAAA,MAAO,OAAQ,OAAO,MAAO,CAAA,EAC1CjB,EAAM,OAASP,EAAW,MAC5BO,EAAM,MACJ,IAAA,EACN,EACAb,EAAAA,IAACC,EAAAA,KAAI,GAAI,GACN,WAAW,YACVD,EAAAA,IAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,EAAA,IAAC+B,EAAA,gBAAA,CACC,KAAMtB,EAAW,WACjB,SAAU,CAAC,IAAM,GAAK,IAAK,EAAI,GAAG,CAAA,GAEtC,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,ECvGMuB,EAAe,CACnB,MAAO,EACP,SAAU,EACV,KAAM,EACN,aAAc,CAChB,EAOaC,GAAmB,CAAC,CAAE,WAAAC,EAAY,SAAAC,KAAsB,CACnE,KAAM,CAACC,EAAsBC,CAAuB,EAAItB,WAEtD,MAAS,EACL,CAACuB,EAAaC,CAAc,EAAIxB,EAAAA,SAASiB,CAAY,EACrD,CAACQ,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAE,2BAAA2B,CAAA,EAA+B/B,EAAA,WAAWC,kBAAgB,EAC5D,CAAE,EAAA+B,CAAE,EAAIC,EAAe,EAEvBC,EAAmC1B,EAAA,YACtC2B,GAAiB,CACZZ,GAAcC,IAChBM,EAAW,EAAI,EACfC,EACEK,EAAuB,OACvB,OAAOZ,CAAQ,EACfD,EACA,CACE,SAAUI,EAAY,SACtB,KAAAQ,EACA,SAAU,aACV,MAAO,MAAA,CACT,EAEC,KAAME,GAAQ,CACTA,EAAI,UACNX,EAAwBW,EAAI,IAAI,EAChCT,EAAgBU,IAAU,CACxB,GAAGA,EACH,MAAOD,EAAI,KAAK,MAChB,aAAcA,EAAI,KAAK,aACvB,KAAMA,EAAI,KAAK,YAAA,EACf,EACJ,CACD,EACA,MAAO3B,GAAU,CACV6B,EAAAP,EAAU,iBAAiB,EAAGtB,CAAK,EACzC,QAAQ,IAAIA,CAAK,CAClB,CAAA,EACA,QAAQ,IAAMoB,EAAW,EAAK,CAAC,EAEtC,EACA,CAACH,EAAaI,EAA4BP,EAAUD,EAAYS,CAAC,CACnE,EAEMQ,EAAehC,cAAa2B,GAAiB,CACjDP,EAAgBU,IAAU,CACxB,GAAGA,EACH,aAAcH,CAAA,EACd,CACJ,EAAG,EAAE,EAELxB,OAAAA,EAAAA,UAAU,IAAM,CACVgB,EAAY,OAASA,EAAY,cACnCO,EAAiCP,EAAY,YAAY,CAC3D,EACC,CACDA,EAAY,aACZA,EAAY,KACZO,CAAA,CACD,EAEDvB,EAAAA,UAAU,IAAM,CACdiB,EAAeP,CAAY,EAC3Ba,EAAiCb,EAAa,IAAI,CAAA,EAEjD,CAACE,CAAU,CAAC,EAER,CACL,YAAAI,EACA,qBAAAF,EACA,QAAAI,EACA,aAAAW,CACF,CACF,EC1FaC,GAAY1D,EAAO6B,CAAG;AAAA;AAAA;AAAA,gBAGnB,CAAC,CAAE,MAAA5B,KAAYA,EAAM,KAAK;AAAA,ECQpC0D,GAAgB3D,EAAO;AAAA;AAAA,aAEhB,CAAC,CAAE,MAAAC,KAAYA,EAAM,KAAK;AAAA;AAAA;AAAA,EAKjC2D,GAAe5D,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBtB6D,GAA0C,CAAC,CAAE,KAAAC,KAAW,CAC5D,MAAMC,EAAc,IACX,IAAM,KAAK,MAAM,KAAK,SAAW,QAAQ,EAAE,SAAS,EAAE,EAGzDC,EAAWF,EAAK,OAAO,CAAC,EAAE,YAAY,EAE5C,OACGxD,EAAAA,IAAAsD,GAAA,CAAa,MAAO,CAAE,gBAAiBG,EAAA,GACtC,SAACzD,EAAAA,IAAA6B,EAAAA,KAAA,CAAK,KAAM,KAAO,UAAS,CAAA,EAC9B,CAEJ,EAEa8B,GAA4C,CAAC,CAAE,SAAAC,KAAe,CACzE,KAAM,CAAE,KAAAC,EAAM,KAAAC,EAAM,WAAAC,CAAe,EAAAH,EAC7BjE,EAAQqE,EAAS,EAEvB,OAAKF,QAKFT,GACC,CAAA,SAAArD,EAAA,IAACoD,IACC,SAAC5B,EAAA,KAAAD,EAAA,CAAI,KAAM,GACR,SAAA,CAAAsC,EAAK,OACH7D,EAAAA,IAAAiE,EAAA,OAAA,CAAO,IAAKJ,EAAK,OAAQ,IAAK,eAAeA,EAAK,IAAI,EAAI,CAAA,EAE3D7D,EAAA,IAACuD,GAAkB,CAAA,KAAMM,EAAK,KAAM,EAGrCrC,EAAA,KAAA0C,EAAA,CAAM,gBAAgB,aAAa,YAAY,aAC9C,SAAA,CAAAlE,EAAA,IAAC6B,EAAK,KAAA,CAAA,SAAQ,GAAC,MAAOlC,EAAM,MAAO,UAAU,OAAO,KAAK,KACtD,SAAAwE,EAAWJ,EAAY1D,EAAW,iBAAiB,EACtD,QAECwB,EAAAA,KAAK,CAAA,UAAU,OAAO,KAAK,KACzB,SACHiC,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAxBO,IA0BX,ECjFaM,GAAc1E,EAAOwE,CAAK;AAAA;AAAA;AAAA,EAK1BG,GAAc3E,EAAOiC,OAAK;AAAA;AAAA,EAI1B2C,GAA4B5E,EAAO;AAAA;AAAA,ECGnC6E,GAA8B,CAAC,CAC1C,SAAApC,EACA,WAAAD,CACF,IAAa,OACX,KAAM,CAAE,YAAAI,EAAa,QAAAE,EAAS,aAAAW,EAAc,qBAAAf,CAAA,EAC1CH,GAAiB,CACf,WAAAC,EACA,SAAAC,CAAA,CACD,EACG,CAAE,EAAAQ,CAAE,EAAIC,EAAe,EAG3B,OAAA5C,EAAAA,IAACoE,GACE,CAAA,SAAA5B,EACExC,EAAAA,IAAAwE,EAAAA,KAAA,CAAK,CAAA,IACHlF,EAAA8C,GAAwB,CAAC,IAAzB,YAAA9C,EAA6B,QAAS,EAEvCkC,EAAAA,KAAAiD,EAAAA,SAAA,CAAA,SAAA,CAAAzE,MAACqE,GAAY,CAAA,MAAO,EACjB,SAAA1B,EAAE,+BAA+B,EACpC,GACEP,GAAwB,IAAI,IAAKwB,GACjC5D,EAAAA,IAAC2D,GAAgB,CAAA,SAAAC,CAAA,CAAoB,CACtC,EACAtB,EAAY,MAAQA,EAAY,gBAC9BgC,GACC,CAAA,SAAAtE,EAAA,IAAC0E,EAAA,CACC,MAAOpC,EAAY,MACnB,QAASA,EAAY,SACrB,YAAaA,EAAY,aACzB,OAAQa,CAAA,CAAA,CAEZ,CAAA,CAAA,CAEJ,CAAA,EACE,KACN,CAEJ,ECzCMwB,EAAkB,IAAM,QAAQ,KAAK,eAAe,EAY7CC,EAAuBC,EAAAA,cAAyC,CAC3E,eAAgB,CAAC,EACjB,gBAAiB,KACjB,mBAAoBF,EACpB,WAAY,KACZ,cAAeA,EACf,SAAU,OACV,SAAU,MACZ,CAAC,EAMYG,GAAuB,CAAC,CACnC,SAAAC,EACA,eAAAC,CACF,IAAqB,OACnB,KAAM,CAACC,EAAiBC,CAAkB,EACxCnE,EAAAA,SAAuD,IAAI,EACvD,CAACmB,EAAYiD,CAAa,EAC9BpE,EAAAA,SAAkD,IAAI,EAClD,CAAE,GAAAW,CAAG,EAAI0D,EAA0B,EACnCC,EAAqBL,GAAA,YAAAA,EAAgB,GAAG,GACxCM,GAAgBhG,EAAA+F,GAAA,YAAAA,EAAoB,YAApB,YAAA/F,EAA+B,KACnD,CAAC,CAAE,KAAAiG,CAAK,IAAMA,IAASC,EAAa,MAEhCC,EAAWC,EAAqC,CACpD,eAAAV,EACA,gBAAAC,EACA,aAAcO,EAAa,MAAA,CAC5B,EAGDlE,OAAAA,EAAAA,UAAU,IAAM,CACV+D,GAAA,MAAAA,EAAoB,IAAM,CAACJ,GAC7BC,EAAmBG,EAAmB,EAAE,CAEzC,EAAA,CAACA,GAAA,YAAAA,EAAoB,GAAIJ,CAAe,CAAC,EAE5C3D,EAAAA,UAAU,IAAM,CACVgE,GAAA,MAAAA,EAAe,IAAM,CAACpD,GACxBiD,EAAcG,EAAc,EAAE,CAE/B,EAAA,CAACA,GAAA,YAAAA,EAAe,GAAIpD,CAAU,CAAC,EAGhClC,EAAA,IAAC4E,EAAqB,SAArB,CACC,MAAO,CACL,eAAAI,EACA,gBAAAC,EACA,mBAAAC,EACA,WAAAhD,EACA,cAAAiD,EACA,SAAAM,EACA,SAAU,OAAO/D,CAAE,CACrB,EAEC,SAAAqD,CAAA,CACH,CAEJ,EAEaY,GAAyB,IAAM,CACpC,MAAAC,EAAUjF,aAAWiE,CAAoB,EAE/C,GAAI,CAACA,EACH,MAAM,IAAI,MACR,qEACF,EAGK,OAAAgB,CACT,EC7FaC,GAAuBC,OAAK,IAAM,CAC7C,KAAM,CAAE,SAAA3D,EAAU,SAAAsD,CAAS,EAAIE,GAAuB,EAGpD,OAAA3F,EAAAA,IAAAyE,EAAAA,SAAA,CACG,YAAYgB,GACXzF,EAAA,IAACuE,GAAA,CACC,SAAApC,EACA,WAAYsD,CAAA,CAAA,EAGlB,CAEJ,CAAC,ECRYM,GAAwCD,EAAA,KACnD,CAAC,CAAE,eAAAd,CAAA,IAEChF,EAAAA,IAAC8E,GAAqB,CAAA,eAAAE,EACpB,SAAChF,EAAA,IAAA,UAAA,CAAQ,UAAU,iBACjB,SAAAA,EAAA,IAAC6F,GAAqB,CAAA,CAAA,CACxB,CAAA,EACF,CAGN,ECJMG,GAAiBtG,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBjBuG,GAAiC,CAAC,CAAE,gBAAAC,KAAsB,CAC/D,KAAA,CAAE,CAAE,EAAItD,EAAe,EAG3B,OAAA5C,EAAA,IAACgG,GAAe,CAAA,UAAU,yBACxB,SAAAhG,EAAAA,IAACoD,EACC,CAAA,SAAApD,EAAAA,IAACuB,EACC,IAAA,CAAA,SAAAC,EAAA,KAACvB,EAAI,IAAA,CAAA,GAAI,GACN,SAAA,CAAAiG,IAAmBA,GAAA,YAAAA,EAAiB,QAAS,GAC3C1E,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxB,EAAAA,IAAC2B,SAAM,MAAO,EAAG,GAAG,KACjB,SAAA,EAAE,gCAAgC,EACrC,EACA3B,EAAAA,IAACmG,IAAa,cAAe,EAC1B,0BAAiB,IAAKC,GACrBpG,OAAAA,OAAAA,EAAAA,IAACqG,GACC,CAAA,SAAArG,EAAA,IAACsG,EAAA,cAAA,CACC,OAAQnG,EACR,GAAIiG,GAAA,YAAAA,EAAS,GACb,MAEEpG,EAAAA,IAACuG,EAAK,CAAA,GAAI,aAAYjH,EAAA8G,GAAA,YAAAA,EAAS,aAAa,KAAtB,YAAA9G,EAA0B,EAAE,GAC/C,SAAA8G,GAAA,MAAAA,EAAS,YACRpG,EAAA,IAAC+B,EAAA,CACC,KAAMqE,GAAA,YAAAA,EAAS,YACf,IAAKA,GAAA,YAAAA,EAAS,KACd,SAAU,CAAC,IAAK,IAAK,GAAG,CAAA,CAAA,EAGzBpG,EAAA,IAAAwG,EAAA,CAAA,CAAqB,CAE1B,CAAA,EAEF,MAEE,iBAAM,OACHxG,MAAA,MAAA,CAAI,UAAU,eAAgB,SAAA,EAAE,MAAM,CAAA,CAAE,EAEzCA,EAAA,IAACyG,GAAA,CACC,MAAOL,GAAA,YAAAA,EAAS,MAChB,SAAUA,GAAA,YAAAA,EAAS,UACnB,QAASA,GAAA,YAAAA,EAAS,QAAA,CAAA,EAIxB,MACGpG,EAAA,IAAAuG,EAAA,CAAK,GAAI,YAAYH,EAAQ,EAAE,GAC9B,SAAApG,EAAA,IAAC2B,QAAM,CAAA,MAAO,EAAG,GAAG,KAAK,UAAU,QAChC,SAAAyE,GAAA,YAAAA,EAAS,KACZ,CACF,CAAA,CAAA,CAAA,GAnCYA,GAAA,YAAAA,EAAS,EAsC3B,GAEJ,CAAA,CAAA,EACF,EAGFpG,EAAAA,IAAC,MAAI,CAAA,UAAU,oBACb,SAAAA,EAAA,IAAC0G,EAAA,CACC,UAAW,EAAE,0BAA0B,EACvC,OAAQ,CACN,SAAU,EACV,SAAU,aACV,MAAO,KACT,EACA,cAAe,CAAA,CAAA,CAEnB,CAAA,CAAA,EACF,CAAA,CACF,CACF,CAAA,EACF,CAEJ,EC5GMC,GAAkBjH,EAAO;AAAA;AAAA;AAAA;AAAA,EAMzBkH,GAAkB,IAEpB5G,MAAC2G,IACC,SAAC3G,EAAAA,IAAA6G,GAAA,CAAS,MAAO,OAAQ,OAAQ,IAAK,CACxC,CAAA"}