{"version":3,"file":"web-DNeHyvcr.js","sources":["../../node_modules/@capacitor/local-notifications/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class LocalNotificationsWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.pending = [];\n        this.deliveredNotifications = [];\n        this.hasNotificationSupport = () => {\n            if (!('Notification' in window) || !Notification.requestPermission) {\n                return false;\n            }\n            if (Notification.permission !== 'granted') {\n                // don't test for `new Notification` if permission has already been granted\n                // otherwise this sends a real notification on supported browsers\n                try {\n                    new Notification('');\n                }\n                catch (e) {\n                    if (e.name == 'TypeError') {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        };\n    }\n    async getDeliveredNotifications() {\n        const deliveredSchemas = [];\n        for (const notification of this.deliveredNotifications) {\n            const deliveredSchema = {\n                title: notification.title,\n                id: parseInt(notification.tag),\n                body: notification.body,\n            };\n            deliveredSchemas.push(deliveredSchema);\n        }\n        return {\n            notifications: deliveredSchemas,\n        };\n    }\n    async removeDeliveredNotifications(delivered) {\n        for (const toRemove of delivered.notifications) {\n            const found = this.deliveredNotifications.find(n => n.tag === String(toRemove.id));\n            found === null || found === void 0 ? void 0 : found.close();\n            this.deliveredNotifications = this.deliveredNotifications.filter(() => !found);\n        }\n    }\n    async removeAllDeliveredNotifications() {\n        for (const notification of this.deliveredNotifications) {\n            notification.close();\n        }\n        this.deliveredNotifications = [];\n    }\n    async createChannel() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async deleteChannel() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async listChannels() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async schedule(options) {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        for (const notification of options.notifications) {\n            this.sendNotification(notification);\n        }\n        return {\n            notifications: options.notifications.map(notification => ({\n                id: notification.id,\n            })),\n        };\n    }\n    async getPending() {\n        return {\n            notifications: this.pending,\n        };\n    }\n    async registerActionTypes() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async cancel(pending) {\n        this.pending = this.pending.filter(notification => !pending.notifications.find(n => n.id === notification.id));\n    }\n    async areEnabled() {\n        const { display } = await this.checkPermissions();\n        return {\n            value: display === 'granted',\n        };\n    }\n    async requestPermissions() {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        const display = this.transformNotificationPermission(await Notification.requestPermission());\n        return { display };\n    }\n    async checkPermissions() {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        const display = this.transformNotificationPermission(Notification.permission);\n        return { display };\n    }\n    transformNotificationPermission(permission) {\n        switch (permission) {\n            case 'granted':\n                return 'granted';\n            case 'denied':\n                return 'denied';\n            default:\n                return 'prompt';\n        }\n    }\n    sendPending() {\n        var _a;\n        const toRemove = [];\n        const now = new Date().getTime();\n        for (const notification of this.pending) {\n            if (((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) &&\n                notification.schedule.at.getTime() <= now) {\n                this.buildNotification(notification);\n                toRemove.push(notification);\n            }\n        }\n        this.pending = this.pending.filter(notification => !toRemove.find(n => n === notification));\n    }\n    sendNotification(notification) {\n        var _a;\n        if ((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) {\n            const diff = notification.schedule.at.getTime() - new Date().getTime();\n            this.pending.push(notification);\n            setTimeout(() => {\n                this.sendPending();\n            }, diff);\n            return;\n        }\n        this.buildNotification(notification);\n    }\n    buildNotification(notification) {\n        const localNotification = new Notification(notification.title, {\n            body: notification.body,\n            tag: String(notification.id),\n        });\n        localNotification.addEventListener('click', this.onClick.bind(this, notification), false);\n        localNotification.addEventListener('show', this.onShow.bind(this, notification), false);\n        localNotification.addEventListener('close', () => {\n            this.deliveredNotifications = this.deliveredNotifications.filter(() => !this);\n        }, false);\n        this.deliveredNotifications.push(localNotification);\n        return localNotification;\n    }\n    onClick(notification) {\n        const data = {\n            actionId: 'tap',\n            notification,\n        };\n        this.notifyListeners('localNotificationActionPerformed', data);\n    }\n    onShow(notification) {\n        this.notifyListeners('localNotificationReceived', notification);\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["LocalNotificationsWeb","WebPlugin","e","deliveredSchemas","notification","deliveredSchema","delivered","toRemove","found","options","pending","n","display","permission","_a","now","diff","localNotification","data"],"mappings":"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","x_google_ignoreList":[0]}