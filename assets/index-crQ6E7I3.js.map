{"version":3,"file":"index-crQ6E7I3.js","sources":["../../src/components/Consultations/List/ConsultationsContainer/Items/Item/index.tsx","../../src/components/Consultations/List/ConsultationsContainer/Items/index.tsx","../../src/components/Consultations/List/ConsultationsContainer/index.tsx","../../src/hooks/consultations/useFetchConsultations.ts","../../src/components/Consultations/List/ConsultationsProvider.tsx","../../src/pages/consultations/index.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport ConsultationCard from \"@/components/Consultations/ConsultationCard\";\n\ninterface Props {\n  consultation: API.Consultation;\n  actions?: ReactNode;\n}\n\nconst ConsultationsContainerItem = ({ consultation }: Props) => {\n  return <ConsultationCard consultation={consultation} showPrice />;\n};\n\nexport default ConsultationsContainerItem;\n","import { Col, Row } from \"react-grid-system\";\nimport { Consultation, PaginatedMetaList } from \"@escolalms/sdk/lib/types/api\";\nimport ConsultationsContainerItem from \"./Item\";\nimport Pagination from \"@/components/Common/Pagination\";\nimport EntitySkeletonList from \"@/components/Skeletons/EntityList\";\n\ntype Props = {\n  consultations: PaginatedMetaList<Consultation>;\n  handlePageChange: (page: number) => void;\n  loading?: boolean;\n};\n\nconst ConsultationsContainerItems: React.FC<Props> = ({\n  consultations,\n  loading,\n  handlePageChange,\n}) => {\n  const consultationsMeta = consultations?.meta;\n\n  if (loading) {\n    return <EntitySkeletonList />;\n  }\n\n  return (\n    <>\n      <Row\n        style={{\n          gap: \"30px 0\",\n          marginBottom: \"30px\",\n        }}\n      >\n        {!loading &&\n          consultations?.data?.map((consultation) => (\n            <Col md={6} lg={4} xl={3} key={consultation.id}>\n              <ConsultationsContainerItem consultation={consultation} />\n            </Col>\n          ))}\n      </Row>\n      {consultationsMeta &&\n        (Number(consultationsMeta?.total) || 0) >\n          (Number(consultationsMeta?.per_page) || 0) && (\n          <Pagination\n            total={consultationsMeta.total}\n            perPage={Number(consultationsMeta.per_page)}\n            currentPage={consultationsMeta.current_page}\n            onPage={(i) => handlePageChange(i)}\n          />\n        )}\n      <br />\n    </>\n  );\n};\n\nexport default ConsultationsContainerItems;\n","import React from \"react\";\nimport CategoriesSection from \"../../../Categories/CategoriesSection\";\nimport ConsultationsContainerItems from \"./Items\";\nimport CoursesFilters from \"@/components/Courses/CoursesCollection/filters\";\nimport { MobileDrawerTypes } from \"@/components/Courses/CoursesCollection\";\nimport useFilter from \"@/hooks/courses/useFilter\";\nimport SelectedCategories from \"@/components/Filters/SelectedCategories\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport MobileDrawer from \"@/components/_App/MobileDrawer\";\nimport MobileDrawerContent from \"@/components/Courses/CoursesCollection/coursesDrawer\";\n\nconst ConsultationsContainer = () => {\n  const [mobileDrawerState, setMobileDrawerState] = React.useState<{\n    showDrawer: boolean;\n    type: keyof typeof MobileDrawerTypes;\n  }>({\n    showDrawer: false,\n    type: MobileDrawerTypes.categories,\n  });\n  const {\n    entities,\n    loading,\n    prevCategories,\n    handleSortChange,\n    handlePageChange,\n    handleRemoveCategory,\n    handleCategoryChange,\n    onClearCategories,\n    params,\n    categoryTree,\n  } = useFilter(\"consultations\");\n\n  return (\n    <>\n      <CoursesFilters\n        prevCategories={prevCategories}\n        onClearCategories={onClearCategories}\n        handleCategoryChange={handleCategoryChange}\n        categories={categoryTree.list || []}\n        handleSortChange={handleSortChange}\n        params={params}\n        setMobileDrawerState={setMobileDrawerState}\n        parentState={mobileDrawerState}\n      />\n      {prevCategories.length > 0 && (\n        <SelectedCategories\n          onClearCategories={onClearCategories}\n          prevCategories={prevCategories}\n          handleRemoveCategory={handleRemoveCategory}\n        />\n      )}\n\n      <ConsultationsContainerItems\n        consultations={\n          (entities as API.PaginatedMetaList<API.Consultation>) || []\n        }\n        loading={loading}\n        handlePageChange={handlePageChange}\n      />\n\n      {categoryTree && (\n        <>\n          <CategoriesSection\n            categories={\n              categoryTree.list?.filter((category) => !!category.icon) || []\n            }\n            entity=\"consultations\"\n          />\n        </>\n      )}\n\n      <MobileDrawer\n        isOpen={mobileDrawerState.showDrawer}\n        onClose={() =>\n          setMobileDrawerState({\n            showDrawer: false,\n            type: MobileDrawerTypes.categories,\n          })\n        }\n        height={\n          mobileDrawerState.type === MobileDrawerTypes.categories\n            ? \"40vh\"\n            : \"12vh\"\n        }\n      >\n        <MobileDrawerContent\n          showDrawer={mobileDrawerState.showDrawer}\n          type={mobileDrawerState.type}\n          prevCategories={prevCategories}\n          onClearCategories={onClearCategories}\n          handleCategoryChange={handleCategoryChange}\n          categories={categoryTree.list || []}\n          handleSortChange={handleSortChange}\n          setMobileDrawerState={setMobileDrawerState}\n        />\n      </MobileDrawer>\n    </>\n  );\n};\n\nexport default ConsultationsContainer;\n","import { useContext, useEffect, useState } from \"react\";\nimport { EscolaLMSContext } from \"@escolalms/sdk/lib/react\";\nimport {\n  Consultation,\n  CourseParams,\n  PaginatedMetaList,\n} from \"@escolalms/sdk/lib/types/api\";\n\nconst useFetchConsultations = (params?: CourseParams, noAutoFech?: boolean) => {\n  const [consultations, setConsultations] =\n    useState<PaginatedMetaList<Consultation>>();\n  const [loading, setLoading] = useState(true);\n  const { fetchConsultations } = useContext(EscolaLMSContext);\n\n  const fetchConsultationsData = async (params: CourseParams) => {\n    setLoading(true);\n    try {\n      const request = await fetchConsultations(params);\n\n      if (request) {\n        setConsultations(request as PaginatedMetaList<Consultation>);\n      }\n    } catch (e) {\n      console.error(e);\n      setConsultations(undefined);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    params && !noAutoFech && fetchConsultationsData(params);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchConsultations]);\n\n  return { consultations, loading, fetchConsultationsData };\n};\n\nexport default useFetchConsultations;\n","import { PropsWithChildren, useEffect, useMemo, useState } from \"react\";\n\nimport { ConsultationsContext } from \"./ConsultationsContext\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { COURSES_ON_PAGE } from \"@/config/courses\";\nimport useFetchConsultations from \"@/hooks/consultations/useFetchConsultations\";\nimport { API } from \"@escolalms/sdk/lib\";\nimport qs from \"query-string\";\n\nconst parseParams = (params: API.CourseParams = {}) => {\n  return qs.stringify(params);\n};\n\nconst ConsultationsProvider: React.FC<PropsWithChildren> = (props) => {\n  const { children } = props;\n  const [params, setParams] = useState<API.CourseParams>({\n    page: 1,\n    per_page: COURSES_ON_PAGE,\n    order_by: \"created_at\",\n  });\n  const { consultations, loading, fetchConsultationsData } =\n    useFetchConsultations(params, true);\n\n  const location = useLocation();\n  const { push } = useHistory();\n  const searchParams = qs.parse(location.search);\n  const parsedParams = useMemo(() => {\n    return (\n      searchParams && {\n        ...searchParams,\n        order_by: \"created_at\",\n      }\n    );\n  }, [searchParams]);\n\n  const newParams = parsedParams ? parsedParams : params;\n\n  useEffect(() => {\n    push(`${location.pathname}?${parseParams(newParams)}`);\n    fetchConsultationsData(newParams);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.search]);\n\n  return (\n    <ConsultationsContext.Provider\n      value={{ params, setParams, consultations, loading }}\n    >\n      {children}\n    </ConsultationsContext.Provider>\n  );\n};\n\nexport default ConsultationsProvider;\n","import Layout from \"@/components/_App/Layout\";\nimport ConsultationsContainer from \"@/components/Consultations/List/ConsultationsContainer\";\nimport ConsultationsProvider from \"@/components/Consultations/List/ConsultationsProvider\";\nimport { useTranslation } from \"react-i18next\";\nimport EntityPageWrapper from \"@/components/Layouts\";\n\nconst ConsultationsPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Layout metaTitle={t(\"ConsultationsPageMeta\")}>\n      <ConsultationsProvider>\n        <EntityPageWrapper title={t(\"ConsultationsPageMeta\")}>\n          <ConsultationsContainer />\n        </EntityPageWrapper>\n      </ConsultationsProvider>\n    </Layout>\n  );\n};\n\nexport default ConsultationsPage;\n"],"names":["ConsultationsContainerItem","consultation","jsx","ConsultationCard","ConsultationsContainerItems","consultations","loading","handlePageChange","consultationsMeta","EntitySkeletonList","jsxs","Fragment","Row","_a","Col","Pagination","i","ConsultationsContainer","mobileDrawerState","setMobileDrawerState","React","MobileDrawerTypes","entities","prevCategories","handleSortChange","handleRemoveCategory","handleCategoryChange","onClearCategories","params","categoryTree","useFilter","CoursesFilters","SelectedCategories","CategoriesSection","category","MobileDrawer","MobileDrawerContent","useFetchConsultations","noAutoFech","setConsultations","useState","setLoading","fetchConsultations","useContext","EscolaLMSContext","fetchConsultationsData","request","e","useEffect","parseParams","qs","ConsultationsProvider","props","children","setParams","COURSES_ON_PAGE","location","useLocation","push","useHistory","searchParams","parsedParams","useMemo","newParams","ConsultationsContext","ConsultationsPage","t","useTranslation","Layout","EntityPageWrapper"],"mappings":"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"}